function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var digitUiReactComponents = require('@egovernments/digit-ui-react-components');
var React = require('react');
var React__default = _interopDefault(React);
var reactI18next = require('react-i18next');
var reactRouterDom = require('react-router-dom');
var reactQuery = require('react-query');
var reactHookForm = require('react-hook-form');

function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}

var newConfig = [{
  "head": "PT_ASSEMBLY_DET",
  "body": [{
    "type": "component",
    "route": "property-type",
    "isMandatory": true,
    "component": "CPTPropertyAssemblyDetails",
    "texts": {
      "headerCaption": "",
      "header": "PT_ASSEMBLY_DET",
      "cardText": "",
      "submitBarLabel": "PT_COMMONS_NEXT"
    },
    "nextStep": {
      "COMMON_PROPTYPE_BUILTUP_INDEPENDENTPROPERTY": "landarea",
      "COMMON_PROPTYPE_BUILTUP_SHAREDPROPERTY": "PtUnits",
      "COMMON_PROPTYPE_VACANT": "area"
    },
    "key": "assemblyDet",
    "withoutLabel": true
  }]
}, {
  "head": "PT_LOCATION_DETAILS",
  "body": [{
    "type": "component",
    "route": "property-type",
    "isMandatory": true,
    "component": "CPTPropertyLocationDetails",
    "texts": {
      "headerCaption": "",
      "header": "PT_LOCATION_DETAILS",
      "cardText": "",
      "submitBarLabel": "PT_COMMONS_NEXT"
    },
    "nextStep": {
      "COMMON_PROPTYPE_BUILTUP_INDEPENDENTPROPERTY": "landarea",
      "COMMON_PROPTYPE_BUILTUP_SHAREDPROPERTY": "PtUnits",
      "COMMON_PROPTYPE_VACANT": "area"
    },
    "key": "locationDet",
    "withoutLabel": true
  }]
}, {
  "head": "PT_OWNERSHIP_DETAILS",
  "body": [{
    "type": "component",
    "route": "institutional-owner-address",
    "isMandatory": true,
    "component": "CPTPropertyOwnerDetails",
    "texts": {
      "headerCaption": "PT_OWNERS_DETAILS",
      "header": "PT_OWNERS_ADDRESS",
      "cardText": "",
      "submitBarLabel": "PT_COMMON_NEXT"
    },
    "key": "owners",
    "withoutLabel": true,
    "nextStep": "institutional-proof-of-identity",
    "hideInEmployee": true
  }]
}];

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var lodash = createCommonjsModule(function (module, exports) {
  (function () {
    var undefined$1;

    var VERSION = '4.17.21';

    var LARGE_ARRAY_SIZE = 200;

    var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function',
      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';

    var HASH_UNDEFINED = '__lodash_hash_undefined__';

    var MAX_MEMOIZE_SIZE = 500;

    var PLACEHOLDER = '__lodash_placeholder__';

    var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

    var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

    var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

    var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

    var HOT_COUNT = 800,
      HOT_SPAN = 16;

    var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

    var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

    var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

    var wrapFlags = [['ary', WRAP_ARY_FLAG], ['bind', WRAP_BIND_FLAG], ['bindKey', WRAP_BIND_KEY_FLAG], ['curry', WRAP_CURRY_FLAG], ['curryRight', WRAP_CURRY_RIGHT_FLAG], ['flip', WRAP_FLIP_FLAG], ['partial', WRAP_PARTIAL_FLAG], ['partialRight', WRAP_PARTIAL_RIGHT_FLAG], ['rearg', WRAP_REARG_FLAG]];

    var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';
    var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

    var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

    var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

    var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

    var reTrimStart = /^\s+/;

    var reWhitespace = /\s/;

    var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

    var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

    var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;

    var reEscapeChar = /\\(\\)?/g;

    var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

    var reFlags = /\w*$/;

    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

    var reIsBinary = /^0b[01]+$/i;

    var reIsHostCtor = /^\[object .+?Constructor\]$/;

    var reIsOctal = /^0o[0-7]+$/i;

    var reIsUint = /^(?:0|[1-9]\d*)$/;

    var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

    var reNoMatch = /($^)/;

    var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

    var rsAstralRange = "\\ud800-\\udfff",
      rsComboMarksRange = "\\u0300-\\u036f",
      reComboHalfMarksRange = "\\ufe20-\\ufe2f",
      rsComboSymbolsRange = "\\u20d0-\\u20ff",
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = "\\u2700-\\u27bf",
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = "\\u2000-\\u206f",
      rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = "\\ufe0e\\ufe0f",
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

    var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = "\\ud83c[\\udffb-\\udfff]",
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}",
      rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]",
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = "\\u200d";

    var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

    var reApos = RegExp(rsApos, 'g');

    var reComboMark = RegExp(rsCombo, 'g');

    var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

    var reUnicodeWord = RegExp([rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')', rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')', rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower, rsUpper + '+' + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji].join('|'), 'g');

    var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']');

    var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

    var contextProps = ['Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array', 'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object', 'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'];

    var templateCounter = -1;

    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

    var cloneableTags = {};
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;

    var deburredLetters = {
      '\xc0': 'A',
      '\xc1': 'A',
      '\xc2': 'A',
      '\xc3': 'A',
      '\xc4': 'A',
      '\xc5': 'A',
      '\xe0': 'a',
      '\xe1': 'a',
      '\xe2': 'a',
      '\xe3': 'a',
      '\xe4': 'a',
      '\xe5': 'a',
      '\xc7': 'C',
      '\xe7': 'c',
      '\xd0': 'D',
      '\xf0': 'd',
      '\xc8': 'E',
      '\xc9': 'E',
      '\xca': 'E',
      '\xcb': 'E',
      '\xe8': 'e',
      '\xe9': 'e',
      '\xea': 'e',
      '\xeb': 'e',
      '\xcc': 'I',
      '\xcd': 'I',
      '\xce': 'I',
      '\xcf': 'I',
      '\xec': 'i',
      '\xed': 'i',
      '\xee': 'i',
      '\xef': 'i',
      '\xd1': 'N',
      '\xf1': 'n',
      '\xd2': 'O',
      '\xd3': 'O',
      '\xd4': 'O',
      '\xd5': 'O',
      '\xd6': 'O',
      '\xd8': 'O',
      '\xf2': 'o',
      '\xf3': 'o',
      '\xf4': 'o',
      '\xf5': 'o',
      '\xf6': 'o',
      '\xf8': 'o',
      '\xd9': 'U',
      '\xda': 'U',
      '\xdb': 'U',
      '\xdc': 'U',
      '\xf9': 'u',
      '\xfa': 'u',
      '\xfb': 'u',
      '\xfc': 'u',
      '\xdd': 'Y',
      '\xfd': 'y',
      '\xff': 'y',
      '\xc6': 'Ae',
      '\xe6': 'ae',
      '\xde': 'Th',
      '\xfe': 'th',
      '\xdf': 'ss',
      "\u0100": 'A',
      "\u0102": 'A',
      "\u0104": 'A',
      "\u0101": 'a',
      "\u0103": 'a',
      "\u0105": 'a',
      "\u0106": 'C',
      "\u0108": 'C',
      "\u010A": 'C',
      "\u010C": 'C',
      "\u0107": 'c',
      "\u0109": 'c',
      "\u010B": 'c',
      "\u010D": 'c',
      "\u010E": 'D',
      "\u0110": 'D',
      "\u010F": 'd',
      "\u0111": 'd',
      "\u0112": 'E',
      "\u0114": 'E',
      "\u0116": 'E',
      "\u0118": 'E',
      "\u011A": 'E',
      "\u0113": 'e',
      "\u0115": 'e',
      "\u0117": 'e',
      "\u0119": 'e',
      "\u011B": 'e',
      "\u011C": 'G',
      "\u011E": 'G',
      "\u0120": 'G',
      "\u0122": 'G',
      "\u011D": 'g',
      "\u011F": 'g',
      "\u0121": 'g',
      "\u0123": 'g',
      "\u0124": 'H',
      "\u0126": 'H',
      "\u0125": 'h',
      "\u0127": 'h',
      "\u0128": 'I',
      "\u012A": 'I',
      "\u012C": 'I',
      "\u012E": 'I',
      "\u0130": 'I',
      "\u0129": 'i',
      "\u012B": 'i',
      "\u012D": 'i',
      "\u012F": 'i',
      "\u0131": 'i',
      "\u0134": 'J',
      "\u0135": 'j',
      "\u0136": 'K',
      "\u0137": 'k',
      "\u0138": 'k',
      "\u0139": 'L',
      "\u013B": 'L',
      "\u013D": 'L',
      "\u013F": 'L',
      "\u0141": 'L',
      "\u013A": 'l',
      "\u013C": 'l',
      "\u013E": 'l',
      "\u0140": 'l',
      "\u0142": 'l',
      "\u0143": 'N',
      "\u0145": 'N',
      "\u0147": 'N',
      "\u014A": 'N',
      "\u0144": 'n',
      "\u0146": 'n',
      "\u0148": 'n',
      "\u014B": 'n',
      "\u014C": 'O',
      "\u014E": 'O',
      "\u0150": 'O',
      "\u014D": 'o',
      "\u014F": 'o',
      "\u0151": 'o',
      "\u0154": 'R',
      "\u0156": 'R',
      "\u0158": 'R',
      "\u0155": 'r',
      "\u0157": 'r',
      "\u0159": 'r',
      "\u015A": 'S',
      "\u015C": 'S',
      "\u015E": 'S',
      "\u0160": 'S',
      "\u015B": 's',
      "\u015D": 's',
      "\u015F": 's',
      "\u0161": 's',
      "\u0162": 'T',
      "\u0164": 'T',
      "\u0166": 'T',
      "\u0163": 't',
      "\u0165": 't',
      "\u0167": 't',
      "\u0168": 'U',
      "\u016A": 'U',
      "\u016C": 'U',
      "\u016E": 'U',
      "\u0170": 'U',
      "\u0172": 'U',
      "\u0169": 'u',
      "\u016B": 'u',
      "\u016D": 'u',
      "\u016F": 'u',
      "\u0171": 'u',
      "\u0173": 'u',
      "\u0174": 'W',
      "\u0175": 'w',
      "\u0176": 'Y',
      "\u0177": 'y',
      "\u0178": 'Y',
      "\u0179": 'Z',
      "\u017B": 'Z',
      "\u017D": 'Z',
      "\u017A": 'z',
      "\u017C": 'z',
      "\u017E": 'z',
      "\u0132": 'IJ',
      "\u0133": 'ij',
      "\u0152": 'Oe',
      "\u0153": 'oe',
      "\u0149": "'n",
      "\u017F": 's'
    };

    var htmlEscapes = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;'
    };

    var htmlUnescapes = {
      '&amp;': '&',
      '&lt;': '<',
      '&gt;': '>',
      '&quot;': '"',
      '&#39;': "'"
    };

    var stringEscapes = {
      '\\': '\\',
      "'": "'",
      '\n': 'n',
      '\r': 'r',
      "\u2028": 'u2028',
      "\u2029": 'u2029'
    };

    var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

    var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;

    var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

    var root = freeGlobal || freeSelf || Function('return this')();

    var freeExports =  exports && !exports.nodeType && exports;

    var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;

    var moduleExports = freeModule && freeModule.exports === freeExports;

    var freeProcess = moduleExports && freeGlobal.process;

    var nodeUtil = function () {
      try {
        var types = freeModule && freeModule.require && freeModule.require('util').types;
        if (types) {
          return types;
        }

        return freeProcess && freeProcess.binding && freeProcess.binding('util');
      } catch (e) {}
    }();

    var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

    function apply(func, thisArg, args) {
      switch (args.length) {
        case 0:
          return func.call(thisArg);
        case 1:
          return func.call(thisArg, args[0]);
        case 2:
          return func.call(thisArg, args[0], args[1]);
        case 3:
          return func.call(thisArg, args[0], args[1], args[2]);
      }
      return func.apply(thisArg, args);
    }

    function arrayAggregator(array, setter, iteratee, accumulator) {
      var index = -1,
        length = array == null ? 0 : array.length;
      while (++index < length) {
        var value = array[index];
        setter(accumulator, value, iteratee(value), array);
      }
      return accumulator;
    }

    function arrayEach(array, iteratee) {
      var index = -1,
        length = array == null ? 0 : array.length;
      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }
      return array;
    }

    function arrayEachRight(array, iteratee) {
      var length = array == null ? 0 : array.length;
      while (length--) {
        if (iteratee(array[length], length, array) === false) {
          break;
        }
      }
      return array;
    }

    function arrayEvery(array, predicate) {
      var index = -1,
        length = array == null ? 0 : array.length;
      while (++index < length) {
        if (!predicate(array[index], index, array)) {
          return false;
        }
      }
      return true;
    }

    function arrayFilter(array, predicate) {
      var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    function arrayIncludes(array, value) {
      var length = array == null ? 0 : array.length;
      return !!length && baseIndexOf(array, value, 0) > -1;
    }

    function arrayIncludesWith(array, value, comparator) {
      var index = -1,
        length = array == null ? 0 : array.length;
      while (++index < length) {
        if (comparator(value, array[index])) {
          return true;
        }
      }
      return false;
    }

    function arrayMap(array, iteratee) {
      var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }

    function arrayPush(array, values) {
      var index = -1,
        length = values.length,
        offset = array.length;
      while (++index < length) {
        array[offset + index] = values[index];
      }
      return array;
    }

    function arrayReduce(array, iteratee, accumulator, initAccum) {
      var index = -1,
        length = array == null ? 0 : array.length;
      if (initAccum && length) {
        accumulator = array[++index];
      }
      while (++index < length) {
        accumulator = iteratee(accumulator, array[index], index, array);
      }
      return accumulator;
    }

    function arrayReduceRight(array, iteratee, accumulator, initAccum) {
      var length = array == null ? 0 : array.length;
      if (initAccum && length) {
        accumulator = array[--length];
      }
      while (length--) {
        accumulator = iteratee(accumulator, array[length], length, array);
      }
      return accumulator;
    }

    function arraySome(array, predicate) {
      var index = -1,
        length = array == null ? 0 : array.length;
      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }

    var asciiSize = baseProperty('length');

    function asciiToArray(string) {
      return string.split('');
    }

    function asciiWords(string) {
      return string.match(reAsciiWord) || [];
    }

    function baseFindKey(collection, predicate, eachFunc) {
      var result;
      eachFunc(collection, function (value, key, collection) {
        if (predicate(value, key, collection)) {
          result = key;
          return false;
        }
      });
      return result;
    }

    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);
      while (fromRight ? index-- : ++index < length) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }

    function baseIndexOf(array, value, fromIndex) {
      return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
    }

    function baseIndexOfWith(array, value, fromIndex, comparator) {
      var index = fromIndex - 1,
        length = array.length;
      while (++index < length) {
        if (comparator(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    function baseIsNaN(value) {
      return value !== value;
    }

    function baseMean(array, iteratee) {
      var length = array == null ? 0 : array.length;
      return length ? baseSum(array, iteratee) / length : NAN;
    }

    function baseProperty(key) {
      return function (object) {
        return object == null ? undefined$1 : object[key];
      };
    }

    function basePropertyOf(object) {
      return function (key) {
        return object == null ? undefined$1 : object[key];
      };
    }

    function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
      eachFunc(collection, function (value, index, collection) {
        accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection);
      });
      return accumulator;
    }

    function baseSortBy(array, comparer) {
      var length = array.length;
      array.sort(comparer);
      while (length--) {
        array[length] = array[length].value;
      }
      return array;
    }

    function baseSum(array, iteratee) {
      var result,
        index = -1,
        length = array.length;
      while (++index < length) {
        var current = iteratee(array[index]);
        if (current !== undefined$1) {
          result = result === undefined$1 ? current : result + current;
        }
      }
      return result;
    }

    function baseTimes(n, iteratee) {
      var index = -1,
        result = Array(n);
      while (++index < n) {
        result[index] = iteratee(index);
      }
      return result;
    }

    function baseToPairs(object, props) {
      return arrayMap(props, function (key) {
        return [key, object[key]];
      });
    }

    function baseTrim(string) {
      return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '') : string;
    }

    function baseUnary(func) {
      return function (value) {
        return func(value);
      };
    }

    function baseValues(object, props) {
      return arrayMap(props, function (key) {
        return object[key];
      });
    }

    function cacheHas(cache, key) {
      return cache.has(key);
    }

    function charsStartIndex(strSymbols, chrSymbols) {
      var index = -1,
        length = strSymbols.length;
      while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
      return index;
    }

    function charsEndIndex(strSymbols, chrSymbols) {
      var index = strSymbols.length;
      while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
      return index;
    }

    function countHolders(array, placeholder) {
      var length = array.length,
        result = 0;
      while (length--) {
        if (array[length] === placeholder) {
          ++result;
        }
      }
      return result;
    }

    var deburrLetter = basePropertyOf(deburredLetters);

    var escapeHtmlChar = basePropertyOf(htmlEscapes);

    function escapeStringChar(chr) {
      return '\\' + stringEscapes[chr];
    }

    function getValue(object, key) {
      return object == null ? undefined$1 : object[key];
    }

    function hasUnicode(string) {
      return reHasUnicode.test(string);
    }

    function hasUnicodeWord(string) {
      return reHasUnicodeWord.test(string);
    }

    function iteratorToArray(iterator) {
      var data,
        result = [];
      while (!(data = iterator.next()).done) {
        result.push(data.value);
      }
      return result;
    }

    function mapToArray(map) {
      var index = -1,
        result = Array(map.size);
      map.forEach(function (value, key) {
        result[++index] = [key, value];
      });
      return result;
    }

    function overArg(func, transform) {
      return function (arg) {
        return func(transform(arg));
      };
    }

    function replaceHolders(array, placeholder) {
      var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];
      while (++index < length) {
        var value = array[index];
        if (value === placeholder || value === PLACEHOLDER) {
          array[index] = PLACEHOLDER;
          result[resIndex++] = index;
        }
      }
      return result;
    }

    function setToArray(set) {
      var index = -1,
        result = Array(set.size);
      set.forEach(function (value) {
        result[++index] = value;
      });
      return result;
    }

    function setToPairs(set) {
      var index = -1,
        result = Array(set.size);
      set.forEach(function (value) {
        result[++index] = [value, value];
      });
      return result;
    }

    function strictIndexOf(array, value, fromIndex) {
      var index = fromIndex - 1,
        length = array.length;
      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }

    function strictLastIndexOf(array, value, fromIndex) {
      var index = fromIndex + 1;
      while (index--) {
        if (array[index] === value) {
          return index;
        }
      }
      return index;
    }

    function stringSize(string) {
      return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
    }

    function stringToArray(string) {
      return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
    }

    function trimmedEndIndex(string) {
      var index = string.length;
      while (index-- && reWhitespace.test(string.charAt(index))) {}
      return index;
    }

    var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

    function unicodeSize(string) {
      var result = reUnicode.lastIndex = 0;
      while (reUnicode.test(string)) {
        ++result;
      }
      return result;
    }

    function unicodeToArray(string) {
      return string.match(reUnicode) || [];
    }

    function unicodeWords(string) {
      return string.match(reUnicodeWord) || [];
    }

    var runInContext = function runInContext(context) {
      context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

      var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

      var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

      var coreJsData = context['__core-js_shared__'];

      var funcToString = funcProto.toString;

      var hasOwnProperty = objectProto.hasOwnProperty;

      var idCounter = 0;

      var maskSrcKey = function () {
        var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
        return uid ? 'Symbol(src)_1.' + uid : '';
      }();

      var nativeObjectToString = objectProto.toString;

      var objectCtorString = funcToString.call(Object);

      var oldDash = root._;

      var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');

      var Buffer = moduleExports ? context.Buffer : undefined$1,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined$1,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined$1,
        symIterator = Symbol ? Symbol.iterator : undefined$1,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined$1;
      var defineProperty = function () {
        try {
          var func = getNative(Object, 'defineProperty');
          func({}, '', {});
          return func;
        } catch (e) {}
      }();

      var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

      var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined$1,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

      var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

      var metaMap = WeakMap && new WeakMap();

      var realNames = {};

      var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

      var symbolProto = Symbol ? Symbol.prototype : undefined$1,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined$1,
        symbolToString = symbolProto ? symbolProto.toString : undefined$1;

      function lodash(value) {
        if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
          if (value instanceof LodashWrapper) {
            return value;
          }
          if (hasOwnProperty.call(value, '__wrapped__')) {
            return wrapperClone(value);
          }
        }
        return new LodashWrapper(value);
      }

      var baseCreate = function () {
        function object() {}
        return function (proto) {
          if (!isObject(proto)) {
            return {};
          }
          if (objectCreate) {
            return objectCreate(proto);
          }
          object.prototype = proto;
          var result = new object();
          object.prototype = undefined$1;
          return result;
        };
      }();

      function baseLodash() {
      }

      function LodashWrapper(value, chainAll) {
        this.__wrapped__ = value;
        this.__actions__ = [];
        this.__chain__ = !!chainAll;
        this.__index__ = 0;
        this.__values__ = undefined$1;
      }

      lodash.templateSettings = {
        'escape': reEscape,
        'evaluate': reEvaluate,
        'interpolate': reInterpolate,
        'variable': '',
        'imports': {
          '_': lodash
        }
      };

      lodash.prototype = baseLodash.prototype;
      lodash.prototype.constructor = lodash;
      LodashWrapper.prototype = baseCreate(baseLodash.prototype);
      LodashWrapper.prototype.constructor = LodashWrapper;

      function LazyWrapper(value) {
        this.__wrapped__ = value;
        this.__actions__ = [];
        this.__dir__ = 1;
        this.__filtered__ = false;
        this.__iteratees__ = [];
        this.__takeCount__ = MAX_ARRAY_LENGTH;
        this.__views__ = [];
      }

      function lazyClone() {
        var result = new LazyWrapper(this.__wrapped__);
        result.__actions__ = copyArray(this.__actions__);
        result.__dir__ = this.__dir__;
        result.__filtered__ = this.__filtered__;
        result.__iteratees__ = copyArray(this.__iteratees__);
        result.__takeCount__ = this.__takeCount__;
        result.__views__ = copyArray(this.__views__);
        return result;
      }

      function lazyReverse() {
        if (this.__filtered__) {
          var result = new LazyWrapper(this);
          result.__dir__ = -1;
          result.__filtered__ = true;
        } else {
          result = this.clone();
          result.__dir__ *= -1;
        }
        return result;
      }

      function lazyValue() {
        var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : start - 1,
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);
        if (!isArr || !isRight && arrLength == length && takeCount == length) {
          return baseWrapperValue(array, this.__actions__);
        }
        var result = [];
        outer: while (length-- && resIndex < takeCount) {
          index += dir;
          var iterIndex = -1,
            value = array[index];
          while (++iterIndex < iterLength) {
            var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);
            if (type == LAZY_MAP_FLAG) {
              value = computed;
            } else if (!computed) {
              if (type == LAZY_FILTER_FLAG) {
                continue outer;
              } else {
                break outer;
              }
            }
          }
          result[resIndex++] = value;
        }
        return result;
      }

      LazyWrapper.prototype = baseCreate(baseLodash.prototype);
      LazyWrapper.prototype.constructor = LazyWrapper;

      function Hash(entries) {
        var index = -1,
          length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }

      function hashClear() {
        this.__data__ = nativeCreate ? nativeCreate(null) : {};
        this.size = 0;
      }

      function hashDelete(key) {
        var result = this.has(key) && delete this.__data__[key];
        this.size -= result ? 1 : 0;
        return result;
      }

      function hashGet(key) {
        var data = this.__data__;
        if (nativeCreate) {
          var result = data[key];
          return result === HASH_UNDEFINED ? undefined$1 : result;
        }
        return hasOwnProperty.call(data, key) ? data[key] : undefined$1;
      }

      function hashHas(key) {
        var data = this.__data__;
        return nativeCreate ? data[key] !== undefined$1 : hasOwnProperty.call(data, key);
      }

      function hashSet(key, value) {
        var data = this.__data__;
        this.size += this.has(key) ? 0 : 1;
        data[key] = nativeCreate && value === undefined$1 ? HASH_UNDEFINED : value;
        return this;
      }

      Hash.prototype.clear = hashClear;
      Hash.prototype['delete'] = hashDelete;
      Hash.prototype.get = hashGet;
      Hash.prototype.has = hashHas;
      Hash.prototype.set = hashSet;

      function ListCache(entries) {
        var index = -1,
          length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }

      function listCacheClear() {
        this.__data__ = [];
        this.size = 0;
      }

      function listCacheDelete(key) {
        var data = this.__data__,
          index = assocIndexOf(data, key);
        if (index < 0) {
          return false;
        }
        var lastIndex = data.length - 1;
        if (index == lastIndex) {
          data.pop();
        } else {
          splice.call(data, index, 1);
        }
        --this.size;
        return true;
      }

      function listCacheGet(key) {
        var data = this.__data__,
          index = assocIndexOf(data, key);
        return index < 0 ? undefined$1 : data[index][1];
      }

      function listCacheHas(key) {
        return assocIndexOf(this.__data__, key) > -1;
      }

      function listCacheSet(key, value) {
        var data = this.__data__,
          index = assocIndexOf(data, key);
        if (index < 0) {
          ++this.size;
          data.push([key, value]);
        } else {
          data[index][1] = value;
        }
        return this;
      }

      ListCache.prototype.clear = listCacheClear;
      ListCache.prototype['delete'] = listCacheDelete;
      ListCache.prototype.get = listCacheGet;
      ListCache.prototype.has = listCacheHas;
      ListCache.prototype.set = listCacheSet;

      function MapCache(entries) {
        var index = -1,
          length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }

      function mapCacheClear() {
        this.size = 0;
        this.__data__ = {
          'hash': new Hash(),
          'map': new (Map || ListCache)(),
          'string': new Hash()
        };
      }

      function mapCacheDelete(key) {
        var result = getMapData(this, key)['delete'](key);
        this.size -= result ? 1 : 0;
        return result;
      }

      function mapCacheGet(key) {
        return getMapData(this, key).get(key);
      }

      function mapCacheHas(key) {
        return getMapData(this, key).has(key);
      }

      function mapCacheSet(key, value) {
        var data = getMapData(this, key),
          size = data.size;
        data.set(key, value);
        this.size += data.size == size ? 0 : 1;
        return this;
      }

      MapCache.prototype.clear = mapCacheClear;
      MapCache.prototype['delete'] = mapCacheDelete;
      MapCache.prototype.get = mapCacheGet;
      MapCache.prototype.has = mapCacheHas;
      MapCache.prototype.set = mapCacheSet;

      function SetCache(values) {
        var index = -1,
          length = values == null ? 0 : values.length;
        this.__data__ = new MapCache();
        while (++index < length) {
          this.add(values[index]);
        }
      }

      function setCacheAdd(value) {
        this.__data__.set(value, HASH_UNDEFINED);
        return this;
      }

      function setCacheHas(value) {
        return this.__data__.has(value);
      }

      SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
      SetCache.prototype.has = setCacheHas;

      function Stack(entries) {
        var data = this.__data__ = new ListCache(entries);
        this.size = data.size;
      }

      function stackClear() {
        this.__data__ = new ListCache();
        this.size = 0;
      }

      function stackDelete(key) {
        var data = this.__data__,
          result = data['delete'](key);
        this.size = data.size;
        return result;
      }

      function stackGet(key) {
        return this.__data__.get(key);
      }

      function stackHas(key) {
        return this.__data__.has(key);
      }

      function stackSet(key, value) {
        var data = this.__data__;
        if (data instanceof ListCache) {
          var pairs = data.__data__;
          if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
            pairs.push([key, value]);
            this.size = ++data.size;
            return this;
          }
          data = this.__data__ = new MapCache(pairs);
        }
        data.set(key, value);
        this.size = data.size;
        return this;
      }

      Stack.prototype.clear = stackClear;
      Stack.prototype['delete'] = stackDelete;
      Stack.prototype.get = stackGet;
      Stack.prototype.has = stackHas;
      Stack.prototype.set = stackSet;

      function arrayLikeKeys(value, inherited) {
        var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;
        for (var key in value) {
          if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (
          key == 'length' ||
          isBuff && (key == 'offset' || key == 'parent') ||
          isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') ||
          isIndex(key, length)))) {
            result.push(key);
          }
        }
        return result;
      }

      function arraySample(array) {
        var length = array.length;
        return length ? array[baseRandom(0, length - 1)] : undefined$1;
      }

      function arraySampleSize(array, n) {
        return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
      }

      function arrayShuffle(array) {
        return shuffleSelf(copyArray(array));
      }

      function assignMergeValue(object, key, value) {
        if (value !== undefined$1 && !eq(object[key], value) || value === undefined$1 && !(key in object)) {
          baseAssignValue(object, key, value);
        }
      }

      function assignValue(object, key, value) {
        var objValue = object[key];
        if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined$1 && !(key in object)) {
          baseAssignValue(object, key, value);
        }
      }

      function assocIndexOf(array, key) {
        var length = array.length;
        while (length--) {
          if (eq(array[length][0], key)) {
            return length;
          }
        }
        return -1;
      }

      function baseAggregator(collection, setter, iteratee, accumulator) {
        baseEach(collection, function (value, key, collection) {
          setter(accumulator, value, iteratee(value), collection);
        });
        return accumulator;
      }

      function baseAssign(object, source) {
        return object && copyObject(source, keys(source), object);
      }

      function baseAssignIn(object, source) {
        return object && copyObject(source, keysIn(source), object);
      }

      function baseAssignValue(object, key, value) {
        if (key == '__proto__' && defineProperty) {
          defineProperty(object, key, {
            'configurable': true,
            'enumerable': true,
            'value': value,
            'writable': true
          });
        } else {
          object[key] = value;
        }
      }

      function baseAt(object, paths) {
        var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;
        while (++index < length) {
          result[index] = skip ? undefined$1 : get(object, paths[index]);
        }
        return result;
      }

      function baseClamp(number, lower, upper) {
        if (number === number) {
          if (upper !== undefined$1) {
            number = number <= upper ? number : upper;
          }
          if (lower !== undefined$1) {
            number = number >= lower ? number : lower;
          }
        }
        return number;
      }

      function baseClone(value, bitmask, customizer, key, object, stack) {
        var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;
        if (customizer) {
          result = object ? customizer(value, key, object, stack) : customizer(value);
        }
        if (result !== undefined$1) {
          return result;
        }
        if (!isObject(value)) {
          return value;
        }
        var isArr = isArray(value);
        if (isArr) {
          result = initCloneArray(value);
          if (!isDeep) {
            return copyArray(value, result);
          }
        } else {
          var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;
          if (isBuffer(value)) {
            return cloneBuffer(value, isDeep);
          }
          if (tag == objectTag || tag == argsTag || isFunc && !object) {
            result = isFlat || isFunc ? {} : initCloneObject(value);
            if (!isDeep) {
              return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
            }
          } else {
            if (!cloneableTags[tag]) {
              return object ? value : {};
            }
            result = initCloneByTag(value, tag, isDeep);
          }
        }
        stack || (stack = new Stack());
        var stacked = stack.get(value);
        if (stacked) {
          return stacked;
        }
        stack.set(value, result);
        if (isSet(value)) {
          value.forEach(function (subValue) {
            result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
          });
        } else if (isMap(value)) {
          value.forEach(function (subValue, key) {
            result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
          });
        }
        var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
        var props = isArr ? undefined$1 : keysFunc(value);
        arrayEach(props || value, function (subValue, key) {
          if (props) {
            key = subValue;
            subValue = value[key];
          }
          assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
        return result;
      }

      function baseConforms(source) {
        var props = keys(source);
        return function (object) {
          return baseConformsTo(object, source, props);
        };
      }

      function baseConformsTo(object, source, props) {
        var length = props.length;
        if (object == null) {
          return !length;
        }
        object = Object(object);
        while (length--) {
          var key = props[length],
            predicate = source[key],
            value = object[key];
          if (value === undefined$1 && !(key in object) || !predicate(value)) {
            return false;
          }
        }
        return true;
      }

      function baseDelay(func, wait, args) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return setTimeout(function () {
          func.apply(undefined$1, args);
        }, wait);
      }

      function baseDifference(array, values, iteratee, comparator) {
        var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;
        if (!length) {
          return result;
        }
        if (iteratee) {
          values = arrayMap(values, baseUnary(iteratee));
        }
        if (comparator) {
          includes = arrayIncludesWith;
          isCommon = false;
        } else if (values.length >= LARGE_ARRAY_SIZE) {
          includes = cacheHas;
          isCommon = false;
          values = new SetCache(values);
        }
        outer: while (++index < length) {
          var value = array[index],
            computed = iteratee == null ? value : iteratee(value);
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var valuesIndex = valuesLength;
            while (valuesIndex--) {
              if (values[valuesIndex] === computed) {
                continue outer;
              }
            }
            result.push(value);
          } else if (!includes(values, computed, comparator)) {
            result.push(value);
          }
        }
        return result;
      }

      var baseEach = createBaseEach(baseForOwn);

      var baseEachRight = createBaseEach(baseForOwnRight, true);

      function baseEvery(collection, predicate) {
        var result = true;
        baseEach(collection, function (value, index, collection) {
          result = !!predicate(value, index, collection);
          return result;
        });
        return result;
      }

      function baseExtremum(array, iteratee, comparator) {
        var index = -1,
          length = array.length;
        while (++index < length) {
          var value = array[index],
            current = iteratee(value);
          if (current != null && (computed === undefined$1 ? current === current && !isSymbol(current) : comparator(current, computed))) {
            var computed = current,
              result = value;
          }
        }
        return result;
      }

      function baseFill(array, value, start, end) {
        var length = array.length;
        start = toInteger(start);
        if (start < 0) {
          start = -start > length ? 0 : length + start;
        }
        end = end === undefined$1 || end > length ? length : toInteger(end);
        if (end < 0) {
          end += length;
        }
        end = start > end ? 0 : toLength(end);
        while (start < end) {
          array[start++] = value;
        }
        return array;
      }

      function baseFilter(collection, predicate) {
        var result = [];
        baseEach(collection, function (value, index, collection) {
          if (predicate(value, index, collection)) {
            result.push(value);
          }
        });
        return result;
      }

      function baseFlatten(array, depth, predicate, isStrict, result) {
        var index = -1,
          length = array.length;
        predicate || (predicate = isFlattenable);
        result || (result = []);
        while (++index < length) {
          var value = array[index];
          if (depth > 0 && predicate(value)) {
            if (depth > 1) {
              baseFlatten(value, depth - 1, predicate, isStrict, result);
            } else {
              arrayPush(result, value);
            }
          } else if (!isStrict) {
            result[result.length] = value;
          }
        }
        return result;
      }

      var baseFor = createBaseFor();

      var baseForRight = createBaseFor(true);

      function baseForOwn(object, iteratee) {
        return object && baseFor(object, iteratee, keys);
      }

      function baseForOwnRight(object, iteratee) {
        return object && baseForRight(object, iteratee, keys);
      }

      function baseFunctions(object, props) {
        return arrayFilter(props, function (key) {
          return isFunction(object[key]);
        });
      }

      function baseGet(object, path) {
        path = castPath(path, object);
        var index = 0,
          length = path.length;
        while (object != null && index < length) {
          object = object[toKey(path[index++])];
        }
        return index && index == length ? object : undefined$1;
      }

      function baseGetAllKeys(object, keysFunc, symbolsFunc) {
        var result = keysFunc(object);
        return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
      }

      function baseGetTag(value) {
        if (value == null) {
          return value === undefined$1 ? undefinedTag : nullTag;
        }
        return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
      }

      function baseGt(value, other) {
        return value > other;
      }

      function baseHas(object, key) {
        return object != null && hasOwnProperty.call(object, key);
      }

      function baseHasIn(object, key) {
        return object != null && key in Object(object);
      }

      function baseInRange(number, start, end) {
        return number >= nativeMin(start, end) && number < nativeMax(start, end);
      }

      function baseIntersection(arrays, iteratee, comparator) {
        var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];
        while (othIndex--) {
          var array = arrays[othIndex];
          if (othIndex && iteratee) {
            array = arrayMap(array, baseUnary(iteratee));
          }
          maxLength = nativeMin(array.length, maxLength);
          caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined$1;
        }
        array = arrays[0];
        var index = -1,
          seen = caches[0];
        outer: while (++index < length && result.length < maxLength) {
          var value = array[index],
            computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;
          if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {
            othIndex = othLength;
            while (--othIndex) {
              var cache = caches[othIndex];
              if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) {
                continue outer;
              }
            }
            if (seen) {
              seen.push(computed);
            }
            result.push(value);
          }
        }
        return result;
      }

      function baseInverter(object, setter, iteratee, accumulator) {
        baseForOwn(object, function (value, key, object) {
          setter(accumulator, iteratee(value), key, object);
        });
        return accumulator;
      }

      function baseInvoke(object, path, args) {
        path = castPath(path, object);
        object = parent(object, path);
        var func = object == null ? object : object[toKey(last(path))];
        return func == null ? undefined$1 : apply(func, object, args);
      }

      function baseIsArguments(value) {
        return isObjectLike(value) && baseGetTag(value) == argsTag;
      }

      function baseIsArrayBuffer(value) {
        return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
      }

      function baseIsDate(value) {
        return isObjectLike(value) && baseGetTag(value) == dateTag;
      }

      function baseIsEqual(value, other, bitmask, customizer, stack) {
        if (value === other) {
          return true;
        }
        if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
          return value !== value && other !== other;
        }
        return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
      }

      function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
        var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);
        objTag = objTag == argsTag ? objectTag : objTag;
        othTag = othTag == argsTag ? objectTag : othTag;
        var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;
        if (isSameTag && isBuffer(object)) {
          if (!isBuffer(other)) {
            return false;
          }
          objIsArr = true;
          objIsObj = false;
        }
        if (isSameTag && !objIsObj) {
          stack || (stack = new Stack());
          return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
        }
        if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
          var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
          if (objIsWrapped || othIsWrapped) {
            var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;
            stack || (stack = new Stack());
            return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
          }
        }
        if (!isSameTag) {
          return false;
        }
        stack || (stack = new Stack());
        return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
      }

      function baseIsMap(value) {
        return isObjectLike(value) && getTag(value) == mapTag;
      }

      function baseIsMatch(object, source, matchData, customizer) {
        var index = matchData.length,
          length = index,
          noCustomizer = !customizer;
        if (object == null) {
          return !length;
        }
        object = Object(object);
        while (index--) {
          var data = matchData[index];
          if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
            return false;
          }
        }
        while (++index < length) {
          data = matchData[index];
          var key = data[0],
            objValue = object[key],
            srcValue = data[1];
          if (noCustomizer && data[2]) {
            if (objValue === undefined$1 && !(key in object)) {
              return false;
            }
          } else {
            var stack = new Stack();
            if (customizer) {
              var result = customizer(objValue, srcValue, key, object, source, stack);
            }
            if (!(result === undefined$1 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
              return false;
            }
          }
        }
        return true;
      }

      function baseIsNative(value) {
        if (!isObject(value) || isMasked(value)) {
          return false;
        }
        var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
        return pattern.test(toSource(value));
      }

      function baseIsRegExp(value) {
        return isObjectLike(value) && baseGetTag(value) == regexpTag;
      }

      function baseIsSet(value) {
        return isObjectLike(value) && getTag(value) == setTag;
      }

      function baseIsTypedArray(value) {
        return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
      }

      function baseIteratee(value) {
        if (typeof value == 'function') {
          return value;
        }
        if (value == null) {
          return identity;
        }
        if (typeof value == 'object') {
          return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
        }
        return property(value);
      }

      function baseKeys(object) {
        if (!isPrototype(object)) {
          return nativeKeys(object);
        }
        var result = [];
        for (var key in Object(object)) {
          if (hasOwnProperty.call(object, key) && key != 'constructor') {
            result.push(key);
          }
        }
        return result;
      }

      function baseKeysIn(object) {
        if (!isObject(object)) {
          return nativeKeysIn(object);
        }
        var isProto = isPrototype(object),
          result = [];
        for (var key in object) {
          if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
            result.push(key);
          }
        }
        return result;
      }

      function baseLt(value, other) {
        return value < other;
      }

      function baseMap(collection, iteratee) {
        var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];
        baseEach(collection, function (value, key, collection) {
          result[++index] = iteratee(value, key, collection);
        });
        return result;
      }

      function baseMatches(source) {
        var matchData = getMatchData(source);
        if (matchData.length == 1 && matchData[0][2]) {
          return matchesStrictComparable(matchData[0][0], matchData[0][1]);
        }
        return function (object) {
          return object === source || baseIsMatch(object, source, matchData);
        };
      }

      function baseMatchesProperty(path, srcValue) {
        if (isKey(path) && isStrictComparable(srcValue)) {
          return matchesStrictComparable(toKey(path), srcValue);
        }
        return function (object) {
          var objValue = get(object, path);
          return objValue === undefined$1 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
        };
      }

      function baseMerge(object, source, srcIndex, customizer, stack) {
        if (object === source) {
          return;
        }
        baseFor(source, function (srcValue, key) {
          stack || (stack = new Stack());
          if (isObject(srcValue)) {
            baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
          } else {
            var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + '', object, source, stack) : undefined$1;
            if (newValue === undefined$1) {
              newValue = srcValue;
            }
            assignMergeValue(object, key, newValue);
          }
        }, keysIn);
      }

      function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
        var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);
        if (stacked) {
          assignMergeValue(object, key, stacked);
          return;
        }
        var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined$1;
        var isCommon = newValue === undefined$1;
        if (isCommon) {
          var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);
          newValue = srcValue;
          if (isArr || isBuff || isTyped) {
            if (isArray(objValue)) {
              newValue = objValue;
            } else if (isArrayLikeObject(objValue)) {
              newValue = copyArray(objValue);
            } else if (isBuff) {
              isCommon = false;
              newValue = cloneBuffer(srcValue, true);
            } else if (isTyped) {
              isCommon = false;
              newValue = cloneTypedArray(srcValue, true);
            } else {
              newValue = [];
            }
          } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
            newValue = objValue;
            if (isArguments(objValue)) {
              newValue = toPlainObject(objValue);
            } else if (!isObject(objValue) || isFunction(objValue)) {
              newValue = initCloneObject(srcValue);
            }
          } else {
            isCommon = false;
          }
        }
        if (isCommon) {
          stack.set(srcValue, newValue);
          mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
          stack['delete'](srcValue);
        }
        assignMergeValue(object, key, newValue);
      }

      function baseNth(array, n) {
        var length = array.length;
        if (!length) {
          return;
        }
        n += n < 0 ? length : 0;
        return isIndex(n, length) ? array[n] : undefined$1;
      }

      function baseOrderBy(collection, iteratees, orders) {
        if (iteratees.length) {
          iteratees = arrayMap(iteratees, function (iteratee) {
            if (isArray(iteratee)) {
              return function (value) {
                return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
              };
            }
            return iteratee;
          });
        } else {
          iteratees = [identity];
        }
        var index = -1;
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        var result = baseMap(collection, function (value, key, collection) {
          var criteria = arrayMap(iteratees, function (iteratee) {
            return iteratee(value);
          });
          return {
            'criteria': criteria,
            'index': ++index,
            'value': value
          };
        });
        return baseSortBy(result, function (object, other) {
          return compareMultiple(object, other, orders);
        });
      }

      function basePick(object, paths) {
        return basePickBy(object, paths, function (value, path) {
          return hasIn(object, path);
        });
      }

      function basePickBy(object, paths, predicate) {
        var index = -1,
          length = paths.length,
          result = {};
        while (++index < length) {
          var path = paths[index],
            value = baseGet(object, path);
          if (predicate(value, path)) {
            baseSet(result, castPath(path, object), value);
          }
        }
        return result;
      }

      function basePropertyDeep(path) {
        return function (object) {
          return baseGet(object, path);
        };
      }

      function basePullAll(array, values, iteratee, comparator) {
        var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;
        if (array === values) {
          values = copyArray(values);
        }
        if (iteratee) {
          seen = arrayMap(array, baseUnary(iteratee));
        }
        while (++index < length) {
          var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;
          while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
            if (seen !== array) {
              splice.call(seen, fromIndex, 1);
            }
            splice.call(array, fromIndex, 1);
          }
        }
        return array;
      }

      function basePullAt(array, indexes) {
        var length = array ? indexes.length : 0,
          lastIndex = length - 1;
        while (length--) {
          var index = indexes[length];
          if (length == lastIndex || index !== previous) {
            var previous = index;
            if (isIndex(index)) {
              splice.call(array, index, 1);
            } else {
              baseUnset(array, index);
            }
          }
        }
        return array;
      }

      function baseRandom(lower, upper) {
        return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
      }

      function baseRange(start, end, step, fromRight) {
        var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);
        while (length--) {
          result[fromRight ? length : ++index] = start;
          start += step;
        }
        return result;
      }

      function baseRepeat(string, n) {
        var result = '';
        if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
          return result;
        }
        do {
          if (n % 2) {
            result += string;
          }
          n = nativeFloor(n / 2);
          if (n) {
            string += string;
          }
        } while (n);
        return result;
      }

      function baseRest(func, start) {
        return setToString(overRest(func, start, identity), func + '');
      }

      function baseSample(collection) {
        return arraySample(values(collection));
      }

      function baseSampleSize(collection, n) {
        var array = values(collection);
        return shuffleSelf(array, baseClamp(n, 0, array.length));
      }

      function baseSet(object, path, value, customizer) {
        if (!isObject(object)) {
          return object;
        }
        path = castPath(path, object);
        var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;
        while (nested != null && ++index < length) {
          var key = toKey(path[index]),
            newValue = value;
          if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
            return object;
          }
          if (index != lastIndex) {
            var objValue = nested[key];
            newValue = customizer ? customizer(objValue, key, nested) : undefined$1;
            if (newValue === undefined$1) {
              newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
            }
          }
          assignValue(nested, key, newValue);
          nested = nested[key];
        }
        return object;
      }

      var baseSetData = !metaMap ? identity : function (func, data) {
        metaMap.set(func, data);
        return func;
      };

      var baseSetToString = !defineProperty ? identity : function (func, string) {
        return defineProperty(func, 'toString', {
          'configurable': true,
          'enumerable': false,
          'value': constant(string),
          'writable': true
        });
      };

      function baseShuffle(collection) {
        return shuffleSelf(values(collection));
      }

      function baseSlice(array, start, end) {
        var index = -1,
          length = array.length;
        if (start < 0) {
          start = -start > length ? 0 : length + start;
        }
        end = end > length ? length : end;
        if (end < 0) {
          end += length;
        }
        length = start > end ? 0 : end - start >>> 0;
        start >>>= 0;
        var result = Array(length);
        while (++index < length) {
          result[index] = array[index + start];
        }
        return result;
      }

      function baseSome(collection, predicate) {
        var result;
        baseEach(collection, function (value, index, collection) {
          result = predicate(value, index, collection);
          return !result;
        });
        return !!result;
      }

      function baseSortedIndex(array, value, retHighest) {
        var low = 0,
          high = array == null ? low : array.length;
        if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
          while (low < high) {
            var mid = low + high >>> 1,
              computed = array[mid];
            if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) {
              low = mid + 1;
            } else {
              high = mid;
            }
          }
          return high;
        }
        return baseSortedIndexBy(array, value, identity, retHighest);
      }

      function baseSortedIndexBy(array, value, iteratee, retHighest) {
        var low = 0,
          high = array == null ? 0 : array.length;
        if (high === 0) {
          return 0;
        }
        value = iteratee(value);
        var valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined$1;
        while (low < high) {
          var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined$1,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);
          if (valIsNaN) {
            var setLow = retHighest || othIsReflexive;
          } else if (valIsUndefined) {
            setLow = othIsReflexive && (retHighest || othIsDefined);
          } else if (valIsNull) {
            setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
          } else if (valIsSymbol) {
            setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
          } else if (othIsNull || othIsSymbol) {
            setLow = false;
          } else {
            setLow = retHighest ? computed <= value : computed < value;
          }
          if (setLow) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return nativeMin(high, MAX_ARRAY_INDEX);
      }

      function baseSortedUniq(array, iteratee) {
        var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];
        while (++index < length) {
          var value = array[index],
            computed = iteratee ? iteratee(value) : value;
          if (!index || !eq(computed, seen)) {
            var seen = computed;
            result[resIndex++] = value === 0 ? 0 : value;
          }
        }
        return result;
      }

      function baseToNumber(value) {
        if (typeof value == 'number') {
          return value;
        }
        if (isSymbol(value)) {
          return NAN;
        }
        return +value;
      }

      function baseToString(value) {
        if (typeof value == 'string') {
          return value;
        }
        if (isArray(value)) {
          return arrayMap(value, baseToString) + '';
        }
        if (isSymbol(value)) {
          return symbolToString ? symbolToString.call(value) : '';
        }
        var result = value + '';
        return result == '0' && 1 / value == -INFINITY ? '-0' : result;
      }

      function baseUniq(array, iteratee, comparator) {
        var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;
        if (comparator) {
          isCommon = false;
          includes = arrayIncludesWith;
        } else if (length >= LARGE_ARRAY_SIZE) {
          var set = iteratee ? null : createSet(array);
          if (set) {
            return setToArray(set);
          }
          isCommon = false;
          includes = cacheHas;
          seen = new SetCache();
        } else {
          seen = iteratee ? [] : result;
        }
        outer: while (++index < length) {
          var value = array[index],
            computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var seenIndex = seen.length;
            while (seenIndex--) {
              if (seen[seenIndex] === computed) {
                continue outer;
              }
            }
            if (iteratee) {
              seen.push(computed);
            }
            result.push(value);
          } else if (!includes(seen, computed, comparator)) {
            if (seen !== result) {
              seen.push(computed);
            }
            result.push(value);
          }
        }
        return result;
      }

      function baseUnset(object, path) {
        path = castPath(path, object);
        object = parent(object, path);
        return object == null || delete object[toKey(last(path))];
      }

      function baseUpdate(object, path, updater, customizer) {
        return baseSet(object, path, updater(baseGet(object, path)), customizer);
      }

      function baseWhile(array, predicate, isDrop, fromRight) {
        var length = array.length,
          index = fromRight ? length : -1;
        while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}
        return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
      }

      function baseWrapperValue(value, actions) {
        var result = value;
        if (result instanceof LazyWrapper) {
          result = result.value();
        }
        return arrayReduce(actions, function (result, action) {
          return action.func.apply(action.thisArg, arrayPush([result], action.args));
        }, result);
      }

      function baseXor(arrays, iteratee, comparator) {
        var length = arrays.length;
        if (length < 2) {
          return length ? baseUniq(arrays[0]) : [];
        }
        var index = -1,
          result = Array(length);
        while (++index < length) {
          var array = arrays[index],
            othIndex = -1;
          while (++othIndex < length) {
            if (othIndex != index) {
              result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
            }
          }
        }
        return baseUniq(baseFlatten(result, 1), iteratee, comparator);
      }

      function baseZipObject(props, values, assignFunc) {
        var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};
        while (++index < length) {
          var value = index < valsLength ? values[index] : undefined$1;
          assignFunc(result, props[index], value);
        }
        return result;
      }

      function castArrayLikeObject(value) {
        return isArrayLikeObject(value) ? value : [];
      }

      function castFunction(value) {
        return typeof value == 'function' ? value : identity;
      }

      function castPath(value, object) {
        if (isArray(value)) {
          return value;
        }
        return isKey(value, object) ? [value] : stringToPath(toString(value));
      }

      var castRest = baseRest;

      function castSlice(array, start, end) {
        var length = array.length;
        end = end === undefined$1 ? length : end;
        return !start && end >= length ? array : baseSlice(array, start, end);
      }

      var clearTimeout = ctxClearTimeout || function (id) {
        return root.clearTimeout(id);
      };

      function cloneBuffer(buffer, isDeep) {
        if (isDeep) {
          return buffer.slice();
        }
        var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
        buffer.copy(result);
        return result;
      }

      function cloneArrayBuffer(arrayBuffer) {
        var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
        new Uint8Array(result).set(new Uint8Array(arrayBuffer));
        return result;
      }

      function cloneDataView(dataView, isDeep) {
        var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
        return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
      }

      function cloneRegExp(regexp) {
        var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
        result.lastIndex = regexp.lastIndex;
        return result;
      }

      function cloneSymbol(symbol) {
        return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
      }

      function cloneTypedArray(typedArray, isDeep) {
        var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
        return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
      }

      function compareAscending(value, other) {
        if (value !== other) {
          var valIsDefined = value !== undefined$1,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);
          var othIsDefined = other !== undefined$1,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);
          if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
            return 1;
          }
          if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
            return -1;
          }
        }
        return 0;
      }

      function compareMultiple(object, other, orders) {
        var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;
        while (++index < length) {
          var result = compareAscending(objCriteria[index], othCriteria[index]);
          if (result) {
            if (index >= ordersLength) {
              return result;
            }
            var order = orders[index];
            return result * (order == 'desc' ? -1 : 1);
          }
        }
        return object.index - other.index;
      }

      function composeArgs(args, partials, holders, isCurried) {
        var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;
        while (++leftIndex < leftLength) {
          result[leftIndex] = partials[leftIndex];
        }
        while (++argsIndex < holdersLength) {
          if (isUncurried || argsIndex < argsLength) {
            result[holders[argsIndex]] = args[argsIndex];
          }
        }
        while (rangeLength--) {
          result[leftIndex++] = args[argsIndex++];
        }
        return result;
      }

      function composeArgsRight(args, partials, holders, isCurried) {
        var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;
        while (++argsIndex < rangeLength) {
          result[argsIndex] = args[argsIndex];
        }
        var offset = argsIndex;
        while (++rightIndex < rightLength) {
          result[offset + rightIndex] = partials[rightIndex];
        }
        while (++holdersIndex < holdersLength) {
          if (isUncurried || argsIndex < argsLength) {
            result[offset + holders[holdersIndex]] = args[argsIndex++];
          }
        }
        return result;
      }

      function copyArray(source, array) {
        var index = -1,
          length = source.length;
        array || (array = Array(length));
        while (++index < length) {
          array[index] = source[index];
        }
        return array;
      }

      function copyObject(source, props, object, customizer) {
        var isNew = !object;
        object || (object = {});
        var index = -1,
          length = props.length;
        while (++index < length) {
          var key = props[index];
          var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined$1;
          if (newValue === undefined$1) {
            newValue = source[key];
          }
          if (isNew) {
            baseAssignValue(object, key, newValue);
          } else {
            assignValue(object, key, newValue);
          }
        }
        return object;
      }

      function copySymbols(source, object) {
        return copyObject(source, getSymbols(source), object);
      }

      function copySymbolsIn(source, object) {
        return copyObject(source, getSymbolsIn(source), object);
      }

      function createAggregator(setter, initializer) {
        return function (collection, iteratee) {
          var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};
          return func(collection, setter, getIteratee(iteratee, 2), accumulator);
        };
      }

      function createAssigner(assigner) {
        return baseRest(function (object, sources) {
          var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined$1,
            guard = length > 2 ? sources[2] : undefined$1;
          customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined$1;
          if (guard && isIterateeCall(sources[0], sources[1], guard)) {
            customizer = length < 3 ? undefined$1 : customizer;
            length = 1;
          }
          object = Object(object);
          while (++index < length) {
            var source = sources[index];
            if (source) {
              assigner(object, source, index, customizer);
            }
          }
          return object;
        });
      }

      function createBaseEach(eachFunc, fromRight) {
        return function (collection, iteratee) {
          if (collection == null) {
            return collection;
          }
          if (!isArrayLike(collection)) {
            return eachFunc(collection, iteratee);
          }
          var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);
          while (fromRight ? index-- : ++index < length) {
            if (iteratee(iterable[index], index, iterable) === false) {
              break;
            }
          }
          return collection;
        };
      }

      function createBaseFor(fromRight) {
        return function (object, iteratee, keysFunc) {
          var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;
          while (length--) {
            var key = props[fromRight ? length : ++index];
            if (iteratee(iterable[key], key, iterable) === false) {
              break;
            }
          }
          return object;
        };
      }

      function createBind(func, bitmask, thisArg) {
        var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);
        function wrapper() {
          var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
          return fn.apply(isBind ? thisArg : this, arguments);
        }
        return wrapper;
      }

      function createCaseFirst(methodName) {
        return function (string) {
          string = toString(string);
          var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined$1;
          var chr = strSymbols ? strSymbols[0] : string.charAt(0);
          var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);
          return chr[methodName]() + trailing;
        };
      }

      function createCompounder(callback) {
        return function (string) {
          return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
        };
      }

      function createCtor(Ctor) {
        return function () {
          var args = arguments;
          switch (args.length) {
            case 0:
              return new Ctor();
            case 1:
              return new Ctor(args[0]);
            case 2:
              return new Ctor(args[0], args[1]);
            case 3:
              return new Ctor(args[0], args[1], args[2]);
            case 4:
              return new Ctor(args[0], args[1], args[2], args[3]);
            case 5:
              return new Ctor(args[0], args[1], args[2], args[3], args[4]);
            case 6:
              return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
            case 7:
              return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
          }
          var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

          return isObject(result) ? result : thisBinding;
        };
      }

      function createCurry(func, bitmask, arity) {
        var Ctor = createCtor(func);
        function wrapper() {
          var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);
          while (index--) {
            args[index] = arguments[index];
          }
          var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
          length -= holders.length;
          if (length < arity) {
            return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined$1, args, holders, undefined$1, undefined$1, arity - length);
          }
          var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
          return apply(fn, this, args);
        }
        return wrapper;
      }

      function createFind(findIndexFunc) {
        return function (collection, predicate, fromIndex) {
          var iterable = Object(collection);
          if (!isArrayLike(collection)) {
            var iteratee = getIteratee(predicate, 3);
            collection = keys(collection);
            predicate = function predicate(key) {
              return iteratee(iterable[key], key, iterable);
            };
          }
          var index = findIndexFunc(collection, predicate, fromIndex);
          return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined$1;
        };
      }

      function createFlow(fromRight) {
        return flatRest(function (funcs) {
          var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;
          if (fromRight) {
            funcs.reverse();
          }
          while (index--) {
            var func = funcs[index];
            if (typeof func != 'function') {
              throw new TypeError(FUNC_ERROR_TEXT);
            }
            if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
              var wrapper = new LodashWrapper([], true);
            }
          }
          index = wrapper ? index : length;
          while (++index < length) {
            func = funcs[index];
            var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined$1;
            if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {
              wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
            } else {
              wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
            }
          }
          return function () {
            var args = arguments,
              value = args[0];
            if (wrapper && args.length == 1 && isArray(value)) {
              return wrapper.plant(value).value();
            }
            var index = 0,
              result = length ? funcs[index].apply(this, args) : value;
            while (++index < length) {
              result = funcs[index].call(this, result);
            }
            return result;
          };
        });
      }

      function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
        var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined$1 : createCtor(func);
        function wrapper() {
          var length = arguments.length,
            args = Array(length),
            index = length;
          while (index--) {
            args[index] = arguments[index];
          }
          if (isCurried) {
            var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
          }
          if (partials) {
            args = composeArgs(args, partials, holders, isCurried);
          }
          if (partialsRight) {
            args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
          }
          length -= holdersCount;
          if (isCurried && length < arity) {
            var newHolders = replaceHolders(args, placeholder);
            return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
          }
          var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;
          length = args.length;
          if (argPos) {
            args = reorder(args, argPos);
          } else if (isFlip && length > 1) {
            args.reverse();
          }
          if (isAry && ary < length) {
            args.length = ary;
          }
          if (this && this !== root && this instanceof wrapper) {
            fn = Ctor || createCtor(fn);
          }
          return fn.apply(thisBinding, args);
        }
        return wrapper;
      }

      function createInverter(setter, toIteratee) {
        return function (object, iteratee) {
          return baseInverter(object, setter, toIteratee(iteratee), {});
        };
      }

      function createMathOperation(operator, defaultValue) {
        return function (value, other) {
          var result;
          if (value === undefined$1 && other === undefined$1) {
            return defaultValue;
          }
          if (value !== undefined$1) {
            result = value;
          }
          if (other !== undefined$1) {
            if (result === undefined$1) {
              return other;
            }
            if (typeof value == 'string' || typeof other == 'string') {
              value = baseToString(value);
              other = baseToString(other);
            } else {
              value = baseToNumber(value);
              other = baseToNumber(other);
            }
            result = operator(value, other);
          }
          return result;
        };
      }

      function createOver(arrayFunc) {
        return flatRest(function (iteratees) {
          iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
          return baseRest(function (args) {
            var thisArg = this;
            return arrayFunc(iteratees, function (iteratee) {
              return apply(iteratee, thisArg, args);
            });
          });
        });
      }

      function createPadding(length, chars) {
        chars = chars === undefined$1 ? ' ' : baseToString(chars);
        var charsLength = chars.length;
        if (charsLength < 2) {
          return charsLength ? baseRepeat(chars, length) : chars;
        }
        var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
        return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join('') : result.slice(0, length);
      }

      function createPartial(func, bitmask, thisArg, partials) {
        var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);
        function wrapper() {
          var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = this && this !== root && this instanceof wrapper ? Ctor : func;
          while (++leftIndex < leftLength) {
            args[leftIndex] = partials[leftIndex];
          }
          while (argsLength--) {
            args[leftIndex++] = arguments[++argsIndex];
          }
          return apply(fn, isBind ? thisArg : this, args);
        }
        return wrapper;
      }

      function createRange(fromRight) {
        return function (start, end, step) {
          if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
            end = step = undefined$1;
          }
          start = toFinite(start);
          if (end === undefined$1) {
            end = start;
            start = 0;
          } else {
            end = toFinite(end);
          }
          step = step === undefined$1 ? start < end ? 1 : -1 : toFinite(step);
          return baseRange(start, end, step, fromRight);
        };
      }

      function createRelationalOperation(operator) {
        return function (value, other) {
          if (!(typeof value == 'string' && typeof other == 'string')) {
            value = toNumber(value);
            other = toNumber(other);
          }
          return operator(value, other);
        };
      }

      function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
        var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined$1,
          newHoldersRight = isCurry ? undefined$1 : holders,
          newPartials = isCurry ? partials : undefined$1,
          newPartialsRight = isCurry ? undefined$1 : partials;
        bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
        bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
        if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
          bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
        }
        var newData = [func, bitmask, thisArg, newPartials, newHolders, newPartialsRight, newHoldersRight, argPos, ary, arity];
        var result = wrapFunc.apply(undefined$1, newData);
        if (isLaziable(func)) {
          setData(result, newData);
        }
        result.placeholder = placeholder;
        return setWrapToString(result, func, bitmask);
      }

      function createRound(methodName) {
        var func = Math[methodName];
        return function (number, precision) {
          number = toNumber(number);
          precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
          if (precision && nativeIsFinite(number)) {
            var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));
            pair = (toString(value) + 'e').split('e');
            return +(pair[0] + 'e' + (+pair[1] - precision));
          }
          return func(number);
        };
      }

      var createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function (values) {
        return new Set(values);
      };

      function createToPairs(keysFunc) {
        return function (object) {
          var tag = getTag(object);
          if (tag == mapTag) {
            return mapToArray(object);
          }
          if (tag == setTag) {
            return setToPairs(object);
          }
          return baseToPairs(object, keysFunc(object));
        };
      }

      function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
        var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
        if (!isBindKey && typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        var length = partials ? partials.length : 0;
        if (!length) {
          bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
          partials = holders = undefined$1;
        }
        ary = ary === undefined$1 ? ary : nativeMax(toInteger(ary), 0);
        arity = arity === undefined$1 ? arity : toInteger(arity);
        length -= holders ? holders.length : 0;
        if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
          var partialsRight = partials,
            holdersRight = holders;
          partials = holders = undefined$1;
        }
        var data = isBindKey ? undefined$1 : getData(func);
        var newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];
        if (data) {
          mergeData(newData, data);
        }
        func = newData[0];
        bitmask = newData[1];
        thisArg = newData[2];
        partials = newData[3];
        holders = newData[4];
        arity = newData[9] = newData[9] === undefined$1 ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
        if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
          bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
        }
        if (!bitmask || bitmask == WRAP_BIND_FLAG) {
          var result = createBind(func, bitmask, thisArg);
        } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
          result = createCurry(func, bitmask, arity);
        } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
          result = createPartial(func, bitmask, thisArg, partials);
        } else {
          result = createHybrid.apply(undefined$1, newData);
        }
        var setter = data ? baseSetData : setData;
        return setWrapToString(setter(result, newData), func, bitmask);
      }

      function customDefaultsAssignIn(objValue, srcValue, key, object) {
        if (objValue === undefined$1 || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
          return srcValue;
        }
        return objValue;
      }

      function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
        if (isObject(objValue) && isObject(srcValue)) {
          stack.set(srcValue, objValue);
          baseMerge(objValue, srcValue, undefined$1, customDefaultsMerge, stack);
          stack['delete'](srcValue);
        }
        return objValue;
      }

      function customOmitClone(value) {
        return isPlainObject(value) ? undefined$1 : value;
      }

      function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;
        if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
          return false;
        }
        var arrStacked = stack.get(array);
        var othStacked = stack.get(other);
        if (arrStacked && othStacked) {
          return arrStacked == other && othStacked == array;
        }
        var index = -1,
          result = true,
          seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined$1;
        stack.set(array, other);
        stack.set(other, array);

        while (++index < arrLength) {
          var arrValue = array[index],
            othValue = other[index];
          if (customizer) {
            var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
          }
          if (compared !== undefined$1) {
            if (compared) {
              continue;
            }
            result = false;
            break;
          }
          if (seen) {
            if (!arraySome(other, function (othValue, othIndex) {
              if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                return seen.push(othIndex);
              }
            })) {
              result = false;
              break;
            }
          } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
            result = false;
            break;
          }
        }
        stack['delete'](array);
        stack['delete'](other);
        return result;
      }

      function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
        switch (tag) {
          case dataViewTag:
            if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
              return false;
            }
            object = object.buffer;
            other = other.buffer;
          case arrayBufferTag:
            if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
              return false;
            }
            return true;
          case boolTag:
          case dateTag:
          case numberTag:
            return eq(+object, +other);
          case errorTag:
            return object.name == other.name && object.message == other.message;
          case regexpTag:
          case stringTag:
            return object == other + '';
          case mapTag:
            var convert = mapToArray;
          case setTag:
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
            convert || (convert = setToArray);
            if (object.size != other.size && !isPartial) {
              return false;
            }
            var stacked = stack.get(object);
            if (stacked) {
              return stacked == other;
            }
            bitmask |= COMPARE_UNORDERED_FLAG;

            stack.set(object, other);
            var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
            stack['delete'](object);
            return result;
          case symbolTag:
            if (symbolValueOf) {
              return symbolValueOf.call(object) == symbolValueOf.call(other);
            }
        }
        return false;
      }

      function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;
        if (objLength != othLength && !isPartial) {
          return false;
        }
        var index = objLength;
        while (index--) {
          var key = objProps[index];
          if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
            return false;
          }
        }
        var objStacked = stack.get(object);
        var othStacked = stack.get(other);
        if (objStacked && othStacked) {
          return objStacked == other && othStacked == object;
        }
        var result = true;
        stack.set(object, other);
        stack.set(other, object);
        var skipCtor = isPartial;
        while (++index < objLength) {
          key = objProps[index];
          var objValue = object[key],
            othValue = other[key];
          if (customizer) {
            var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
          }
          if (!(compared === undefined$1 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
            result = false;
            break;
          }
          skipCtor || (skipCtor = key == 'constructor');
        }
        if (result && !skipCtor) {
          var objCtor = object.constructor,
            othCtor = other.constructor;

          if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
            result = false;
          }
        }
        stack['delete'](object);
        stack['delete'](other);
        return result;
      }

      function flatRest(func) {
        return setToString(overRest(func, undefined$1, flatten), func + '');
      }

      function getAllKeys(object) {
        return baseGetAllKeys(object, keys, getSymbols);
      }

      function getAllKeysIn(object) {
        return baseGetAllKeys(object, keysIn, getSymbolsIn);
      }

      var getData = !metaMap ? noop : function (func) {
        return metaMap.get(func);
      };

      function getFuncName(func) {
        var result = func.name + '',
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;
        while (length--) {
          var data = array[length],
            otherFunc = data.func;
          if (otherFunc == null || otherFunc == func) {
            return data.name;
          }
        }
        return result;
      }

      function getHolder(func) {
        var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
        return object.placeholder;
      }

      function getIteratee() {
        var result = lodash.iteratee || iteratee;
        result = result === iteratee ? baseIteratee : result;
        return arguments.length ? result(arguments[0], arguments[1]) : result;
      }

      function getMapData(map, key) {
        var data = map.__data__;
        return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
      }

      function getMatchData(object) {
        var result = keys(object),
          length = result.length;
        while (length--) {
          var key = result[length],
            value = object[key];
          result[length] = [key, value, isStrictComparable(value)];
        }
        return result;
      }

      function getNative(object, key) {
        var value = getValue(object, key);
        return baseIsNative(value) ? value : undefined$1;
      }

      function getRawTag(value) {
        var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];
        try {
          value[symToStringTag] = undefined$1;
          var unmasked = true;
        } catch (e) {}
        var result = nativeObjectToString.call(value);
        if (unmasked) {
          if (isOwn) {
            value[symToStringTag] = tag;
          } else {
            delete value[symToStringTag];
          }
        }
        return result;
      }

      var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
        if (object == null) {
          return [];
        }
        object = Object(object);
        return arrayFilter(nativeGetSymbols(object), function (symbol) {
          return propertyIsEnumerable.call(object, symbol);
        });
      };

      var getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {
        var result = [];
        while (object) {
          arrayPush(result, getSymbols(object));
          object = getPrototype(object);
        }
        return result;
      };

      var getTag = baseGetTag;

      if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
        getTag = function getTag(value) {
          var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined$1,
            ctorString = Ctor ? toSource(Ctor) : '';
          if (ctorString) {
            switch (ctorString) {
              case dataViewCtorString:
                return dataViewTag;
              case mapCtorString:
                return mapTag;
              case promiseCtorString:
                return promiseTag;
              case setCtorString:
                return setTag;
              case weakMapCtorString:
                return weakMapTag;
            }
          }
          return result;
        };
      }

      function getView(start, end, transforms) {
        var index = -1,
          length = transforms.length;
        while (++index < length) {
          var data = transforms[index],
            size = data.size;
          switch (data.type) {
            case 'drop':
              start += size;
              break;
            case 'dropRight':
              end -= size;
              break;
            case 'take':
              end = nativeMin(end, start + size);
              break;
            case 'takeRight':
              start = nativeMax(start, end - size);
              break;
          }
        }
        return {
          'start': start,
          'end': end
        };
      }

      function getWrapDetails(source) {
        var match = source.match(reWrapDetails);
        return match ? match[1].split(reSplitDetails) : [];
      }

      function hasPath(object, path, hasFunc) {
        path = castPath(path, object);
        var index = -1,
          length = path.length,
          result = false;
        while (++index < length) {
          var key = toKey(path[index]);
          if (!(result = object != null && hasFunc(object, key))) {
            break;
          }
          object = object[key];
        }
        if (result || ++index != length) {
          return result;
        }
        length = object == null ? 0 : object.length;
        return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
      }

      function initCloneArray(array) {
        var length = array.length,
          result = new array.constructor(length);

        if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
          result.index = array.index;
          result.input = array.input;
        }
        return result;
      }

      function initCloneObject(object) {
        return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
      }

      function initCloneByTag(object, tag, isDeep) {
        var Ctor = object.constructor;
        switch (tag) {
          case arrayBufferTag:
            return cloneArrayBuffer(object);
          case boolTag:
          case dateTag:
            return new Ctor(+object);
          case dataViewTag:
            return cloneDataView(object, isDeep);
          case float32Tag:
          case float64Tag:
          case int8Tag:
          case int16Tag:
          case int32Tag:
          case uint8Tag:
          case uint8ClampedTag:
          case uint16Tag:
          case uint32Tag:
            return cloneTypedArray(object, isDeep);
          case mapTag:
            return new Ctor();
          case numberTag:
          case stringTag:
            return new Ctor(object);
          case regexpTag:
            return cloneRegExp(object);
          case setTag:
            return new Ctor();
          case symbolTag:
            return cloneSymbol(object);
        }
      }

      function insertWrapDetails(source, details) {
        var length = details.length;
        if (!length) {
          return source;
        }
        var lastIndex = length - 1;
        details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
        details = details.join(length > 2 ? ', ' : ' ');
        return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
      }

      function isFlattenable(value) {
        return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
      }

      function isIndex(value, length) {
        var type = typeof value;
        length = length == null ? MAX_SAFE_INTEGER : length;
        return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
      }

      function isIterateeCall(value, index, object) {
        if (!isObject(object)) {
          return false;
        }
        var type = typeof index;
        if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {
          return eq(object[index], value);
        }
        return false;
      }

      function isKey(value, object) {
        if (isArray(value)) {
          return false;
        }
        var type = typeof value;
        if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
          return true;
        }
        return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
      }

      function isKeyable(value) {
        var type = typeof value;
        return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
      }

      function isLaziable(func) {
        var funcName = getFuncName(func),
          other = lodash[funcName];
        if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
          return false;
        }
        if (func === other) {
          return true;
        }
        var data = getData(other);
        return !!data && func === data[0];
      }

      function isMasked(func) {
        return !!maskSrcKey && maskSrcKey in func;
      }

      var isMaskable = coreJsData ? isFunction : stubFalse;

      function isPrototype(value) {
        var Ctor = value && value.constructor,
          proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
        return value === proto;
      }

      function isStrictComparable(value) {
        return value === value && !isObject(value);
      }

      function matchesStrictComparable(key, srcValue) {
        return function (object) {
          if (object == null) {
            return false;
          }
          return object[key] === srcValue && (srcValue !== undefined$1 || key in Object(object));
        };
      }

      function memoizeCapped(func) {
        var result = memoize(func, function (key) {
          if (cache.size === MAX_MEMOIZE_SIZE) {
            cache.clear();
          }
          return key;
        });
        var cache = result.cache;
        return result;
      }

      function mergeData(data, source) {
        var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
        var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;

        if (!(isCommon || isCombo)) {
          return data;
        }
        if (srcBitmask & WRAP_BIND_FLAG) {
          data[2] = source[2];
          newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
        }
        var value = source[3];
        if (value) {
          var partials = data[3];
          data[3] = partials ? composeArgs(partials, value, source[4]) : value;
          data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
        }
        value = source[5];
        if (value) {
          partials = data[5];
          data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
          data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
        }
        value = source[7];
        if (value) {
          data[7] = value;
        }
        if (srcBitmask & WRAP_ARY_FLAG) {
          data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
        }
        if (data[9] == null) {
          data[9] = source[9];
        }
        data[0] = source[0];
        data[1] = newBitmask;
        return data;
      }

      function nativeKeysIn(object) {
        var result = [];
        if (object != null) {
          for (var key in Object(object)) {
            result.push(key);
          }
        }
        return result;
      }

      function objectToString(value) {
        return nativeObjectToString.call(value);
      }

      function overRest(func, start, transform) {
        start = nativeMax(start === undefined$1 ? func.length - 1 : start, 0);
        return function () {
          var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);
          while (++index < length) {
            array[index] = args[start + index];
          }
          index = -1;
          var otherArgs = Array(start + 1);
          while (++index < start) {
            otherArgs[index] = args[index];
          }
          otherArgs[start] = transform(array);
          return apply(func, this, otherArgs);
        };
      }

      function parent(object, path) {
        return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
      }

      function reorder(array, indexes) {
        var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);
        while (length--) {
          var index = indexes[length];
          array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined$1;
        }
        return array;
      }

      function safeGet(object, key) {
        if (key === 'constructor' && typeof object[key] === 'function') {
          return;
        }
        if (key == '__proto__') {
          return;
        }
        return object[key];
      }

      var setData = shortOut(baseSetData);

      var setTimeout = ctxSetTimeout || function (func, wait) {
        return root.setTimeout(func, wait);
      };

      var setToString = shortOut(baseSetToString);

      function setWrapToString(wrapper, reference, bitmask) {
        var source = reference + '';
        return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
      }

      function shortOut(func) {
        var count = 0,
          lastCalled = 0;
        return function () {
          var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);
          lastCalled = stamp;
          if (remaining > 0) {
            if (++count >= HOT_COUNT) {
              return arguments[0];
            }
          } else {
            count = 0;
          }
          return func.apply(undefined$1, arguments);
        };
      }

      function shuffleSelf(array, size) {
        var index = -1,
          length = array.length,
          lastIndex = length - 1;
        size = size === undefined$1 ? length : size;
        while (++index < size) {
          var rand = baseRandom(index, lastIndex),
            value = array[rand];
          array[rand] = array[index];
          array[index] = value;
        }
        array.length = size;
        return array;
      }

      var stringToPath = memoizeCapped(function (string) {
        var result = [];
        if (string.charCodeAt(0) === 46) {
          result.push('');
        }
        string.replace(rePropName, function (match, number, quote, subString) {
          result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);
        });
        return result;
      });

      function toKey(value) {
        if (typeof value == 'string' || isSymbol(value)) {
          return value;
        }
        var result = value + '';
        return result == '0' && 1 / value == -INFINITY ? '-0' : result;
      }

      function toSource(func) {
        if (func != null) {
          try {
            return funcToString.call(func);
          } catch (e) {}
          try {
            return func + '';
          } catch (e) {}
        }
        return '';
      }

      function updateWrapDetails(details, bitmask) {
        arrayEach(wrapFlags, function (pair) {
          var value = '_.' + pair[0];
          if (bitmask & pair[1] && !arrayIncludes(details, value)) {
            details.push(value);
          }
        });
        return details.sort();
      }

      function wrapperClone(wrapper) {
        if (wrapper instanceof LazyWrapper) {
          return wrapper.clone();
        }
        var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
        result.__actions__ = copyArray(wrapper.__actions__);
        result.__index__ = wrapper.__index__;
        result.__values__ = wrapper.__values__;
        return result;
      }

      function chunk(array, size, guard) {
        if (guard ? isIterateeCall(array, size, guard) : size === undefined$1) {
          size = 1;
        } else {
          size = nativeMax(toInteger(size), 0);
        }
        var length = array == null ? 0 : array.length;
        if (!length || size < 1) {
          return [];
        }
        var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));
        while (index < length) {
          result[resIndex++] = baseSlice(array, index, index += size);
        }
        return result;
      }

      function compact(array) {
        var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];
        while (++index < length) {
          var value = array[index];
          if (value) {
            result[resIndex++] = value;
          }
        }
        return result;
      }

      function concat() {
        var length = arguments.length;
        if (!length) {
          return [];
        }
        var args = Array(length - 1),
          array = arguments[0],
          index = length;
        while (index--) {
          args[index - 1] = arguments[index];
        }
        return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
      }

      var difference = baseRest(function (array, values) {
        return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
      });

      var differenceBy = baseRest(function (array, values) {
        var iteratee = last(values);
        if (isArrayLikeObject(iteratee)) {
          iteratee = undefined$1;
        }
        return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2)) : [];
      });

      var differenceWith = baseRest(function (array, values) {
        var comparator = last(values);
        if (isArrayLikeObject(comparator)) {
          comparator = undefined$1;
        }
        return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined$1, comparator) : [];
      });

      function drop(array, n, guard) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return [];
        }
        n = guard || n === undefined$1 ? 1 : toInteger(n);
        return baseSlice(array, n < 0 ? 0 : n, length);
      }

      function dropRight(array, n, guard) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return [];
        }
        n = guard || n === undefined$1 ? 1 : toInteger(n);
        n = length - n;
        return baseSlice(array, 0, n < 0 ? 0 : n);
      }

      function dropRightWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
      }

      function dropWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
      }

      function fill(array, value, start, end) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return [];
        }
        if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
          start = 0;
          end = length;
        }
        return baseFill(array, value, start, end);
      }

      function findIndex(array, predicate, fromIndex) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return -1;
        }
        var index = fromIndex == null ? 0 : toInteger(fromIndex);
        if (index < 0) {
          index = nativeMax(length + index, 0);
        }
        return baseFindIndex(array, getIteratee(predicate, 3), index);
      }

      function findLastIndex(array, predicate, fromIndex) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return -1;
        }
        var index = length - 1;
        if (fromIndex !== undefined$1) {
          index = toInteger(fromIndex);
          index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
        }
        return baseFindIndex(array, getIteratee(predicate, 3), index, true);
      }

      function flatten(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseFlatten(array, 1) : [];
      }

      function flattenDeep(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseFlatten(array, INFINITY) : [];
      }

      function flattenDepth(array, depth) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return [];
        }
        depth = depth === undefined$1 ? 1 : toInteger(depth);
        return baseFlatten(array, depth);
      }

      function fromPairs(pairs) {
        var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};
        while (++index < length) {
          var pair = pairs[index];
          result[pair[0]] = pair[1];
        }
        return result;
      }

      function head(array) {
        return array && array.length ? array[0] : undefined$1;
      }

      function indexOf(array, value, fromIndex) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return -1;
        }
        var index = fromIndex == null ? 0 : toInteger(fromIndex);
        if (index < 0) {
          index = nativeMax(length + index, 0);
        }
        return baseIndexOf(array, value, index);
      }

      function initial(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseSlice(array, 0, -1) : [];
      }

      var intersection = baseRest(function (arrays) {
        var mapped = arrayMap(arrays, castArrayLikeObject);
        return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
      });

      var intersectionBy = baseRest(function (arrays) {
        var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);
        if (iteratee === last(mapped)) {
          iteratee = undefined$1;
        } else {
          mapped.pop();
        }
        return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee, 2)) : [];
      });

      var intersectionWith = baseRest(function (arrays) {
        var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);
        comparator = typeof comparator == 'function' ? comparator : undefined$1;
        if (comparator) {
          mapped.pop();
        }
        return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined$1, comparator) : [];
      });

      function join(array, separator) {
        return array == null ? '' : nativeJoin.call(array, separator);
      }

      function last(array) {
        var length = array == null ? 0 : array.length;
        return length ? array[length - 1] : undefined$1;
      }

      function lastIndexOf(array, value, fromIndex) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return -1;
        }
        var index = length;
        if (fromIndex !== undefined$1) {
          index = toInteger(fromIndex);
          index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
        }
        return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
      }

      function nth(array, n) {
        return array && array.length ? baseNth(array, toInteger(n)) : undefined$1;
      }

      var pull = baseRest(pullAll);

      function pullAll(array, values) {
        return array && array.length && values && values.length ? basePullAll(array, values) : array;
      }

      function pullAllBy(array, values, iteratee) {
        return array && array.length && values && values.length ? basePullAll(array, values, getIteratee(iteratee, 2)) : array;
      }

      function pullAllWith(array, values, comparator) {
        return array && array.length && values && values.length ? basePullAll(array, values, undefined$1, comparator) : array;
      }

      var pullAt = flatRest(function (array, indexes) {
        var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);
        basePullAt(array, arrayMap(indexes, function (index) {
          return isIndex(index, length) ? +index : index;
        }).sort(compareAscending));
        return result;
      });

      function remove(array, predicate) {
        var result = [];
        if (!(array && array.length)) {
          return result;
        }
        var index = -1,
          indexes = [],
          length = array.length;
        predicate = getIteratee(predicate, 3);
        while (++index < length) {
          var value = array[index];
          if (predicate(value, index, array)) {
            result.push(value);
            indexes.push(index);
          }
        }
        basePullAt(array, indexes);
        return result;
      }

      function reverse(array) {
        return array == null ? array : nativeReverse.call(array);
      }

      function slice(array, start, end) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return [];
        }
        if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
          start = 0;
          end = length;
        } else {
          start = start == null ? 0 : toInteger(start);
          end = end === undefined$1 ? length : toInteger(end);
        }
        return baseSlice(array, start, end);
      }

      function sortedIndex(array, value) {
        return baseSortedIndex(array, value);
      }

      function sortedIndexBy(array, value, iteratee) {
        return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
      }

      function sortedIndexOf(array, value) {
        var length = array == null ? 0 : array.length;
        if (length) {
          var index = baseSortedIndex(array, value);
          if (index < length && eq(array[index], value)) {
            return index;
          }
        }
        return -1;
      }

      function sortedLastIndex(array, value) {
        return baseSortedIndex(array, value, true);
      }

      function sortedLastIndexBy(array, value, iteratee) {
        return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
      }

      function sortedLastIndexOf(array, value) {
        var length = array == null ? 0 : array.length;
        if (length) {
          var index = baseSortedIndex(array, value, true) - 1;
          if (eq(array[index], value)) {
            return index;
          }
        }
        return -1;
      }

      function sortedUniq(array) {
        return array && array.length ? baseSortedUniq(array) : [];
      }

      function sortedUniqBy(array, iteratee) {
        return array && array.length ? baseSortedUniq(array, getIteratee(iteratee, 2)) : [];
      }

      function tail(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseSlice(array, 1, length) : [];
      }

      function take(array, n, guard) {
        if (!(array && array.length)) {
          return [];
        }
        n = guard || n === undefined$1 ? 1 : toInteger(n);
        return baseSlice(array, 0, n < 0 ? 0 : n);
      }

      function takeRight(array, n, guard) {
        var length = array == null ? 0 : array.length;
        if (!length) {
          return [];
        }
        n = guard || n === undefined$1 ? 1 : toInteger(n);
        n = length - n;
        return baseSlice(array, n < 0 ? 0 : n, length);
      }

      function takeRightWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
      }

      function takeWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
      }

      var union = baseRest(function (arrays) {
        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
      });

      var unionBy = baseRest(function (arrays) {
        var iteratee = last(arrays);
        if (isArrayLikeObject(iteratee)) {
          iteratee = undefined$1;
        }
        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
      });

      var unionWith = baseRest(function (arrays) {
        var comparator = last(arrays);
        comparator = typeof comparator == 'function' ? comparator : undefined$1;
        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined$1, comparator);
      });

      function uniq(array) {
        return array && array.length ? baseUniq(array) : [];
      }

      function uniqBy(array, iteratee) {
        return array && array.length ? baseUniq(array, getIteratee(iteratee, 2)) : [];
      }

      function uniqWith(array, comparator) {
        comparator = typeof comparator == 'function' ? comparator : undefined$1;
        return array && array.length ? baseUniq(array, undefined$1, comparator) : [];
      }

      function unzip(array) {
        if (!(array && array.length)) {
          return [];
        }
        var length = 0;
        array = arrayFilter(array, function (group) {
          if (isArrayLikeObject(group)) {
            length = nativeMax(group.length, length);
            return true;
          }
        });
        return baseTimes(length, function (index) {
          return arrayMap(array, baseProperty(index));
        });
      }

      function unzipWith(array, iteratee) {
        if (!(array && array.length)) {
          return [];
        }
        var result = unzip(array);
        if (iteratee == null) {
          return result;
        }
        return arrayMap(result, function (group) {
          return apply(iteratee, undefined$1, group);
        });
      }

      var without = baseRest(function (array, values) {
        return isArrayLikeObject(array) ? baseDifference(array, values) : [];
      });

      var xor = baseRest(function (arrays) {
        return baseXor(arrayFilter(arrays, isArrayLikeObject));
      });

      var xorBy = baseRest(function (arrays) {
        var iteratee = last(arrays);
        if (isArrayLikeObject(iteratee)) {
          iteratee = undefined$1;
        }
        return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
      });

      var xorWith = baseRest(function (arrays) {
        var comparator = last(arrays);
        comparator = typeof comparator == 'function' ? comparator : undefined$1;
        return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined$1, comparator);
      });

      var zip = baseRest(unzip);

      function zipObject(props, values) {
        return baseZipObject(props || [], values || [], assignValue);
      }

      function zipObjectDeep(props, values) {
        return baseZipObject(props || [], values || [], baseSet);
      }

      var zipWith = baseRest(function (arrays) {
        var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined$1;
        iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined$1;
        return unzipWith(arrays, iteratee);
      });

      function chain(value) {
        var result = lodash(value);
        result.__chain__ = true;
        return result;
      }

      function tap(value, interceptor) {
        interceptor(value);
        return value;
      }

      function thru(value, interceptor) {
        return interceptor(value);
      }

      var wrapperAt = flatRest(function (paths) {
        var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function interceptor(object) {
            return baseAt(object, paths);
          };
        if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {
          return this.thru(interceptor);
        }
        value = value.slice(start, +start + (length ? 1 : 0));
        value.__actions__.push({
          'func': thru,
          'args': [interceptor],
          'thisArg': undefined$1
        });
        return new LodashWrapper(value, this.__chain__).thru(function (array) {
          if (length && !array.length) {
            array.push(undefined$1);
          }
          return array;
        });
      });

      function wrapperChain() {
        return chain(this);
      }

      function wrapperCommit() {
        return new LodashWrapper(this.value(), this.__chain__);
      }

      function wrapperNext() {
        if (this.__values__ === undefined$1) {
          this.__values__ = toArray(this.value());
        }
        var done = this.__index__ >= this.__values__.length,
          value = done ? undefined$1 : this.__values__[this.__index__++];
        return {
          'done': done,
          'value': value
        };
      }

      function wrapperToIterator() {
        return this;
      }

      function wrapperPlant(value) {
        var result,
          parent = this;
        while (parent instanceof baseLodash) {
          var clone = wrapperClone(parent);
          clone.__index__ = 0;
          clone.__values__ = undefined$1;
          if (result) {
            previous.__wrapped__ = clone;
          } else {
            result = clone;
          }
          var previous = clone;
          parent = parent.__wrapped__;
        }
        previous.__wrapped__ = value;
        return result;
      }

      function wrapperReverse() {
        var value = this.__wrapped__;
        if (value instanceof LazyWrapper) {
          var wrapped = value;
          if (this.__actions__.length) {
            wrapped = new LazyWrapper(this);
          }
          wrapped = wrapped.reverse();
          wrapped.__actions__.push({
            'func': thru,
            'args': [reverse],
            'thisArg': undefined$1
          });
          return new LodashWrapper(wrapped, this.__chain__);
        }
        return this.thru(reverse);
      }

      function wrapperValue() {
        return baseWrapperValue(this.__wrapped__, this.__actions__);
      }

      var countBy = createAggregator(function (result, value, key) {
        if (hasOwnProperty.call(result, key)) {
          ++result[key];
        } else {
          baseAssignValue(result, key, 1);
        }
      });

      function every(collection, predicate, guard) {
        var func = isArray(collection) ? arrayEvery : baseEvery;
        if (guard && isIterateeCall(collection, predicate, guard)) {
          predicate = undefined$1;
        }
        return func(collection, getIteratee(predicate, 3));
      }

      function filter(collection, predicate) {
        var func = isArray(collection) ? arrayFilter : baseFilter;
        return func(collection, getIteratee(predicate, 3));
      }

      var find = createFind(findIndex);

      var findLast = createFind(findLastIndex);

      function flatMap(collection, iteratee) {
        return baseFlatten(map(collection, iteratee), 1);
      }

      function flatMapDeep(collection, iteratee) {
        return baseFlatten(map(collection, iteratee), INFINITY);
      }

      function flatMapDepth(collection, iteratee, depth) {
        depth = depth === undefined$1 ? 1 : toInteger(depth);
        return baseFlatten(map(collection, iteratee), depth);
      }

      function forEach(collection, iteratee) {
        var func = isArray(collection) ? arrayEach : baseEach;
        return func(collection, getIteratee(iteratee, 3));
      }

      function forEachRight(collection, iteratee) {
        var func = isArray(collection) ? arrayEachRight : baseEachRight;
        return func(collection, getIteratee(iteratee, 3));
      }

      var groupBy = createAggregator(function (result, value, key) {
        if (hasOwnProperty.call(result, key)) {
          result[key].push(value);
        } else {
          baseAssignValue(result, key, [value]);
        }
      });

      function includes(collection, value, fromIndex, guard) {
        collection = isArrayLike(collection) ? collection : values(collection);
        fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
        var length = collection.length;
        if (fromIndex < 0) {
          fromIndex = nativeMax(length + fromIndex, 0);
        }
        return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
      }

      var invokeMap = baseRest(function (collection, path, args) {
        var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];
        baseEach(collection, function (value) {
          result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
        });
        return result;
      });

      var keyBy = createAggregator(function (result, value, key) {
        baseAssignValue(result, key, value);
      });

      function map(collection, iteratee) {
        var func = isArray(collection) ? arrayMap : baseMap;
        return func(collection, getIteratee(iteratee, 3));
      }

      function orderBy(collection, iteratees, orders, guard) {
        if (collection == null) {
          return [];
        }
        if (!isArray(iteratees)) {
          iteratees = iteratees == null ? [] : [iteratees];
        }
        orders = guard ? undefined$1 : orders;
        if (!isArray(orders)) {
          orders = orders == null ? [] : [orders];
        }
        return baseOrderBy(collection, iteratees, orders);
      }

      var partition = createAggregator(function (result, value, key) {
        result[key ? 0 : 1].push(value);
      }, function () {
        return [[], []];
      });

      function reduce(collection, iteratee, accumulator) {
        var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;
        return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
      }

      function reduceRight(collection, iteratee, accumulator) {
        var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;
        return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
      }

      function reject(collection, predicate) {
        var func = isArray(collection) ? arrayFilter : baseFilter;
        return func(collection, negate(getIteratee(predicate, 3)));
      }

      function sample(collection) {
        var func = isArray(collection) ? arraySample : baseSample;
        return func(collection);
      }

      function sampleSize(collection, n, guard) {
        if (guard ? isIterateeCall(collection, n, guard) : n === undefined$1) {
          n = 1;
        } else {
          n = toInteger(n);
        }
        var func = isArray(collection) ? arraySampleSize : baseSampleSize;
        return func(collection, n);
      }

      function shuffle(collection) {
        var func = isArray(collection) ? arrayShuffle : baseShuffle;
        return func(collection);
      }

      function size(collection) {
        if (collection == null) {
          return 0;
        }
        if (isArrayLike(collection)) {
          return isString(collection) ? stringSize(collection) : collection.length;
        }
        var tag = getTag(collection);
        if (tag == mapTag || tag == setTag) {
          return collection.size;
        }
        return baseKeys(collection).length;
      }

      function some(collection, predicate, guard) {
        var func = isArray(collection) ? arraySome : baseSome;
        if (guard && isIterateeCall(collection, predicate, guard)) {
          predicate = undefined$1;
        }
        return func(collection, getIteratee(predicate, 3));
      }

      var sortBy = baseRest(function (collection, iteratees) {
        if (collection == null) {
          return [];
        }
        var length = iteratees.length;
        if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
          iteratees = [];
        } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
          iteratees = [iteratees[0]];
        }
        return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
      });

      var now = ctxNow || function () {
        return root.Date.now();
      };

      function after(n, func) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        n = toInteger(n);
        return function () {
          if (--n < 1) {
            return func.apply(this, arguments);
          }
        };
      }

      function ary(func, n, guard) {
        n = guard ? undefined$1 : n;
        n = func && n == null ? func.length : n;
        return createWrap(func, WRAP_ARY_FLAG, undefined$1, undefined$1, undefined$1, undefined$1, n);
      }

      function before(n, func) {
        var result;
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        n = toInteger(n);
        return function () {
          if (--n > 0) {
            result = func.apply(this, arguments);
          }
          if (n <= 1) {
            func = undefined$1;
          }
          return result;
        };
      }

      var bind = baseRest(function (func, thisArg, partials) {
        var bitmask = WRAP_BIND_FLAG;
        if (partials.length) {
          var holders = replaceHolders(partials, getHolder(bind));
          bitmask |= WRAP_PARTIAL_FLAG;
        }
        return createWrap(func, bitmask, thisArg, partials, holders);
      });

      var bindKey = baseRest(function (object, key, partials) {
        var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
        if (partials.length) {
          var holders = replaceHolders(partials, getHolder(bindKey));
          bitmask |= WRAP_PARTIAL_FLAG;
        }
        return createWrap(key, bitmask, object, partials, holders);
      });

      function curry(func, arity, guard) {
        arity = guard ? undefined$1 : arity;
        var result = createWrap(func, WRAP_CURRY_FLAG, undefined$1, undefined$1, undefined$1, undefined$1, undefined$1, arity);
        result.placeholder = curry.placeholder;
        return result;
      }

      function curryRight(func, arity, guard) {
        arity = guard ? undefined$1 : arity;
        var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined$1, undefined$1, undefined$1, undefined$1, undefined$1, arity);
        result.placeholder = curryRight.placeholder;
        return result;
      }

      function debounce(func, wait, options) {
        var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        wait = toNumber(wait) || 0;
        if (isObject(options)) {
          leading = !!options.leading;
          maxing = 'maxWait' in options;
          maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
          trailing = 'trailing' in options ? !!options.trailing : trailing;
        }
        function invokeFunc(time) {
          var args = lastArgs,
            thisArg = lastThis;
          lastArgs = lastThis = undefined$1;
          lastInvokeTime = time;
          result = func.apply(thisArg, args);
          return result;
        }
        function leadingEdge(time) {
          lastInvokeTime = time;
          timerId = setTimeout(timerExpired, wait);
          return leading ? invokeFunc(time) : result;
        }
        function remainingWait(time) {
          var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;
          return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
        }
        function shouldInvoke(time) {
          var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

          return lastCallTime === undefined$1 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
        }
        function timerExpired() {
          var time = now();
          if (shouldInvoke(time)) {
            return trailingEdge(time);
          }
          timerId = setTimeout(timerExpired, remainingWait(time));
        }
        function trailingEdge(time) {
          timerId = undefined$1;

          if (trailing && lastArgs) {
            return invokeFunc(time);
          }
          lastArgs = lastThis = undefined$1;
          return result;
        }
        function cancel() {
          if (timerId !== undefined$1) {
            clearTimeout(timerId);
          }
          lastInvokeTime = 0;
          lastArgs = lastCallTime = lastThis = timerId = undefined$1;
        }
        function flush() {
          return timerId === undefined$1 ? result : trailingEdge(now());
        }
        function debounced() {
          var time = now(),
            isInvoking = shouldInvoke(time);
          lastArgs = arguments;
          lastThis = this;
          lastCallTime = time;
          if (isInvoking) {
            if (timerId === undefined$1) {
              return leadingEdge(lastCallTime);
            }
            if (maxing) {
              clearTimeout(timerId);
              timerId = setTimeout(timerExpired, wait);
              return invokeFunc(lastCallTime);
            }
          }
          if (timerId === undefined$1) {
            timerId = setTimeout(timerExpired, wait);
          }
          return result;
        }
        debounced.cancel = cancel;
        debounced.flush = flush;
        return debounced;
      }

      var defer = baseRest(function (func, args) {
        return baseDelay(func, 1, args);
      });

      var delay = baseRest(function (func, wait, args) {
        return baseDelay(func, toNumber(wait) || 0, args);
      });

      function flip(func) {
        return createWrap(func, WRAP_FLIP_FLAG);
      }

      function memoize(func, resolver) {
        if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        var memoized = function memoized() {
          var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;
          if (cache.has(key)) {
            return cache.get(key);
          }
          var result = func.apply(this, args);
          memoized.cache = cache.set(key, result) || cache;
          return result;
        };
        memoized.cache = new (memoize.Cache || MapCache)();
        return memoized;
      }

      memoize.Cache = MapCache;

      function negate(predicate) {
        if (typeof predicate != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return function () {
          var args = arguments;
          switch (args.length) {
            case 0:
              return !predicate.call(this);
            case 1:
              return !predicate.call(this, args[0]);
            case 2:
              return !predicate.call(this, args[0], args[1]);
            case 3:
              return !predicate.call(this, args[0], args[1], args[2]);
          }
          return !predicate.apply(this, args);
        };
      }

      function once(func) {
        return before(2, func);
      }

      var overArgs = castRest(function (func, transforms) {
        transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
        var funcsLength = transforms.length;
        return baseRest(function (args) {
          var index = -1,
            length = nativeMin(args.length, funcsLength);
          while (++index < length) {
            args[index] = transforms[index].call(this, args[index]);
          }
          return apply(func, this, args);
        });
      });

      var partial = baseRest(function (func, partials) {
        var holders = replaceHolders(partials, getHolder(partial));
        return createWrap(func, WRAP_PARTIAL_FLAG, undefined$1, partials, holders);
      });

      var partialRight = baseRest(function (func, partials) {
        var holders = replaceHolders(partials, getHolder(partialRight));
        return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined$1, partials, holders);
      });

      var rearg = flatRest(function (func, indexes) {
        return createWrap(func, WRAP_REARG_FLAG, undefined$1, undefined$1, undefined$1, indexes);
      });

      function rest(func, start) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        start = start === undefined$1 ? start : toInteger(start);
        return baseRest(func, start);
      }

      function spread(func, start) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        start = start == null ? 0 : nativeMax(toInteger(start), 0);
        return baseRest(function (args) {
          var array = args[start],
            otherArgs = castSlice(args, 0, start);
          if (array) {
            arrayPush(otherArgs, array);
          }
          return apply(func, this, otherArgs);
        });
      }

      function throttle(func, wait, options) {
        var leading = true,
          trailing = true;
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        if (isObject(options)) {
          leading = 'leading' in options ? !!options.leading : leading;
          trailing = 'trailing' in options ? !!options.trailing : trailing;
        }
        return debounce(func, wait, {
          'leading': leading,
          'maxWait': wait,
          'trailing': trailing
        });
      }

      function unary(func) {
        return ary(func, 1);
      }

      function wrap(value, wrapper) {
        return partial(castFunction(wrapper), value);
      }

      function castArray() {
        if (!arguments.length) {
          return [];
        }
        var value = arguments[0];
        return isArray(value) ? value : [value];
      }

      function clone(value) {
        return baseClone(value, CLONE_SYMBOLS_FLAG);
      }

      function cloneWith(value, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined$1;
        return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
      }

      function cloneDeep(value) {
        return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
      }

      function cloneDeepWith(value, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined$1;
        return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
      }

      function conformsTo(object, source) {
        return source == null || baseConformsTo(object, source, keys(source));
      }

      function eq(value, other) {
        return value === other || value !== value && other !== other;
      }

      var gt = createRelationalOperation(baseGt);

      var gte = createRelationalOperation(function (value, other) {
        return value >= other;
      });

      var isArguments = baseIsArguments(function () {
        return arguments;
      }()) ? baseIsArguments : function (value) {
        return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
      };

      var isArray = Array.isArray;

      var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

      function isArrayLike(value) {
        return value != null && isLength(value.length) && !isFunction(value);
      }

      function isArrayLikeObject(value) {
        return isObjectLike(value) && isArrayLike(value);
      }

      function isBoolean(value) {
        return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
      }

      var isBuffer = nativeIsBuffer || stubFalse;

      var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

      function isElement(value) {
        return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
      }

      function isEmpty(value) {
        if (value == null) {
          return true;
        }
        if (isArrayLike(value) && (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
          return !value.length;
        }
        var tag = getTag(value);
        if (tag == mapTag || tag == setTag) {
          return !value.size;
        }
        if (isPrototype(value)) {
          return !baseKeys(value).length;
        }
        for (var key in value) {
          if (hasOwnProperty.call(value, key)) {
            return false;
          }
        }
        return true;
      }

      function isEqual(value, other) {
        return baseIsEqual(value, other);
      }

      function isEqualWith(value, other, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined$1;
        var result = customizer ? customizer(value, other) : undefined$1;
        return result === undefined$1 ? baseIsEqual(value, other, undefined$1, customizer) : !!result;
      }

      function isError(value) {
        if (!isObjectLike(value)) {
          return false;
        }
        var tag = baseGetTag(value);
        return tag == errorTag || tag == domExcTag || typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value);
      }

      function isFinite(value) {
        return typeof value == 'number' && nativeIsFinite(value);
      }

      function isFunction(value) {
        if (!isObject(value)) {
          return false;
        }
        var tag = baseGetTag(value);
        return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
      }

      function isInteger(value) {
        return typeof value == 'number' && value == toInteger(value);
      }

      function isLength(value) {
        return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
      }

      function isObject(value) {
        var type = typeof value;
        return value != null && (type == 'object' || type == 'function');
      }

      function isObjectLike(value) {
        return value != null && typeof value == 'object';
      }

      var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

      function isMatch(object, source) {
        return object === source || baseIsMatch(object, source, getMatchData(source));
      }

      function isMatchWith(object, source, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined$1;
        return baseIsMatch(object, source, getMatchData(source), customizer);
      }

      function isNaN(value) {
        return isNumber(value) && value != +value;
      }

      function isNative(value) {
        if (isMaskable(value)) {
          throw new Error(CORE_ERROR_TEXT);
        }
        return baseIsNative(value);
      }

      function isNull(value) {
        return value === null;
      }

      function isNil(value) {
        return value == null;
      }

      function isNumber(value) {
        return typeof value == 'number' || isObjectLike(value) && baseGetTag(value) == numberTag;
      }

      function isPlainObject(value) {
        if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
          return false;
        }
        var proto = getPrototype(value);
        if (proto === null) {
          return true;
        }
        var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
        return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
      }

      var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

      function isSafeInteger(value) {
        return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
      }

      var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

      function isString(value) {
        return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
      }

      function isSymbol(value) {
        return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
      }

      var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

      function isUndefined(value) {
        return value === undefined$1;
      }

      function isWeakMap(value) {
        return isObjectLike(value) && getTag(value) == weakMapTag;
      }

      function isWeakSet(value) {
        return isObjectLike(value) && baseGetTag(value) == weakSetTag;
      }

      var lt = createRelationalOperation(baseLt);

      var lte = createRelationalOperation(function (value, other) {
        return value <= other;
      });

      function toArray(value) {
        if (!value) {
          return [];
        }
        if (isArrayLike(value)) {
          return isString(value) ? stringToArray(value) : copyArray(value);
        }
        if (symIterator && value[symIterator]) {
          return iteratorToArray(value[symIterator]());
        }
        var tag = getTag(value),
          func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
        return func(value);
      }

      function toFinite(value) {
        if (!value) {
          return value === 0 ? value : 0;
        }
        value = toNumber(value);
        if (value === INFINITY || value === -INFINITY) {
          var sign = value < 0 ? -1 : 1;
          return sign * MAX_INTEGER;
        }
        return value === value ? value : 0;
      }

      function toInteger(value) {
        var result = toFinite(value),
          remainder = result % 1;
        return result === result ? remainder ? result - remainder : result : 0;
      }

      function toLength(value) {
        return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
      }

      function toNumber(value) {
        if (typeof value == 'number') {
          return value;
        }
        if (isSymbol(value)) {
          return NAN;
        }
        if (isObject(value)) {
          var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
          value = isObject(other) ? other + '' : other;
        }
        if (typeof value != 'string') {
          return value === 0 ? value : +value;
        }
        value = baseTrim(value);
        var isBinary = reIsBinary.test(value);
        return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
      }

      function toPlainObject(value) {
        return copyObject(value, keysIn(value));
      }

      function toSafeInteger(value) {
        return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
      }

      function toString(value) {
        return value == null ? '' : baseToString(value);
      }

      var assign = createAssigner(function (object, source) {
        if (isPrototype(source) || isArrayLike(source)) {
          copyObject(source, keys(source), object);
          return;
        }
        for (var key in source) {
          if (hasOwnProperty.call(source, key)) {
            assignValue(object, key, source[key]);
          }
        }
      });

      var assignIn = createAssigner(function (object, source) {
        copyObject(source, keysIn(source), object);
      });

      var assignInWith = createAssigner(function (object, source, srcIndex, customizer) {
        copyObject(source, keysIn(source), object, customizer);
      });

      var assignWith = createAssigner(function (object, source, srcIndex, customizer) {
        copyObject(source, keys(source), object, customizer);
      });

      var at = flatRest(baseAt);

      function create(prototype, properties) {
        var result = baseCreate(prototype);
        return properties == null ? result : baseAssign(result, properties);
      }

      var defaults = baseRest(function (object, sources) {
        object = Object(object);
        var index = -1;
        var length = sources.length;
        var guard = length > 2 ? sources[2] : undefined$1;
        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          length = 1;
        }
        while (++index < length) {
          var source = sources[index];
          var props = keysIn(source);
          var propsIndex = -1;
          var propsLength = props.length;
          while (++propsIndex < propsLength) {
            var key = props[propsIndex];
            var value = object[key];
            if (value === undefined$1 || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) {
              object[key] = source[key];
            }
          }
        }
        return object;
      });

      var defaultsDeep = baseRest(function (args) {
        args.push(undefined$1, customDefaultsMerge);
        return apply(mergeWith, undefined$1, args);
      });

      function findKey(object, predicate) {
        return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
      }

      function findLastKey(object, predicate) {
        return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
      }

      function forIn(object, iteratee) {
        return object == null ? object : baseFor(object, getIteratee(iteratee, 3), keysIn);
      }

      function forInRight(object, iteratee) {
        return object == null ? object : baseForRight(object, getIteratee(iteratee, 3), keysIn);
      }

      function forOwn(object, iteratee) {
        return object && baseForOwn(object, getIteratee(iteratee, 3));
      }

      function forOwnRight(object, iteratee) {
        return object && baseForOwnRight(object, getIteratee(iteratee, 3));
      }

      function functions(object) {
        return object == null ? [] : baseFunctions(object, keys(object));
      }

      function functionsIn(object) {
        return object == null ? [] : baseFunctions(object, keysIn(object));
      }

      function get(object, path, defaultValue) {
        var result = object == null ? undefined$1 : baseGet(object, path);
        return result === undefined$1 ? defaultValue : result;
      }

      function has(object, path) {
        return object != null && hasPath(object, path, baseHas);
      }

      function hasIn(object, path) {
        return object != null && hasPath(object, path, baseHasIn);
      }

      var invert = createInverter(function (result, value, key) {
        if (value != null && typeof value.toString != 'function') {
          value = nativeObjectToString.call(value);
        }
        result[value] = key;
      }, constant(identity));

      var invertBy = createInverter(function (result, value, key) {
        if (value != null && typeof value.toString != 'function') {
          value = nativeObjectToString.call(value);
        }
        if (hasOwnProperty.call(result, value)) {
          result[value].push(key);
        } else {
          result[value] = [key];
        }
      }, getIteratee);

      var invoke = baseRest(baseInvoke);

      function keys(object) {
        return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
      }

      function keysIn(object) {
        return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
      }

      function mapKeys(object, iteratee) {
        var result = {};
        iteratee = getIteratee(iteratee, 3);
        baseForOwn(object, function (value, key, object) {
          baseAssignValue(result, iteratee(value, key, object), value);
        });
        return result;
      }

      function mapValues(object, iteratee) {
        var result = {};
        iteratee = getIteratee(iteratee, 3);
        baseForOwn(object, function (value, key, object) {
          baseAssignValue(result, key, iteratee(value, key, object));
        });
        return result;
      }

      var merge = createAssigner(function (object, source, srcIndex) {
        baseMerge(object, source, srcIndex);
      });

      var mergeWith = createAssigner(function (object, source, srcIndex, customizer) {
        baseMerge(object, source, srcIndex, customizer);
      });

      var omit = flatRest(function (object, paths) {
        var result = {};
        if (object == null) {
          return result;
        }
        var isDeep = false;
        paths = arrayMap(paths, function (path) {
          path = castPath(path, object);
          isDeep || (isDeep = path.length > 1);
          return path;
        });
        copyObject(object, getAllKeysIn(object), result);
        if (isDeep) {
          result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
        }
        var length = paths.length;
        while (length--) {
          baseUnset(result, paths[length]);
        }
        return result;
      });

      function omitBy(object, predicate) {
        return pickBy(object, negate(getIteratee(predicate)));
      }

      var pick = flatRest(function (object, paths) {
        return object == null ? {} : basePick(object, paths);
      });

      function pickBy(object, predicate) {
        if (object == null) {
          return {};
        }
        var props = arrayMap(getAllKeysIn(object), function (prop) {
          return [prop];
        });
        predicate = getIteratee(predicate);
        return basePickBy(object, props, function (value, path) {
          return predicate(value, path[0]);
        });
      }

      function result(object, path, defaultValue) {
        path = castPath(path, object);
        var index = -1,
          length = path.length;

        if (!length) {
          length = 1;
          object = undefined$1;
        }
        while (++index < length) {
          var value = object == null ? undefined$1 : object[toKey(path[index])];
          if (value === undefined$1) {
            index = length;
            value = defaultValue;
          }
          object = isFunction(value) ? value.call(object) : value;
        }
        return object;
      }

      function set(object, path, value) {
        return object == null ? object : baseSet(object, path, value);
      }

      function setWith(object, path, value, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined$1;
        return object == null ? object : baseSet(object, path, value, customizer);
      }

      var toPairs = createToPairs(keys);

      var toPairsIn = createToPairs(keysIn);

      function transform(object, iteratee, accumulator) {
        var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);
        iteratee = getIteratee(iteratee, 4);
        if (accumulator == null) {
          var Ctor = object && object.constructor;
          if (isArrLike) {
            accumulator = isArr ? new Ctor() : [];
          } else if (isObject(object)) {
            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
          } else {
            accumulator = {};
          }
        }
        (isArrLike ? arrayEach : baseForOwn)(object, function (value, index, object) {
          return iteratee(accumulator, value, index, object);
        });
        return accumulator;
      }

      function unset(object, path) {
        return object == null ? true : baseUnset(object, path);
      }

      function update(object, path, updater) {
        return object == null ? object : baseUpdate(object, path, castFunction(updater));
      }

      function updateWith(object, path, updater, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined$1;
        return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
      }

      function values(object) {
        return object == null ? [] : baseValues(object, keys(object));
      }

      function valuesIn(object) {
        return object == null ? [] : baseValues(object, keysIn(object));
      }

      function clamp(number, lower, upper) {
        if (upper === undefined$1) {
          upper = lower;
          lower = undefined$1;
        }
        if (upper !== undefined$1) {
          upper = toNumber(upper);
          upper = upper === upper ? upper : 0;
        }
        if (lower !== undefined$1) {
          lower = toNumber(lower);
          lower = lower === lower ? lower : 0;
        }
        return baseClamp(toNumber(number), lower, upper);
      }

      function inRange(number, start, end) {
        start = toFinite(start);
        if (end === undefined$1) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        number = toNumber(number);
        return baseInRange(number, start, end);
      }

      function random(lower, upper, floating) {
        if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
          upper = floating = undefined$1;
        }
        if (floating === undefined$1) {
          if (typeof upper == 'boolean') {
            floating = upper;
            upper = undefined$1;
          } else if (typeof lower == 'boolean') {
            floating = lower;
            lower = undefined$1;
          }
        }
        if (lower === undefined$1 && upper === undefined$1) {
          lower = 0;
          upper = 1;
        } else {
          lower = toFinite(lower);
          if (upper === undefined$1) {
            upper = lower;
            lower = 0;
          } else {
            upper = toFinite(upper);
          }
        }
        if (lower > upper) {
          var temp = lower;
          lower = upper;
          upper = temp;
        }
        if (floating || lower % 1 || upper % 1) {
          var rand = nativeRandom();
          return nativeMin(lower + rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1))), upper);
        }
        return baseRandom(lower, upper);
      }

      var camelCase = createCompounder(function (result, word, index) {
        word = word.toLowerCase();
        return result + (index ? capitalize(word) : word);
      });

      function capitalize(string) {
        return upperFirst(toString(string).toLowerCase());
      }

      function deburr(string) {
        string = toString(string);
        return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
      }

      function endsWith(string, target, position) {
        string = toString(string);
        target = baseToString(target);
        var length = string.length;
        position = position === undefined$1 ? length : baseClamp(toInteger(position), 0, length);
        var end = position;
        position -= target.length;
        return position >= 0 && string.slice(position, end) == target;
      }

      function escape(string) {
        string = toString(string);
        return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
      }

      function escapeRegExp(string) {
        string = toString(string);
        return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\$&') : string;
      }

      var kebabCase = createCompounder(function (result, word, index) {
        return result + (index ? '-' : '') + word.toLowerCase();
      });

      var lowerCase = createCompounder(function (result, word, index) {
        return result + (index ? ' ' : '') + word.toLowerCase();
      });

      var lowerFirst = createCaseFirst('toLowerCase');

      function pad(string, length, chars) {
        string = toString(string);
        length = toInteger(length);
        var strLength = length ? stringSize(string) : 0;
        if (!length || strLength >= length) {
          return string;
        }
        var mid = (length - strLength) / 2;
        return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
      }

      function padEnd(string, length, chars) {
        string = toString(string);
        length = toInteger(length);
        var strLength = length ? stringSize(string) : 0;
        return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
      }

      function padStart(string, length, chars) {
        string = toString(string);
        length = toInteger(length);
        var strLength = length ? stringSize(string) : 0;
        return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
      }

      function parseInt(string, radix, guard) {
        if (guard || radix == null) {
          radix = 0;
        } else if (radix) {
          radix = +radix;
        }
        return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
      }

      function repeat(string, n, guard) {
        if (guard ? isIterateeCall(string, n, guard) : n === undefined$1) {
          n = 1;
        } else {
          n = toInteger(n);
        }
        return baseRepeat(toString(string), n);
      }

      function replace() {
        var args = arguments,
          string = toString(args[0]);
        return args.length < 3 ? string : string.replace(args[1], args[2]);
      }

      var snakeCase = createCompounder(function (result, word, index) {
        return result + (index ? '_' : '') + word.toLowerCase();
      });

      function split(string, separator, limit) {
        if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
          separator = limit = undefined$1;
        }
        limit = limit === undefined$1 ? MAX_ARRAY_LENGTH : limit >>> 0;
        if (!limit) {
          return [];
        }
        string = toString(string);
        if (string && (typeof separator == 'string' || separator != null && !isRegExp(separator))) {
          separator = baseToString(separator);
          if (!separator && hasUnicode(string)) {
            return castSlice(stringToArray(string), 0, limit);
          }
        }
        return string.split(separator, limit);
      }

      var startCase = createCompounder(function (result, word, index) {
        return result + (index ? ' ' : '') + upperFirst(word);
      });

      function startsWith(string, target, position) {
        string = toString(string);
        position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);
        target = baseToString(target);
        return string.slice(position, position + target.length) == target;
      }

      function template(string, options, guard) {
        var settings = lodash.templateSettings;
        if (guard && isIterateeCall(string, options, guard)) {
          options = undefined$1;
        }
        string = toString(string);
        options = assignInWith({}, options, settings, customDefaultsAssignIn);
        var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);
        var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

        var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g');

        var sourceURL = '//# sourceURL=' + (hasOwnProperty.call(options, 'sourceURL') ? (options.sourceURL + '').replace(/\s/g, ' ') : 'lodash.templateSources[' + ++templateCounter + ']') + '\n';
        string.replace(reDelimiters, function (match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
          interpolateValue || (interpolateValue = esTemplateValue);

          source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

          if (escapeValue) {
            isEscaping = true;
            source += "' +\n__e(" + escapeValue + ") +\n'";
          }
          if (evaluateValue) {
            isEvaluating = true;
            source += "';\n" + evaluateValue + ";\n__p += '";
          }
          if (interpolateValue) {
            source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
          }
          index = offset + match.length;

          return match;
        });
        source += "';\n";

        var variable = hasOwnProperty.call(options, 'variable') && options.variable;
        if (!variable) {
          source = 'with (obj) {\n' + source + '\n}\n';
        }
        else if (reForbiddenIdentifierChars.test(variable)) {
          throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
        }

        source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;');

        source = 'function(' + (variable || 'obj') + ') {\n' + (variable ? '' : 'obj || (obj = {});\n') + "var __t, __p = ''" + (isEscaping ? ', __e = _.escape' : '') + (isEvaluating ? ', __j = Array.prototype.join;\n' + "function print() { __p += __j.call(arguments, '') }\n" : ';\n') + source + 'return __p\n}';
        var result = attempt(function () {
          return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined$1, importsValues);
        });

        result.source = source;
        if (isError(result)) {
          throw result;
        }
        return result;
      }

      function toLower(value) {
        return toString(value).toLowerCase();
      }

      function toUpper(value) {
        return toString(value).toUpperCase();
      }

      function trim(string, chars, guard) {
        string = toString(string);
        if (string && (guard || chars === undefined$1)) {
          return baseTrim(string);
        }
        if (!string || !(chars = baseToString(chars))) {
          return string;
        }
        var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;
        return castSlice(strSymbols, start, end).join('');
      }

      function trimEnd(string, chars, guard) {
        string = toString(string);
        if (string && (guard || chars === undefined$1)) {
          return string.slice(0, trimmedEndIndex(string) + 1);
        }
        if (!string || !(chars = baseToString(chars))) {
          return string;
        }
        var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
        return castSlice(strSymbols, 0, end).join('');
      }

      function trimStart(string, chars, guard) {
        string = toString(string);
        if (string && (guard || chars === undefined$1)) {
          return string.replace(reTrimStart, '');
        }
        if (!string || !(chars = baseToString(chars))) {
          return string;
        }
        var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));
        return castSlice(strSymbols, start).join('');
      }

      function truncate(string, options) {
        var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;
        if (isObject(options)) {
          var separator = 'separator' in options ? options.separator : separator;
          length = 'length' in options ? toInteger(options.length) : length;
          omission = 'omission' in options ? baseToString(options.omission) : omission;
        }
        string = toString(string);
        var strLength = string.length;
        if (hasUnicode(string)) {
          var strSymbols = stringToArray(string);
          strLength = strSymbols.length;
        }
        if (length >= strLength) {
          return string;
        }
        var end = length - stringSize(omission);
        if (end < 1) {
          return omission;
        }
        var result = strSymbols ? castSlice(strSymbols, 0, end).join('') : string.slice(0, end);
        if (separator === undefined$1) {
          return result + omission;
        }
        if (strSymbols) {
          end += result.length - end;
        }
        if (isRegExp(separator)) {
          if (string.slice(end).search(separator)) {
            var match,
              substring = result;
            if (!separator.global) {
              separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
            }
            separator.lastIndex = 0;
            while (match = separator.exec(substring)) {
              var newEnd = match.index;
            }
            result = result.slice(0, newEnd === undefined$1 ? end : newEnd);
          }
        } else if (string.indexOf(baseToString(separator), end) != end) {
          var index = result.lastIndexOf(separator);
          if (index > -1) {
            result = result.slice(0, index);
          }
        }
        return result + omission;
      }

      function unescape(string) {
        string = toString(string);
        return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
      }

      var upperCase = createCompounder(function (result, word, index) {
        return result + (index ? ' ' : '') + word.toUpperCase();
      });

      var upperFirst = createCaseFirst('toUpperCase');

      function words(string, pattern, guard) {
        string = toString(string);
        pattern = guard ? undefined$1 : pattern;
        if (pattern === undefined$1) {
          return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
        }
        return string.match(pattern) || [];
      }

      var attempt = baseRest(function (func, args) {
        try {
          return apply(func, undefined$1, args);
        } catch (e) {
          return isError(e) ? e : new Error(e);
        }
      });

      var bindAll = flatRest(function (object, methodNames) {
        arrayEach(methodNames, function (key) {
          key = toKey(key);
          baseAssignValue(object, key, bind(object[key], object));
        });
        return object;
      });

      function cond(pairs) {
        var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();
        pairs = !length ? [] : arrayMap(pairs, function (pair) {
          if (typeof pair[1] != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          return [toIteratee(pair[0]), pair[1]];
        });
        return baseRest(function (args) {
          var index = -1;
          while (++index < length) {
            var pair = pairs[index];
            if (apply(pair[0], this, args)) {
              return apply(pair[1], this, args);
            }
          }
        });
      }

      function conforms(source) {
        return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
      }

      function constant(value) {
        return function () {
          return value;
        };
      }

      function defaultTo(value, defaultValue) {
        return value == null || value !== value ? defaultValue : value;
      }

      var flow = createFlow();

      var flowRight = createFlow(true);

      function identity(value) {
        return value;
      }

      function iteratee(func) {
        return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
      }

      function matches(source) {
        return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
      }

      function matchesProperty(path, srcValue) {
        return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
      }

      var method = baseRest(function (path, args) {
        return function (object) {
          return baseInvoke(object, path, args);
        };
      });

      var methodOf = baseRest(function (object, args) {
        return function (path) {
          return baseInvoke(object, path, args);
        };
      });

      function mixin(object, source, options) {
        var props = keys(source),
          methodNames = baseFunctions(source, props);
        if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
          options = source;
          source = object;
          object = this;
          methodNames = baseFunctions(source, keys(source));
        }
        var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);
        arrayEach(methodNames, function (methodName) {
          var func = source[methodName];
          object[methodName] = func;
          if (isFunc) {
            object.prototype[methodName] = function () {
              var chainAll = this.__chain__;
              if (chain || chainAll) {
                var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);
                actions.push({
                  'func': func,
                  'args': arguments,
                  'thisArg': object
                });
                result.__chain__ = chainAll;
                return result;
              }
              return func.apply(object, arrayPush([this.value()], arguments));
            };
          }
        });
        return object;
      }

      function noConflict() {
        if (root._ === this) {
          root._ = oldDash;
        }
        return this;
      }

      function noop() {
      }

      function nthArg(n) {
        n = toInteger(n);
        return baseRest(function (args) {
          return baseNth(args, n);
        });
      }

      var over = createOver(arrayMap);

      var overEvery = createOver(arrayEvery);

      var overSome = createOver(arraySome);

      function property(path) {
        return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
      }

      function propertyOf(object) {
        return function (path) {
          return object == null ? undefined$1 : baseGet(object, path);
        };
      }

      var range = createRange();

      var rangeRight = createRange(true);

      function stubArray() {
        return [];
      }

      function stubFalse() {
        return false;
      }

      function stubObject() {
        return {};
      }

      function stubString() {
        return '';
      }

      function stubTrue() {
        return true;
      }

      function times(n, iteratee) {
        n = toInteger(n);
        if (n < 1 || n > MAX_SAFE_INTEGER) {
          return [];
        }
        var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);
        iteratee = getIteratee(iteratee);
        n -= MAX_ARRAY_LENGTH;
        var result = baseTimes(length, iteratee);
        while (++index < n) {
          iteratee(index);
        }
        return result;
      }

      function toPath(value) {
        if (isArray(value)) {
          return arrayMap(value, toKey);
        }
        return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
      }

      function uniqueId(prefix) {
        var id = ++idCounter;
        return toString(prefix) + id;
      }

      var add = createMathOperation(function (augend, addend) {
        return augend + addend;
      }, 0);

      var ceil = createRound('ceil');

      var divide = createMathOperation(function (dividend, divisor) {
        return dividend / divisor;
      }, 1);

      var floor = createRound('floor');

      function max(array) {
        return array && array.length ? baseExtremum(array, identity, baseGt) : undefined$1;
      }

      function maxBy(array, iteratee) {
        return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseGt) : undefined$1;
      }

      function mean(array) {
        return baseMean(array, identity);
      }

      function meanBy(array, iteratee) {
        return baseMean(array, getIteratee(iteratee, 2));
      }

      function min(array) {
        return array && array.length ? baseExtremum(array, identity, baseLt) : undefined$1;
      }

      function minBy(array, iteratee) {
        return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseLt) : undefined$1;
      }

      var multiply = createMathOperation(function (multiplier, multiplicand) {
        return multiplier * multiplicand;
      }, 1);

      var round = createRound('round');

      var subtract = createMathOperation(function (minuend, subtrahend) {
        return minuend - subtrahend;
      }, 0);

      function sum(array) {
        return array && array.length ? baseSum(array, identity) : 0;
      }

      function sumBy(array, iteratee) {
        return array && array.length ? baseSum(array, getIteratee(iteratee, 2)) : 0;
      }

      lodash.after = after;
      lodash.ary = ary;
      lodash.assign = assign;
      lodash.assignIn = assignIn;
      lodash.assignInWith = assignInWith;
      lodash.assignWith = assignWith;
      lodash.at = at;
      lodash.before = before;
      lodash.bind = bind;
      lodash.bindAll = bindAll;
      lodash.bindKey = bindKey;
      lodash.castArray = castArray;
      lodash.chain = chain;
      lodash.chunk = chunk;
      lodash.compact = compact;
      lodash.concat = concat;
      lodash.cond = cond;
      lodash.conforms = conforms;
      lodash.constant = constant;
      lodash.countBy = countBy;
      lodash.create = create;
      lodash.curry = curry;
      lodash.curryRight = curryRight;
      lodash.debounce = debounce;
      lodash.defaults = defaults;
      lodash.defaultsDeep = defaultsDeep;
      lodash.defer = defer;
      lodash.delay = delay;
      lodash.difference = difference;
      lodash.differenceBy = differenceBy;
      lodash.differenceWith = differenceWith;
      lodash.drop = drop;
      lodash.dropRight = dropRight;
      lodash.dropRightWhile = dropRightWhile;
      lodash.dropWhile = dropWhile;
      lodash.fill = fill;
      lodash.filter = filter;
      lodash.flatMap = flatMap;
      lodash.flatMapDeep = flatMapDeep;
      lodash.flatMapDepth = flatMapDepth;
      lodash.flatten = flatten;
      lodash.flattenDeep = flattenDeep;
      lodash.flattenDepth = flattenDepth;
      lodash.flip = flip;
      lodash.flow = flow;
      lodash.flowRight = flowRight;
      lodash.fromPairs = fromPairs;
      lodash.functions = functions;
      lodash.functionsIn = functionsIn;
      lodash.groupBy = groupBy;
      lodash.initial = initial;
      lodash.intersection = intersection;
      lodash.intersectionBy = intersectionBy;
      lodash.intersectionWith = intersectionWith;
      lodash.invert = invert;
      lodash.invertBy = invertBy;
      lodash.invokeMap = invokeMap;
      lodash.iteratee = iteratee;
      lodash.keyBy = keyBy;
      lodash.keys = keys;
      lodash.keysIn = keysIn;
      lodash.map = map;
      lodash.mapKeys = mapKeys;
      lodash.mapValues = mapValues;
      lodash.matches = matches;
      lodash.matchesProperty = matchesProperty;
      lodash.memoize = memoize;
      lodash.merge = merge;
      lodash.mergeWith = mergeWith;
      lodash.method = method;
      lodash.methodOf = methodOf;
      lodash.mixin = mixin;
      lodash.negate = negate;
      lodash.nthArg = nthArg;
      lodash.omit = omit;
      lodash.omitBy = omitBy;
      lodash.once = once;
      lodash.orderBy = orderBy;
      lodash.over = over;
      lodash.overArgs = overArgs;
      lodash.overEvery = overEvery;
      lodash.overSome = overSome;
      lodash.partial = partial;
      lodash.partialRight = partialRight;
      lodash.partition = partition;
      lodash.pick = pick;
      lodash.pickBy = pickBy;
      lodash.property = property;
      lodash.propertyOf = propertyOf;
      lodash.pull = pull;
      lodash.pullAll = pullAll;
      lodash.pullAllBy = pullAllBy;
      lodash.pullAllWith = pullAllWith;
      lodash.pullAt = pullAt;
      lodash.range = range;
      lodash.rangeRight = rangeRight;
      lodash.rearg = rearg;
      lodash.reject = reject;
      lodash.remove = remove;
      lodash.rest = rest;
      lodash.reverse = reverse;
      lodash.sampleSize = sampleSize;
      lodash.set = set;
      lodash.setWith = setWith;
      lodash.shuffle = shuffle;
      lodash.slice = slice;
      lodash.sortBy = sortBy;
      lodash.sortedUniq = sortedUniq;
      lodash.sortedUniqBy = sortedUniqBy;
      lodash.split = split;
      lodash.spread = spread;
      lodash.tail = tail;
      lodash.take = take;
      lodash.takeRight = takeRight;
      lodash.takeRightWhile = takeRightWhile;
      lodash.takeWhile = takeWhile;
      lodash.tap = tap;
      lodash.throttle = throttle;
      lodash.thru = thru;
      lodash.toArray = toArray;
      lodash.toPairs = toPairs;
      lodash.toPairsIn = toPairsIn;
      lodash.toPath = toPath;
      lodash.toPlainObject = toPlainObject;
      lodash.transform = transform;
      lodash.unary = unary;
      lodash.union = union;
      lodash.unionBy = unionBy;
      lodash.unionWith = unionWith;
      lodash.uniq = uniq;
      lodash.uniqBy = uniqBy;
      lodash.uniqWith = uniqWith;
      lodash.unset = unset;
      lodash.unzip = unzip;
      lodash.unzipWith = unzipWith;
      lodash.update = update;
      lodash.updateWith = updateWith;
      lodash.values = values;
      lodash.valuesIn = valuesIn;
      lodash.without = without;
      lodash.words = words;
      lodash.wrap = wrap;
      lodash.xor = xor;
      lodash.xorBy = xorBy;
      lodash.xorWith = xorWith;
      lodash.zip = zip;
      lodash.zipObject = zipObject;
      lodash.zipObjectDeep = zipObjectDeep;
      lodash.zipWith = zipWith;

      lodash.entries = toPairs;
      lodash.entriesIn = toPairsIn;
      lodash.extend = assignIn;
      lodash.extendWith = assignInWith;

      mixin(lodash, lodash);

      lodash.add = add;
      lodash.attempt = attempt;
      lodash.camelCase = camelCase;
      lodash.capitalize = capitalize;
      lodash.ceil = ceil;
      lodash.clamp = clamp;
      lodash.clone = clone;
      lodash.cloneDeep = cloneDeep;
      lodash.cloneDeepWith = cloneDeepWith;
      lodash.cloneWith = cloneWith;
      lodash.conformsTo = conformsTo;
      lodash.deburr = deburr;
      lodash.defaultTo = defaultTo;
      lodash.divide = divide;
      lodash.endsWith = endsWith;
      lodash.eq = eq;
      lodash.escape = escape;
      lodash.escapeRegExp = escapeRegExp;
      lodash.every = every;
      lodash.find = find;
      lodash.findIndex = findIndex;
      lodash.findKey = findKey;
      lodash.findLast = findLast;
      lodash.findLastIndex = findLastIndex;
      lodash.findLastKey = findLastKey;
      lodash.floor = floor;
      lodash.forEach = forEach;
      lodash.forEachRight = forEachRight;
      lodash.forIn = forIn;
      lodash.forInRight = forInRight;
      lodash.forOwn = forOwn;
      lodash.forOwnRight = forOwnRight;
      lodash.get = get;
      lodash.gt = gt;
      lodash.gte = gte;
      lodash.has = has;
      lodash.hasIn = hasIn;
      lodash.head = head;
      lodash.identity = identity;
      lodash.includes = includes;
      lodash.indexOf = indexOf;
      lodash.inRange = inRange;
      lodash.invoke = invoke;
      lodash.isArguments = isArguments;
      lodash.isArray = isArray;
      lodash.isArrayBuffer = isArrayBuffer;
      lodash.isArrayLike = isArrayLike;
      lodash.isArrayLikeObject = isArrayLikeObject;
      lodash.isBoolean = isBoolean;
      lodash.isBuffer = isBuffer;
      lodash.isDate = isDate;
      lodash.isElement = isElement;
      lodash.isEmpty = isEmpty;
      lodash.isEqual = isEqual;
      lodash.isEqualWith = isEqualWith;
      lodash.isError = isError;
      lodash.isFinite = isFinite;
      lodash.isFunction = isFunction;
      lodash.isInteger = isInteger;
      lodash.isLength = isLength;
      lodash.isMap = isMap;
      lodash.isMatch = isMatch;
      lodash.isMatchWith = isMatchWith;
      lodash.isNaN = isNaN;
      lodash.isNative = isNative;
      lodash.isNil = isNil;
      lodash.isNull = isNull;
      lodash.isNumber = isNumber;
      lodash.isObject = isObject;
      lodash.isObjectLike = isObjectLike;
      lodash.isPlainObject = isPlainObject;
      lodash.isRegExp = isRegExp;
      lodash.isSafeInteger = isSafeInteger;
      lodash.isSet = isSet;
      lodash.isString = isString;
      lodash.isSymbol = isSymbol;
      lodash.isTypedArray = isTypedArray;
      lodash.isUndefined = isUndefined;
      lodash.isWeakMap = isWeakMap;
      lodash.isWeakSet = isWeakSet;
      lodash.join = join;
      lodash.kebabCase = kebabCase;
      lodash.last = last;
      lodash.lastIndexOf = lastIndexOf;
      lodash.lowerCase = lowerCase;
      lodash.lowerFirst = lowerFirst;
      lodash.lt = lt;
      lodash.lte = lte;
      lodash.max = max;
      lodash.maxBy = maxBy;
      lodash.mean = mean;
      lodash.meanBy = meanBy;
      lodash.min = min;
      lodash.minBy = minBy;
      lodash.stubArray = stubArray;
      lodash.stubFalse = stubFalse;
      lodash.stubObject = stubObject;
      lodash.stubString = stubString;
      lodash.stubTrue = stubTrue;
      lodash.multiply = multiply;
      lodash.nth = nth;
      lodash.noConflict = noConflict;
      lodash.noop = noop;
      lodash.now = now;
      lodash.pad = pad;
      lodash.padEnd = padEnd;
      lodash.padStart = padStart;
      lodash.parseInt = parseInt;
      lodash.random = random;
      lodash.reduce = reduce;
      lodash.reduceRight = reduceRight;
      lodash.repeat = repeat;
      lodash.replace = replace;
      lodash.result = result;
      lodash.round = round;
      lodash.runInContext = runInContext;
      lodash.sample = sample;
      lodash.size = size;
      lodash.snakeCase = snakeCase;
      lodash.some = some;
      lodash.sortedIndex = sortedIndex;
      lodash.sortedIndexBy = sortedIndexBy;
      lodash.sortedIndexOf = sortedIndexOf;
      lodash.sortedLastIndex = sortedLastIndex;
      lodash.sortedLastIndexBy = sortedLastIndexBy;
      lodash.sortedLastIndexOf = sortedLastIndexOf;
      lodash.startCase = startCase;
      lodash.startsWith = startsWith;
      lodash.subtract = subtract;
      lodash.sum = sum;
      lodash.sumBy = sumBy;
      lodash.template = template;
      lodash.times = times;
      lodash.toFinite = toFinite;
      lodash.toInteger = toInteger;
      lodash.toLength = toLength;
      lodash.toLower = toLower;
      lodash.toNumber = toNumber;
      lodash.toSafeInteger = toSafeInteger;
      lodash.toString = toString;
      lodash.toUpper = toUpper;
      lodash.trim = trim;
      lodash.trimEnd = trimEnd;
      lodash.trimStart = trimStart;
      lodash.truncate = truncate;
      lodash.unescape = unescape;
      lodash.uniqueId = uniqueId;
      lodash.upperCase = upperCase;
      lodash.upperFirst = upperFirst;

      lodash.each = forEach;
      lodash.eachRight = forEachRight;
      lodash.first = head;
      mixin(lodash, function () {
        var source = {};
        baseForOwn(lodash, function (func, methodName) {
          if (!hasOwnProperty.call(lodash.prototype, methodName)) {
            source[methodName] = func;
          }
        });
        return source;
      }(), {
        'chain': false
      });

      lodash.VERSION = VERSION;

      arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function (methodName) {
        lodash[methodName].placeholder = lodash;
      });

      arrayEach(['drop', 'take'], function (methodName, index) {
        LazyWrapper.prototype[methodName] = function (n) {
          n = n === undefined$1 ? 1 : nativeMax(toInteger(n), 0);
          var result = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
          if (result.__filtered__) {
            result.__takeCount__ = nativeMin(n, result.__takeCount__);
          } else {
            result.__views__.push({
              'size': nativeMin(n, MAX_ARRAY_LENGTH),
              'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
            });
          }
          return result;
        };
        LazyWrapper.prototype[methodName + 'Right'] = function (n) {
          return this.reverse()[methodName](n).reverse();
        };
      });

      arrayEach(['filter', 'map', 'takeWhile'], function (methodName, index) {
        var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
        LazyWrapper.prototype[methodName] = function (iteratee) {
          var result = this.clone();
          result.__iteratees__.push({
            'iteratee': getIteratee(iteratee, 3),
            'type': type
          });
          result.__filtered__ = result.__filtered__ || isFilter;
          return result;
        };
      });

      arrayEach(['head', 'last'], function (methodName, index) {
        var takeName = 'take' + (index ? 'Right' : '');
        LazyWrapper.prototype[methodName] = function () {
          return this[takeName](1).value()[0];
        };
      });

      arrayEach(['initial', 'tail'], function (methodName, index) {
        var dropName = 'drop' + (index ? '' : 'Right');
        LazyWrapper.prototype[methodName] = function () {
          return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
        };
      });
      LazyWrapper.prototype.compact = function () {
        return this.filter(identity);
      };
      LazyWrapper.prototype.find = function (predicate) {
        return this.filter(predicate).head();
      };
      LazyWrapper.prototype.findLast = function (predicate) {
        return this.reverse().find(predicate);
      };
      LazyWrapper.prototype.invokeMap = baseRest(function (path, args) {
        if (typeof path == 'function') {
          return new LazyWrapper(this);
        }
        return this.map(function (value) {
          return baseInvoke(value, path, args);
        });
      });
      LazyWrapper.prototype.reject = function (predicate) {
        return this.filter(negate(getIteratee(predicate)));
      };
      LazyWrapper.prototype.slice = function (start, end) {
        start = toInteger(start);
        var result = this;
        if (result.__filtered__ && (start > 0 || end < 0)) {
          return new LazyWrapper(result);
        }
        if (start < 0) {
          result = result.takeRight(-start);
        } else if (start) {
          result = result.drop(start);
        }
        if (end !== undefined$1) {
          end = toInteger(end);
          result = end < 0 ? result.dropRight(-end) : result.take(end - start);
        }
        return result;
      };
      LazyWrapper.prototype.takeRightWhile = function (predicate) {
        return this.reverse().takeWhile(predicate).reverse();
      };
      LazyWrapper.prototype.toArray = function () {
        return this.take(MAX_ARRAY_LENGTH);
      };

      baseForOwn(LazyWrapper.prototype, function (func, methodName) {
        var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? 'take' + (methodName == 'last' ? 'Right' : '') : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);
        if (!lodashFunc) {
          return;
        }
        lodash.prototype[methodName] = function () {
          var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);
          var interceptor = function interceptor(value) {
            var result = lodashFunc.apply(lodash, arrayPush([value], args));
            return isTaker && chainAll ? result[0] : result;
          };
          if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
            isLazy = useLazy = false;
          }
          var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;
          if (!retUnwrapped && useLazy) {
            value = onlyLazy ? value : new LazyWrapper(this);
            var result = func.apply(value, args);
            result.__actions__.push({
              'func': thru,
              'args': [interceptor],
              'thisArg': undefined$1
            });
            return new LodashWrapper(result, chainAll);
          }
          if (isUnwrapped && onlyLazy) {
            return func.apply(this, args);
          }
          result = this.thru(interceptor);
          return isUnwrapped ? isTaker ? result.value()[0] : result.value() : result;
        };
      });

      arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function (methodName) {
        var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);
        lodash.prototype[methodName] = function () {
          var args = arguments;
          if (retUnwrapped && !this.__chain__) {
            var value = this.value();
            return func.apply(isArray(value) ? value : [], args);
          }
          return this[chainName](function (value) {
            return func.apply(isArray(value) ? value : [], args);
          });
        };
      });

      baseForOwn(LazyWrapper.prototype, function (func, methodName) {
        var lodashFunc = lodash[methodName];
        if (lodashFunc) {
          var key = lodashFunc.name + '';
          if (!hasOwnProperty.call(realNames, key)) {
            realNames[key] = [];
          }
          realNames[key].push({
            'name': methodName,
            'func': lodashFunc
          });
        }
      });
      realNames[createHybrid(undefined$1, WRAP_BIND_KEY_FLAG).name] = [{
        'name': 'wrapper',
        'func': undefined$1
      }];

      LazyWrapper.prototype.clone = lazyClone;
      LazyWrapper.prototype.reverse = lazyReverse;
      LazyWrapper.prototype.value = lazyValue;

      lodash.prototype.at = wrapperAt;
      lodash.prototype.chain = wrapperChain;
      lodash.prototype.commit = wrapperCommit;
      lodash.prototype.next = wrapperNext;
      lodash.prototype.plant = wrapperPlant;
      lodash.prototype.reverse = wrapperReverse;
      lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

      lodash.prototype.first = lodash.prototype.head;
      if (symIterator) {
        lodash.prototype[symIterator] = wrapperToIterator;
      }
      return lodash;
    };

    var _ = runInContext();

    if (freeModule) {
      (freeModule.exports = _)._ = _;
      freeExports._ = _;
    } else {
      root._ = _;
    }
  }).call(commonjsGlobal);
});

var CreatePropertyForm = function CreatePropertyForm(_ref) {
  var _Digit$Hooks$pt$useTe;
  var config = _ref.config,
    onSelect = _ref.onSelect,
    value = _ref.value,
    userType = _ref.userType,
    redirectUrl = _ref.redirectUrl;
  var _useState = React.useState(null),
    showToast = _useState[0],
    setShowToast = _useState[1];
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var tenants = Digit.Hooks.pt.useTenants();
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var location = reactRouterDom.useLocation();
  var _useState2 = React.useState(false),
    canSubmit = _useState2[0],
    setCanSubmit = _useState2[1];
  var defaultValues = _extends({}, value);
  var history = reactRouterDom.useHistory();
  var match = reactRouterDom.useRouteMatch();
  sessionStorage.setItem("VisitedCommonPTSearch", true);
  var isMobile = window.Digit.Utils.browser.isMobile();
  var allCities = (_Digit$Hooks$pt$useTe = Digit.Hooks.pt.useTenants()) === null || _Digit$Hooks$pt$useTe === void 0 ? void 0 : _Digit$Hooks$pt$useTe.sort(function (a, b) {
    var _a$i18nKey, _a$i18nKey$localeComp;
    return a === null || a === void 0 ? void 0 : (_a$i18nKey = a.i18nKey) === null || _a$i18nKey === void 0 ? void 0 : (_a$i18nKey$localeComp = _a$i18nKey.localeCompare) === null || _a$i18nKey$localeComp === void 0 ? void 0 : _a$i18nKey$localeComp.call(_a$i18nKey, b === null || b === void 0 ? void 0 : b.i18nKey);
  });
  var _useState3 = React.useState(""),
    formValue = _useState3[0],
    setFormValue = _useState3[1];
  var _useState4 = React.useState("");
  var enableSkip = userType == "employee" ? false : (config === null || config === void 0 ? void 0 : config.isSkipEnabled) || sessionStorage.getItem("skipenabled");
  var _Digit$Hooks$useSessi = Digit.Hooks.useSessionStorage("EMPLOYEE_MUTATION_HAPPENED", false),
    setMutationHappened = _Digit$Hooks$useSessi[1];
  var _Digit$Hooks$useSessi2 = Digit.Hooks.useSessionStorage("EMPLOYEE_MUTATION_SUCCESS_DATA", {}),
    clearSuccessData = _Digit$Hooks$useSessi2[2];
  var _Digit$Hooks$pt$useMD = Digit.Hooks.pt.useMDMS(Digit.ULBService.getStateId(), "PropertyTax", "CommonFieldsConfig"),
    isLoading = _Digit$Hooks$pt$useMD.isLoading;
  React.useEffect(function () {
    setMutationHappened(false);
    clearSuccessData();
  }, []);
  if (isLoading) {
    return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null);
  }
  var onSubmit = function onSubmit() {
    try {
      var _formValue$owners, _formValue$owners$, _formValue$owners$$ow, _formValue$owners2;
      if (formValue !== null && formValue !== void 0 && (_formValue$owners = formValue.owners) !== null && _formValue$owners !== void 0 && (_formValue$owners$ = _formValue$owners[0]) !== null && _formValue$owners$ !== void 0 && (_formValue$owners$$ow = _formValue$owners$.ownershipCategory) !== null && _formValue$owners$$ow !== void 0 && _formValue$owners$$ow.includes("MULTIPLEOWNERS") && (formValue === null || formValue === void 0 ? void 0 : (_formValue$owners2 = formValue.owners) === null || _formValue$owners2 === void 0 ? void 0 : _formValue$owners2.length) == 1) {
        setShowToast({
          key: true,
          label: "PT_COMMON_ONE_MORE_OWNER_INFROMATION_REQUIRED"
        });
      } else {
        if (onSelect) {
          onSelect('cptNewProperty', {
            property: formValue
          });
        } else {
          if (userType === 'employee') {
            history.push(match.path + "/save-property?redirectToUrl=" + redirectUrl, {
              data: formValue,
              prevState: _extends({}, location === null || location === void 0 ? void 0 : location.state)
            });
          } else {
            var _formValue$owners3, _formValue$owners3$;
            history.replace("/digit-ui/citizen/commonPt/property/citizen-otp", {
              mobileNumber: formValue === null || formValue === void 0 ? void 0 : (_formValue$owners3 = formValue.owners) === null || _formValue$owners3 === void 0 ? void 0 : (_formValue$owners3$ = _formValue$owners3[0]) === null || _formValue$owners3$ === void 0 ? void 0 : _formValue$owners3$.mobileNumber,
              redirectBackTo: '/digit-ui/citizen/commonPt/property/new-application/save-property',
              redirectData: formValue
            });
          }
        }
      }
      return Promise.resolve();
    } catch (e) {
      return Promise.reject(e);
    }
  };
  var onSkip = function onSkip() {
    onSelect("isSkip", true);
  };
  var onFormValueChange = function onFormValueChange(setValue, data, formState) {

    if (!lodash.isEqual(data, formValue)) {
      setFormValue(data);
    }
    if (data.assemblyDet && data.locationDet && data.owners && !Object.keys(formState === null || formState === void 0 ? void 0 : formState.errors).length) {
      setCanSubmit(true);
    } else {
      setCanSubmit(false);
    }

  };

  var getHeaderLabel = function getHeaderLabel() {
    var _url$split, _url$split$, _url$split$$split;
    var url = window.location.href;
    var moduleName = url === null || url === void 0 ? void 0 : (_url$split = url.split("=")) === null || _url$split === void 0 ? void 0 : (_url$split$ = _url$split[1]) === null || _url$split$ === void 0 ? void 0 : (_url$split$$split = _url$split$.split("/")) === null || _url$split$$split === void 0 ? void 0 : _url$split$$split[3];
    if (moduleName) return t("ES_COMMON_CREATE_PROPERTY_HEADER_" + (moduleName === null || moduleName === void 0 ? void 0 : moduleName.toUpperCase()));else return t('ES_COMMON_CREATE_PROPERTY_HEADER');
  };
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("div", {
    style: {
      marginLeft: "12px"
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Header, {
    styles: window.location.href.includes("citizen") ? {
      paddingLeft: "0px",
      marginLeft: "0px"
    } : {}
  }, t(getHeaderLabel()))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.FormComposer, {
    onSkip: onSkip,
    showSkip: enableSkip,
    skipStyle: isMobile ? {} : {
      textAlign: "right",
      marginRight: "55px"
    },
    sectionHeadStyle: {
      marginBottom: "16px"
    },
    onSubmit: onSubmit,
    noBoxShadow: true,
    inline: true,
    config: newConfig,
    label: t('SUBMIT'),
    isDisabled: !canSubmit,
    defaultValues: defaultValues,
    onFormValueChange: onFormValueChange
  }), showToast && /*#__PURE__*/React__default.createElement(digitUiReactComponents.Toast, {
    error: showToast.key,
    label: t(showToast.label),
    onClose: function onClose() {
      setShowToast(null);
    }
  }));
};

var setAddressDetailsLW = function setAddressDetailsLW(data) {
  var _locationDet$cityCode, _locationDet$locality;
  var locationDet = data.locationDet;
  var propAddress = {
    city: locationDet === null || locationDet === void 0 ? void 0 : (_locationDet$cityCode = locationDet.cityCode) === null || _locationDet$cityCode === void 0 ? void 0 : _locationDet$cityCode.name,
    doorNo: locationDet === null || locationDet === void 0 ? void 0 : locationDet.houseDoorNo,
    buildingName: locationDet === null || locationDet === void 0 ? void 0 : locationDet.buildingColonyName,
    landmark: locationDet === null || locationDet === void 0 ? void 0 : locationDet.landmarkName,
    locality: {
      code: (locationDet === null || locationDet === void 0 ? void 0 : (_locationDet$locality = locationDet.locality) === null || _locationDet$locality === void 0 ? void 0 : _locationDet$locality.code) || "NA"
    }
  };
  data.address = propAddress;
  return data;
};
var setOwnerDetailsLW = function setOwnerDetailsLW(data) {
  var _data$owners, _data$owners$ownershi, _data$owners2, _data$owners2$ownersh, _data$owners3, _data$owners3$ownersh;
  var locationDet = data.locationDet,
    owners = data.owners;
  var institution = {},
    owner = [],
    document = [];
  data.ownershipCategory = data === null || data === void 0 ? void 0 : (_data$owners = data.owners) === null || _data$owners === void 0 ? void 0 : (_data$owners$ownershi = _data$owners.ownershipCategory) === null || _data$owners$ownershi === void 0 ? void 0 : _data$owners$ownershi.value;
  if ((data === null || data === void 0 ? void 0 : (_data$owners2 = data.owners) === null || _data$owners2 === void 0 ? void 0 : (_data$owners2$ownersh = _data$owners2.ownershipCategory) === null || _data$owners2$ownersh === void 0 ? void 0 : _data$owners2$ownersh.value) === "INSTITUTIONALPRIVATE" || (data === null || data === void 0 ? void 0 : (_data$owners3 = data.owners) === null || _data$owners3 === void 0 ? void 0 : (_data$owners3$ownersh = _data$owners3.ownershipCategory) === null || _data$owners3$ownersh === void 0 ? void 0 : _data$owners3$ownersh.value) === "INSTITUTIONALGOVERNMENT") {
    var _locationDet$city, _owners$inistitutetyp, _owners$ownerType;
    institution.designation = owners === null || owners === void 0 ? void 0 : owners.designation;
    institution.name = owners === null || owners === void 0 ? void 0 : owners.inistitutionName;
    institution.nameOfAuthorizedPerson = owners === null || owners === void 0 ? void 0 : owners.name;
    institution.tenantId = locationDet === null || locationDet === void 0 ? void 0 : (_locationDet$city = locationDet.city) === null || _locationDet$city === void 0 ? void 0 : _locationDet$city.code;
    institution.type = owners === null || owners === void 0 ? void 0 : (_owners$inistitutetyp = owners.inistitutetype) === null || _owners$inistitutetyp === void 0 ? void 0 : _owners$inistitutetyp.value;
    owner.push({
      altContactNumber: owners === null || owners === void 0 ? void 0 : owners.altContactNumber,
      permanentAddress: owners === null || owners === void 0 ? void 0 : owners.permanentAddress,
      designation: owners === null || owners === void 0 ? void 0 : owners.designation,
      emailId: owners === null || owners === void 0 ? void 0 : owners.emailId,
      sameAsPropertyAddress: owners === null || owners === void 0 ? void 0 : owners.isCorrespondenceAddress,
      mobileNumber: owners === null || owners === void 0 ? void 0 : owners.mobileNumber,
      name: owners === null || owners === void 0 ? void 0 : owners.name,
      ownerType: (owners === null || owners === void 0 ? void 0 : (_owners$ownerType = owners.ownerType) === null || _owners$ownerType === void 0 ? void 0 : _owners$ownerType.code) || "NONE",
      documents: document
    });
    data.institution = institution;
    data.owners = owner;
  } else {
    owners.map(function (own) {
      var _own$gender, _own$ownerType, _own$relationship;
      owner.push({
        emailId: own === null || own === void 0 ? void 0 : own.emailId,
        fatherOrHusbandName: own === null || own === void 0 ? void 0 : own.fatherOrHusbandName,
        gender: own === null || own === void 0 ? void 0 : (_own$gender = own.gender) === null || _own$gender === void 0 ? void 0 : _own$gender.value,
        sameAsPropertyAddress: own === null || own === void 0 ? void 0 : own.isCorrespondenceAddress,
        mobileNumber: own === null || own === void 0 ? void 0 : own.mobileNumber,
        name: own === null || own === void 0 ? void 0 : own.name,
        ownerType: (own === null || own === void 0 ? void 0 : (_own$ownerType = own.ownerType) === null || _own$ownerType === void 0 ? void 0 : _own$ownerType.code) || "NONE",
        permanentAddress: own === null || own === void 0 ? void 0 : own.permanentAddress,
        relationship: own === null || own === void 0 ? void 0 : (_own$relationship = own.relationship) === null || _own$relationship === void 0 ? void 0 : _own$relationship.code,
        documents: document
      });
    });
    data.owners = owner;
  }
  return data;
};
var getUsageTypeLW = function getUsageTypeLW(data) {
  var _data$isResdential;
  if ((data === null || data === void 0 ? void 0 : (_data$isResdential = data.isResdential) === null || _data$isResdential === void 0 ? void 0 : _data$isResdential.code) == "RESIDENTIAL") {
    var _data$isResdential2;
    return data === null || data === void 0 ? void 0 : (_data$isResdential2 = data.isResdential) === null || _data$isResdential2 === void 0 ? void 0 : _data$isResdential2.code;
  } else {
    var _data$usageCategory;
    return data === null || data === void 0 ? void 0 : (_data$usageCategory = data.usageCategory) === null || _data$usageCategory === void 0 ? void 0 : _data$usageCategory.code;
  }
};
var setPropertyDetailsLW = function setPropertyDetailsLW(data) {
  var _assemblyDet$Building;
  var propertyDetails = {};
  var assemblyDet = data.assemblyDet;
  propertyDetails = {
    propertyType: assemblyDet === null || assemblyDet === void 0 ? void 0 : (_assemblyDet$Building = assemblyDet.BuildingType) === null || _assemblyDet$Building === void 0 ? void 0 : _assemblyDet$Building.code,
    usageCategory: getUsageTypeLW(assemblyDet),
    landArea: parseInt(assemblyDet === null || assemblyDet === void 0 ? void 0 : assemblyDet.floorarea),
    superBuiltUpArea: parseInt(assemblyDet === null || assemblyDet === void 0 ? void 0 : assemblyDet.constructionArea)
  };
  data.propertyDetails = propertyDetails;
  return data;
};
var convertToPropertyLightWeight = function convertToPropertyLightWeight(data) {
  var _data, _data$owners4, _data$owners4$, _data2, _data2$assemblyDet, _data2$assemblyDet$us;
  if (data === void 0) {
    data = {};
  }
  var propertyType = data.PropertyType;
  var noOfFloors = 1;
  var ownershipCategory = (_data = data) === null || _data === void 0 ? void 0 : (_data$owners4 = _data.owners) === null || _data$owners4 === void 0 ? void 0 : (_data$owners4$ = _data$owners4[0]) === null || _data$owners4$ === void 0 ? void 0 : _data$owners4$.ownershipCategory;
  data = setOwnerDetailsLW(data);
  data = setAddressDetailsLW(data);
  data = setPropertyDetailsLW(data);
  var formdata = {
    Property: _extends({
      tenantId: data.tenantId,
      address: data.address,
      propertyType: propertyType
    }, data.propertyDetails, {
      ownershipCategory: ownershipCategory,
      usageCategory: (_data2 = data) === null || _data2 === void 0 ? void 0 : (_data2$assemblyDet = _data2.assemblyDet) === null || _data2$assemblyDet === void 0 ? void 0 : (_data2$assemblyDet$us = _data2$assemblyDet.usageCategoryMajor) === null || _data2$assemblyDet$us === void 0 ? void 0 : _data2$assemblyDet$us.code,
      owners: data.owners,
      noOfFloors: noOfFloors,
      additionalDetails: {
        isRainwaterHarvesting: false
      },
      creationReason: "CREATE",
      source: "MUNICIPAL_RECORDS",
      channel: "SYSTEM"
    })
  };
  return formdata;
};
var convertToUpdatePropertyLightWeight = function convertToUpdatePropertyLightWeight(data) {
  var _data3, _formdata$Property, _data4, _formdata$Property3;
  if (data === void 0) {
    data = {};
  }
  var propertyType = data.PropertyType;
  var noOfFloors = 1;
  data = setOwnerDetailsLW(data);
  data = setAddressDetailsLW(data);
  data = setPropertyDetailsLW(data);
  var formdata = {
    Property: _extends({
      id: data.id,
      accountId: data.accountId,
      acknowldgementNumber: data.acknowldgementNumber,
      propertyId: data.propertyId,
      status: data.status || "INWORKFLOW",
      tenantId: data.tenantId,
      address: data.address,
      propertyType: propertyType,
      ownershipCategory: (_data3 = data) === null || _data3 === void 0 ? void 0 : _data3.ownershipCategory,
      owners: data.owners,
      noOfFloors: noOfFloors,
      additionalDetails: {
        isRainwaterHarvesting: false
      }
    }, data.propertyDetails, {
      creationReason: getCreationReason(data),
      source: "MUNICIPAL_RECORDS",
      channel: "CITIZEN",
      workflow: getWorkflow(data)
    })
  };
  var propertyInitialObject = JSON.parse(sessionStorage.getItem("propertyInitialObject"));
  if (checkArrayLength(propertyInitialObject === null || propertyInitialObject === void 0 ? void 0 : propertyInitialObject.units) && checkIsAnArray((_formdata$Property = formdata.Property) === null || _formdata$Property === void 0 ? void 0 : _formdata$Property.units) && (_data4 = data) !== null && _data4 !== void 0 && _data4.isEditProperty) {
    var _formdata$Property2, _formdata$Property2$u;
    propertyInitialObject.units = propertyInitialObject.units.filter(function (unit) {
      return unit.active;
    });
    var oldUnits = propertyInitialObject.units.map(function (unit) {
      return _extends({}, unit, {
        active: false
      });
    });
    (_formdata$Property2 = formdata.Property) === null || _formdata$Property2 === void 0 ? void 0 : (_formdata$Property2$u = _formdata$Property2.units).push.apply(_formdata$Property2$u, oldUnits);
  }
  if (checkArrayLength(propertyInitialObject === null || propertyInitialObject === void 0 ? void 0 : propertyInitialObject.owners) && checkIsAnArray((_formdata$Property3 = formdata.Property) === null || _formdata$Property3 === void 0 ? void 0 : _formdata$Property3.owners)) {
    formdata.Property.owners = [].concat(propertyInitialObject.owners);
  }
  if (propertyInitialObject !== null && propertyInitialObject !== void 0 && propertyInitialObject.auditDetails) {
    formdata.Property["auditDetails"] = _extends({}, propertyInitialObject.auditDetails);
  }
  return formdata;
};
var stringReplaceAll = function stringReplaceAll(str, searcher, replaceWith) {
  if (str === void 0) {
    str = "";
  }
  if (searcher === void 0) {
    searcher = "";
  }
  if (replaceWith === void 0) {
    replaceWith = "";
  }
  if (searcher == "") return str;
  while (str.includes(searcher)) {
    str = str.replace(searcher, replaceWith);
  }
  return str;
};

var GetActionMessage = function GetActionMessage(props) {
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  if (props.isSuccess) {
    return !window.location.href.includes("edit-application") ? t("CS_PROPERTY_APPLICATION_SUCCESS") : t("CS_PROPERTY_UPDATE_APPLICATION_SUCCESS");
  } else if (props.isLoading) {
    return !window.location.href.includes("edit-application") ? t("CS_PROPERTY_APPLICATION_PENDING") : t("CS_PROPERTY_UPDATE_APPLICATION_PENDING");
  } else if (!props.isSuccess) {
    return !window.location.href.includes("edit-application") ? t("CS_PROPERTY_APPLICATION_FAILED") : t("CS_PROPERTY_UPDATE_APPLICATION_FAILED");
  }
};
var rowContainerStyle = {
  padding: "4px 0px",
  justifyContent: "space-between"
};
var BannerPicker = function BannerPicker(props) {
  var _props$data;
  return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Banner, {
    message: GetActionMessage(props),
    applicationNumber: (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.Properties[0].acknowldgementNumber,
    info: props.isSuccess ? props.t("PT_APPLICATION_NO") : "",
    successful: props.isSuccess
  });
};
var PTAcknowledgement = function PTAcknowledgement(_ref) {
  var _location$state, _mdmsConfig$PropertyT, _data, _data$locationDet, _data$locationDet2, _data$locationDet2$ci, _data2, _data2$locationDet, _data$locationDet3, _data$locationDet3$ci, _mutation$data4, _mutation$data4$Prope;
  var onSuccess = _ref.onSuccess,
    onSelect = _ref.onSelect,
    formData = _ref.formData,
    redirectUrl = _ref.redirectUrl,
    userType = _ref.userType;
  var _useTranslation2 = reactI18next.useTranslation(),
    t = _useTranslation2.t;
  var location = reactRouterDom.useLocation();
  var stateId = Digit.ULBService.getStateId();
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var history = reactRouterDom.useHistory();
  var data = location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.data;
  if (onSelect) {
    var _formData$cptNewPrope;
    data = formData === null || formData === void 0 ? void 0 : (_formData$cptNewPrope = formData.cptNewProperty) === null || _formData$cptNewPrope === void 0 ? void 0 : _formData$cptNewPrope.property;
  }
  var createNUpdate = false;
  var _Digit$Hooks$pt$useMD = Digit.Hooks.pt.useMDMS(stateId, "PropertyTax", "PTWorkflow"),
    mdmsConfig = _Digit$Hooks$pt$useMD.data;
  ((mdmsConfig === null || mdmsConfig === void 0 ? void 0 : (_mdmsConfig$PropertyT = mdmsConfig.PropertyTax) === null || _mdmsConfig$PropertyT === void 0 ? void 0 : _mdmsConfig$PropertyT.PTWorkfow) || []).forEach(function (data) {
    if (data.enable) {
      if (data.businessService.includes("WNS")) {
        createNUpdate = true;
      }
    }
  });
  var mutation = Digit.Hooks.pt.usePropertyAPI((_data = data) !== null && _data !== void 0 && (_data$locationDet = _data.locationDet) !== null && _data$locationDet !== void 0 && _data$locationDet.city ? (_data$locationDet2 = data.locationDet) === null || _data$locationDet2 === void 0 ? void 0 : (_data$locationDet2$ci = _data$locationDet2.city) === null || _data$locationDet2$ci === void 0 ? void 0 : _data$locationDet2$ci.code : tenantId, true);

  var mutationForUpdate = Digit.Hooks.pt.usePropertyAPI((_data2 = data) !== null && _data2 !== void 0 && (_data2$locationDet = _data2.locationDet) !== null && _data2$locationDet !== void 0 && _data2$locationDet.city ? (_data$locationDet3 = data.locationDet) === null || _data$locationDet3 === void 0 ? void 0 : (_data$locationDet3$ci = _data$locationDet3.city) === null || _data$locationDet3$ci === void 0 ? void 0 : _data$locationDet3$ci.code : tenantId, false);

  var _Digit$Hooks$useStore = Digit.Hooks.useStore.getInitData();
  React.useEffect(function () {
    try {
      var _data3, _data3$locationDet, _data3$locationDet$ci, _formdata$Property;
      var tenant = userType === "employee" ? tenantId : (_data3 = data) === null || _data3 === void 0 ? void 0 : (_data3$locationDet = _data3.locationDet) === null || _data3$locationDet === void 0 ? void 0 : (_data3$locationDet$ci = _data3$locationDet.cityCode) === null || _data3$locationDet$ci === void 0 ? void 0 : _data3$locationDet$ci.code;
      data.tenantId = tenant;
      var formdata = convertToPropertyLightWeight(data);
      formdata.Property.tenantId = (formdata === null || formdata === void 0 ? void 0 : (_formdata$Property = formdata.Property) === null || _formdata$Property === void 0 ? void 0 : _formdata$Property.tenantId) || tenant;
      mutation.mutate(formdata, {
        onSuccess: onSuccess
      });
      if (!createNUpdate) {
        if (!(mutation.isLoading && mutation.isIdle)) {
          if (mutation.isSuccess) {
            setTimeout(function () {
              if (redirectUrl) {
                var _mutation$data, _mutation$data$Proper, _location$state2;
                history.push(redirectUrl + "?propertyId=" + (mutation === null || mutation === void 0 ? void 0 : (_mutation$data = mutation.data) === null || _mutation$data === void 0 ? void 0 : (_mutation$data$Proper = _mutation$data.Properties[0]) === null || _mutation$data$Proper === void 0 ? void 0 : _mutation$data$Proper.propertyId) + "&tenantId=" + formdata.Property.tenantId, _extends({}, location === null || location === void 0 ? void 0 : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.prevState));
                setTimeout(function () {
                  return window.scrollTo(0, 1600);
                }, 400);
                return;
              }
            }, 3000);
          }
        }
      }
    } catch (err) {}
  }, []);
  React.useEffect(function () {
    var _data4, _data4$locationDet, _data4$locationDet$ci;
    var tenant = userType === "employee" ? tenantId : (_data4 = data) === null || _data4 === void 0 ? void 0 : (_data4$locationDet = _data4.locationDet) === null || _data4$locationDet === void 0 ? void 0 : (_data4$locationDet$ci = _data4$locationDet.city) === null || _data4$locationDet$ci === void 0 ? void 0 : _data4$locationDet$ci.code;
    if (mutation.isSuccess) {
      setTimeout(function () {
        if (redirectUrl) {
          var _mutation$data2, _mutation$data2$Prope, _location$state3;
          history.push(redirectUrl + "?propertyId=" + (mutation === null || mutation === void 0 ? void 0 : (_mutation$data2 = mutation.data) === null || _mutation$data2 === void 0 ? void 0 : (_mutation$data2$Prope = _mutation$data2.Properties[0]) === null || _mutation$data2$Prope === void 0 ? void 0 : _mutation$data2$Prope.propertyId) + "&tenantId=" + tenant, _extends({}, location === null || location === void 0 ? void 0 : (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.prevState));
          setTimeout(function () {
            return window.scrollTo(0, 1600);
          }, 400);
          return;
        }
      }, 3000);
    }
  }, [mutation]);
  React.useEffect(function () {
    if (mutation.isSuccess && createNUpdate) {
      try {
        var _data5, _data5$locationDet, _data5$locationDet$ci, _formdata$Property2;
        var tenant = userType === "employee" ? tenantId : (_data5 = data) === null || _data5 === void 0 ? void 0 : (_data5$locationDet = _data5.locationDet) === null || _data5$locationDet === void 0 ? void 0 : (_data5$locationDet$ci = _data5$locationDet.city) === null || _data5$locationDet$ci === void 0 ? void 0 : _data5$locationDet$ci.code;
        data.tenantId = tenant;
        var formdata = convertToUpdatePropertyLightWeight(data);
        formdata.Property.tenantId = (formdata === null || formdata === void 0 ? void 0 : (_formdata$Property2 = formdata.Property) === null || _formdata$Property2 === void 0 ? void 0 : _formdata$Property2.tenantId) || tenant;
        mutationForUpdate.mutate(formdata, {
          onSuccess: onSuccess
        });
        if (mutationForUpdate.isSuccess) {
          setTimeout(function () {
            if (redirectUrl) {
              var _mutationForUpdate$da, _mutationForUpdate$da2, _mutationForUpdate$da3, _mutationForUpdate$da4, _location$state4;
              history.push(redirectUrl + "?propertyId=" + (mutationForUpdate === null || mutationForUpdate === void 0 ? void 0 : (_mutationForUpdate$da = mutationForUpdate.data) === null || _mutationForUpdate$da === void 0 ? void 0 : (_mutationForUpdate$da2 = _mutationForUpdate$da.Properties[0]) === null || _mutationForUpdate$da2 === void 0 ? void 0 : _mutationForUpdate$da2.propertyId) + "&tenantId=" + (mutationForUpdate === null || mutationForUpdate === void 0 ? void 0 : (_mutationForUpdate$da3 = mutationForUpdate.data) === null || _mutationForUpdate$da3 === void 0 ? void 0 : (_mutationForUpdate$da4 = _mutationForUpdate$da3.Properties[0]) === null || _mutationForUpdate$da4 === void 0 ? void 0 : _mutationForUpdate$da4.tenantId), _extends({}, location === null || location === void 0 ? void 0 : (_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.prevState));
              setTimeout(function () {
                return window.scrollTo(0, 1600);
              }, 400);
              return;
            }
          }, 3000);
        }
      } catch (er) {}
    }
  }, [mutation.isSuccess]);
  var onNext = function onNext() {
    if (onSelect) {
      if (mutation.isSuccess) {
        var _mutation$data3;
        onSelect("cpt", {
          details: mutation === null || mutation === void 0 ? void 0 : (_mutation$data3 = mutation.data) === null || _mutation$data3 === void 0 ? void 0 : _mutation$data3.Properties[0]
        });
      }
    }
  };
  return mutation.isLoading || mutation.isIdle ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null) : /*#__PURE__*/React__default.createElement(digitUiReactComponents.Card, null, /*#__PURE__*/React__default.createElement(BannerPicker, {
    t: t,
    data: mutation.data,
    isSuccess: mutation.isSuccess,
    isLoading: mutation.isIdle || mutation.isLoading
  }), mutation.isSuccess && /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardText, null, t("CS_FILE_PROPERTY_RESPONSE")), !mutation.isSuccess && /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardText, null, t("CS_FILE_PROPERTY_FAILED_RESPONSE")), /*#__PURE__*/React__default.createElement(digitUiReactComponents.StatusTable, null, mutation.isSuccess && /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
    rowContainerStyle: rowContainerStyle,
    last: true,
    label: t("PT_COMMON_TABLE_COL_PT_ID"),
    text: mutation === null || mutation === void 0 ? void 0 : (_mutation$data4 = mutation.data) === null || _mutation$data4 === void 0 ? void 0 : (_mutation$data4$Prope = _mutation$data4.Properties[0]) === null || _mutation$data4$Prope === void 0 ? void 0 : _mutation$data4$Prope.propertyId,
    textStyle: {
      whiteSpace: "pre",
      width: "200%"
    }
  })), mutation.isSuccess && window.location.href.includes("/citizen/") && (onSelect ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.SubmitBar, {
    label: t("CS_COMMON_PROCEED"),
    onSubmit: onNext
  }) : /*#__PURE__*/React__default.createElement(digitUiReactComponents.SubmitBar, {
    label: t("CS_COMMON_PROCEED"),
    onSubmit: function onSubmit() {
      if (redirectUrl) {
        var _mutationForUpdate$da5, _mutationForUpdate$da6, _mutationForUpdate$da7, _mutationForUpdate$da8, _location$state5;
        history.push(redirectUrl + "?propertyId=" + (mutationForUpdate === null || mutationForUpdate === void 0 ? void 0 : (_mutationForUpdate$da5 = mutationForUpdate.data) === null || _mutationForUpdate$da5 === void 0 ? void 0 : (_mutationForUpdate$da6 = _mutationForUpdate$da5.Properties[0]) === null || _mutationForUpdate$da6 === void 0 ? void 0 : _mutationForUpdate$da6.propertyId) + "&tenantId=" + (mutationForUpdate === null || mutationForUpdate === void 0 ? void 0 : (_mutationForUpdate$da7 = mutationForUpdate.data) === null || _mutationForUpdate$da7 === void 0 ? void 0 : (_mutationForUpdate$da8 = _mutationForUpdate$da7.Properties[0]) === null || _mutationForUpdate$da8 === void 0 ? void 0 : _mutationForUpdate$da8.tenantId), _extends({}, location === null || location === void 0 ? void 0 : (_location$state5 = location.state) === null || _location$state5 === void 0 ? void 0 : _location$state5.prevState));
      }
    }
  })));
};

var CreateProperty = function CreateProperty(_ref) {
  var queryClient = reactQuery.useQueryClient();
  var match = reactRouterDom.useRouteMatch();
  var _useTranslation = reactI18next.useTranslation();
  var _useLocation = reactRouterDom.useLocation();
  var history = reactRouterDom.useHistory();
  var stateId = Digit.ULBService.getStateId();
  var _Digit$Hooks$useSessi = Digit.Hooks.useSessionStorage("PT_CREATE_PROPERTY", {}),
    params = _Digit$Hooks$useSessi[0],
    clearParams = _Digit$Hooks$useSessi[2];
  var _Digit$Hooks$pt$useMD = Digit.Hooks.pt.useMDMS(stateId, "PropertyTax", "CommonFieldsConfig"),
    isLoading = _Digit$Hooks$pt$useMD.isLoading;
  var search = reactRouterDom.useLocation().search;
  var redirectUrl = new URLSearchParams(search).get('redirectUrl');
  var createProperty = function createProperty() {
    try {
      history.push(match.path + "/acknowledgement");
      return Promise.resolve();
    } catch (e) {
      return Promise.reject(e);
    }
  };
  var onSuccess = function onSuccess() {
    clearParams();
    queryClient.invalidateQueries("PT_CREATE_PROPERTY");
  };
  if (isLoading) {
    return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null);
  }
  return /*#__PURE__*/React__default.createElement(reactRouterDom.Switch, null, /*#__PURE__*/React__default.createElement(reactRouterDom.Route, {
    exact: true,
    path: "" + match.path
  }, /*#__PURE__*/React__default.createElement(CreatePropertyForm, {
    onSubmit: createProperty,
    value: params,
    userType: "citizen"
  })), /*#__PURE__*/React__default.createElement(reactRouterDom.Route, {
    exact: true,
    path: match.path + "/save-property"
  }, /*#__PURE__*/React__default.createElement(PTAcknowledgement, {
    data: params,
    onSuccess: onSuccess,
    redirectUrl: redirectUrl,
    userType: "citizen"
  })));
};

var config = [{
  texts: {
    header: "SEARCH_PROPERTY",
    submitButtonLabel: "PT_HOME_SEARCH_RESULTS_BUTTON_SEARCH",
    text: ""
  },
  inputs: [{
    label: "Owner Mobile Number",
    type: "mobileNumber",
    name: "mobileNumber",
    validation: {
      pattern: {
        value: /[6789][0-9]{9}/,
        message: "CORE_COMMON_MOBILE_ERROR"
      }
    },
    error: "CORE_COMMON_MOBILE_ERROR"
  }, {
    label: "Property ID",
    description: "CS_PROPERTY_ID_FORMAT_MUST_BE",
    type: "text",
    name: "propertyIds",
    error: "ERR_INVALID_PROPERTY_ID",
    validation: {
      pattern: {
        value: "[A-Za-z]{2}\-[A-Za-z]{2}\-[0-9]{4}\-[0-9]{2}\-[0-9]{2}\-[0-9]{6}",
        message: "ERR_INVALID_PROPERTY_ID"
      }
    }
  }, {
    label: "Old Property ID",
    type: "text",
    name: "oldPropertyId",
    error: "ERR_INVALID_PROPERTY_ID",
    validation: {
      pattern: {
        value: "[A-Za-z]{2}\-[A-Za-z]{2}\-[0-9]{4}\-[0-9]{2}\-[0-9]{2}\-[0-9]{6}",
        message: "ERR_INVALID_PROPERTY_ID"
      }
    }
  }, {
    label: "Consumer Name",
    type: "text",
    name: "name",
    validation: {
      pattern: {
        value: "[A-Za-z .`'-]{3,63}",
        message: "PAYMENT_INVALID_NAME"
      }
    },
    error: "PAYMENT_INVALID_NAME"
  }, {
    label: "Door Number",
    type: "text",
    name: "doorNumber",
    validation: {
      pattern: {
        value: "[A-Za-z0-9#,/ -()]{1,63}",
        message: "ERR_INVALID_DOOR_NO"
      }
    },
    error: "ERR_INVALID_DOOR_NO"
  }]
}];

var b = "function" === typeof Symbol && Symbol.for,
  c = b ? Symbol.for("react.element") : 60103,
  d = b ? Symbol.for("react.portal") : 60106,
  e = b ? Symbol.for("react.fragment") : 60107,
  f = b ? Symbol.for("react.strict_mode") : 60108,
  g = b ? Symbol.for("react.profiler") : 60114,
  h = b ? Symbol.for("react.provider") : 60109,
  k = b ? Symbol.for("react.context") : 60110,
  l = b ? Symbol.for("react.async_mode") : 60111,
  m = b ? Symbol.for("react.concurrent_mode") : 60111,
  n = b ? Symbol.for("react.forward_ref") : 60112,
  p = b ? Symbol.for("react.suspense") : 60113,
  q = b ? Symbol.for("react.suspense_list") : 60120,
  r = b ? Symbol.for("react.memo") : 60115,
  t = b ? Symbol.for("react.lazy") : 60116,
  v = b ? Symbol.for("react.block") : 60121,
  w = b ? Symbol.for("react.fundamental") : 60117,
  x = b ? Symbol.for("react.responder") : 60118,
  y = b ? Symbol.for("react.scope") : 60119;
function z(a) {
  if ("object" === typeof a && null !== a) {
    var u = a.$$typeof;
    switch (u) {
      case c:
        switch (a = a.type, a) {
          case l:
          case m:
          case e:
          case g:
          case f:
          case p:
            return a;
          default:
            switch (a = a && a.$$typeof, a) {
              case k:
              case n:
              case t:
              case r:
              case h:
                return a;
              default:
                return u;
            }
        }
      case d:
        return u;
    }
  }
}
function A(a) {
  return z(a) === m;
}
var AsyncMode = l;
var ConcurrentMode = m;
var ContextConsumer = k;
var ContextProvider = h;
var Element = c;
var ForwardRef = n;
var Fragment = e;
var Lazy = t;
var Memo = r;
var Portal = d;
var Profiler = g;
var StrictMode = f;
var Suspense = p;
var isAsyncMode = function isAsyncMode(a) {
  return A(a) || z(a) === l;
};
var isConcurrentMode = A;
var isContextConsumer = function isContextConsumer(a) {
  return z(a) === k;
};
var isContextProvider = function isContextProvider(a) {
  return z(a) === h;
};
var isElement = function isElement(a) {
  return "object" === typeof a && null !== a && a.$$typeof === c;
};
var isForwardRef = function isForwardRef(a) {
  return z(a) === n;
};
var isFragment = function isFragment(a) {
  return z(a) === e;
};
var isLazy = function isLazy(a) {
  return z(a) === t;
};
var isMemo = function isMemo(a) {
  return z(a) === r;
};
var isPortal = function isPortal(a) {
  return z(a) === d;
};
var isProfiler = function isProfiler(a) {
  return z(a) === g;
};
var isStrictMode = function isStrictMode(a) {
  return z(a) === f;
};
var isSuspense = function isSuspense(a) {
  return z(a) === p;
};
var isValidElementType = function isValidElementType(a) {
  return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || "object" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);
};
var typeOf = z;
var reactIs_production_min = {
  AsyncMode: AsyncMode,
  ConcurrentMode: ConcurrentMode,
  ContextConsumer: ContextConsumer,
  ContextProvider: ContextProvider,
  Element: Element,
  ForwardRef: ForwardRef,
  Fragment: Fragment,
  Lazy: Lazy,
  Memo: Memo,
  Portal: Portal,
  Profiler: Profiler,
  StrictMode: StrictMode,
  Suspense: Suspense,
  isAsyncMode: isAsyncMode,
  isConcurrentMode: isConcurrentMode,
  isContextConsumer: isContextConsumer,
  isContextProvider: isContextProvider,
  isElement: isElement,
  isForwardRef: isForwardRef,
  isFragment: isFragment,
  isLazy: isLazy,
  isMemo: isMemo,
  isPortal: isPortal,
  isProfiler: isProfiler,
  isStrictMode: isStrictMode,
  isSuspense: isSuspense,
  isValidElementType: isValidElementType,
  typeOf: typeOf
};

var reactIs_development = createCommonjsModule(function (module, exports) {

  if (process.env.NODE_ENV !== "production") {
    (function () {

      var hasSymbol = typeof Symbol === 'function' && Symbol.for;
      var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
      var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
      var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
      var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
      var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
      var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
      var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;

      var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
      var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
      var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
      var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
      var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
      var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
      var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
      var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
      var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
      var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
      var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
      function isValidElementType(type) {
        return typeof type === 'string' || typeof type === 'function' ||
        type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
      }
      function typeOf(object) {
        if (typeof object === 'object' && object !== null) {
          var $$typeof = object.$$typeof;
          switch ($$typeof) {
            case REACT_ELEMENT_TYPE:
              var type = object.type;
              switch (type) {
                case REACT_ASYNC_MODE_TYPE:
                case REACT_CONCURRENT_MODE_TYPE:
                case REACT_FRAGMENT_TYPE:
                case REACT_PROFILER_TYPE:
                case REACT_STRICT_MODE_TYPE:
                case REACT_SUSPENSE_TYPE:
                  return type;
                default:
                  var $$typeofType = type && type.$$typeof;
                  switch ($$typeofType) {
                    case REACT_CONTEXT_TYPE:
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_LAZY_TYPE:
                    case REACT_MEMO_TYPE:
                    case REACT_PROVIDER_TYPE:
                      return $$typeofType;
                    default:
                      return $$typeof;
                  }
              }
            case REACT_PORTAL_TYPE:
              return $$typeof;
          }
        }
        return undefined;
      }

      var AsyncMode = REACT_ASYNC_MODE_TYPE;
      var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
      var ContextConsumer = REACT_CONTEXT_TYPE;
      var ContextProvider = REACT_PROVIDER_TYPE;
      var Element = REACT_ELEMENT_TYPE;
      var ForwardRef = REACT_FORWARD_REF_TYPE;
      var Fragment = REACT_FRAGMENT_TYPE;
      var Lazy = REACT_LAZY_TYPE;
      var Memo = REACT_MEMO_TYPE;
      var Portal = REACT_PORTAL_TYPE;
      var Profiler = REACT_PROFILER_TYPE;
      var StrictMode = REACT_STRICT_MODE_TYPE;
      var Suspense = REACT_SUSPENSE_TYPE;
      var hasWarnedAboutDeprecatedIsAsyncMode = false;

      function isAsyncMode(object) {
        {
          if (!hasWarnedAboutDeprecatedIsAsyncMode) {
            hasWarnedAboutDeprecatedIsAsyncMode = true;

            console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
          }
        }
        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
      }
      function isConcurrentMode(object) {
        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
      }
      function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
      }
      function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
      }
      function isElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
      }
      function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
      }
      function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
      }
      function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
      }
      function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
      }
      function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
      }
      function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
      }
      function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
      }
      function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
      }
      exports.AsyncMode = AsyncMode;
      exports.ConcurrentMode = ConcurrentMode;
      exports.ContextConsumer = ContextConsumer;
      exports.ContextProvider = ContextProvider;
      exports.Element = Element;
      exports.ForwardRef = ForwardRef;
      exports.Fragment = Fragment;
      exports.Lazy = Lazy;
      exports.Memo = Memo;
      exports.Portal = Portal;
      exports.Profiler = Profiler;
      exports.StrictMode = StrictMode;
      exports.Suspense = Suspense;
      exports.isAsyncMode = isAsyncMode;
      exports.isConcurrentMode = isConcurrentMode;
      exports.isContextConsumer = isContextConsumer;
      exports.isContextProvider = isContextProvider;
      exports.isElement = isElement;
      exports.isForwardRef = isForwardRef;
      exports.isFragment = isFragment;
      exports.isLazy = isLazy;
      exports.isMemo = isMemo;
      exports.isPortal = isPortal;
      exports.isProfiler = isProfiler;
      exports.isStrictMode = isStrictMode;
      exports.isSuspense = isSuspense;
      exports.isValidElementType = isValidElementType;
      exports.typeOf = typeOf;
    })();
  }
});

var reactIs = createCommonjsModule(function (module) {

  if (process.env.NODE_ENV === 'production') {
    module.exports = reactIs_production_min;
  } else {
    module.exports = reactIs_development;
  }
});

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
  if (val === null || val === undefined) {
    throw new TypeError('Object.assign cannot be called with null or undefined');
  }
  return Object(val);
}
function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    }

    var test1 = new String('abc');
    test1[5] = 'de';
    if (Object.getOwnPropertyNames(test1)[0] === '5') {
      return false;
    }

    var test2 = {};
    for (var i = 0; i < 10; i++) {
      test2['_' + String.fromCharCode(i)] = i;
    }
    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
      return test2[n];
    });
    if (order2.join('') !== '0123456789') {
      return false;
    }

    var test3 = {};
    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
      test3[letter] = letter;
    });
    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
      return false;
    }
    return true;
  } catch (err) {
    return false;
  }
}
var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
  var from;
  var to = toObject(target);
  var symbols;
  for (var s = 1; s < arguments.length; s++) {
    from = Object(arguments[s]);
    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }
    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);
      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }
  return to;
};

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
var ReactPropTypesSecret_1 = ReactPropTypesSecret;

var has = Function.call.bind(Object.prototype.hasOwnProperty);

var printWarning = function printWarning() {};
if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;
  var loggedTypeFailures = {};
  var has$1 = has;
  printWarning = function printWarning(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      throw new Error(message);
    } catch (x) {}
  };
}

function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has$1(typeSpecs, typeSpecName)) {
        var error;
        try {
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = true;
          var stack = getStack ? getStack() : '';
          printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
        }
      }
    }
  }
}

checkPropTypes.resetWarningCache = function () {
  if (process.env.NODE_ENV !== 'production') {
    loggedTypeFailures = {};
  }
};
var checkPropTypes_1 = checkPropTypes;

var printWarning$1 = function printWarning() {};
if (process.env.NODE_ENV !== 'production') {
  printWarning$1 = function printWarning(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      throw new Error(message);
    } catch (x) {}
  };
}
function emptyFunctionThatReturnsNull() {
  return null;
}
var factoryWithTypeCheckers = function factoryWithTypeCheckers(isValidElement, throwOnDirectAccess) {
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator';

  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  var ANONYMOUS = '<<anonymous>>';

  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bigint: createPrimitiveTypeChecker('bigint'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),
    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker
  };

  function is(x, y) {
    if (x === y) {
      return x !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }

  function PropTypeError(message, data) {
    this.message = message;
    this.data = data && typeof data === 'object' ? data : {};
    this.stack = '';
  }
  PropTypeError.prototype = Error.prototype;
  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;
      if (secret !== ReactPropTypesSecret_1) {
        if (throwOnDirectAccess) {
          var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          var cacheKey = componentName + ':' + propName;
          if (!manualPropTypeCallCache[cacheKey] &&
          manualPropTypeWarningCount < 3) {
            printWarning$1('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }
    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);
    return chainedCheckType;
  }
  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        var preciseType = getPreciseType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'), {
          expectedType: expectedType
        });
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }
  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!reactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (process.env.NODE_ENV !== 'production') {
        if (arguments.length > 1) {
          printWarning$1('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
        } else {
          printWarning$1('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }
      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }
  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning$1('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }
    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning$1('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
        return emptyFunctionThatReturnsNull;
      }
    }
    function validate(props, propName, componentName, location, propFullName) {
      var expectedTypes = [];
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1);
        if (checkerResult == null) {
          return null;
        }
        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {
          expectedTypes.push(checkerResult.data.expectedType);
        }
      }
      var expectedTypesMessage = expectedTypes.length > 0 ? ', expected one of type [' + expectedTypes.join(', ') + ']' : '';
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
    }
    return createChainableTypeChecker(validate);
  }
  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function invalidValidatorError(componentName, location, propFullName, key, type) {
    return new PropTypeError((componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + type + '`.');
  }
  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (typeof checker !== 'function') {
          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      var allKeys = objectAssign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (has(shapeTypes, key) && typeof checker !== 'function') {
          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
        }
        if (!checker) {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }
        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }
        return true;
      default:
        return false;
    }
  }
  function isSymbol(propType, propValue) {
    if (propType === 'symbol') {
      return true;
    }

    if (!propValue) {
      return false;
    }

    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }
    return false;
  }

  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }
  ReactPropTypes.checkPropTypes = checkPropTypes_1;
  ReactPropTypes.resetWarningCache = checkPropTypes_1.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;
var factoryWithThrowingShims = function factoryWithThrowingShims() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret_1) {
      return;
    }
    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
    err.name = 'Invariant Violation';
    throw err;
  }
  shim.isRequired = shim;
  function getShim() {
    return shim;
  }
  var ReactPropTypes = {
    array: shim,
    bigint: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,
    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,
    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};

var propTypes = createCommonjsModule(function (module) {

  if (process.env.NODE_ENV !== 'production') {
    var ReactIs = reactIs;

    var throwOnDirectAccess = true;
    module.exports = factoryWithTypeCheckers(ReactIs.isElement, throwOnDirectAccess);
  } else {
    module.exports = factoryWithThrowingShims();
  }
});

var description = {
  description: "(or)",
  descriptionStyles: {
    fontWeight: "300",
    color: "#505A5F",
    marginTop: "0px",
    textAlign: "center"
  }
};
var SearchProperty = function SearchProperty(_ref) {
  var _Digit$Hooks$pt$useTe, _Digit$Hooks$tl$useTe;
  var propsConfig = _ref.config,
    onSelect = _ref.onSelect,
    redirectToUrl = _ref.redirectToUrl;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var history = reactRouterDom.useHistory();
  var _Digit$Hooks$useQuery = Digit.Hooks.useQueryParams(),
    _Digit$Hooks$useQuery2 = _Digit$Hooks$useQuery.action,
    action = _Digit$Hooks$useQuery2 === void 0 ? 0 : _Digit$Hooks$useQuery2;
  var _useState = React.useState({}),
    searchData = _useState[0],
    setSearchData = _useState[1];
  var _useState2 = React.useState(null),
    showToast = _useState2[0],
    setShowToast = _useState2[1];
  sessionStorage.setItem("VisitedCommonPTSearch", true);
  var allCities = (_Digit$Hooks$pt$useTe = Digit.Hooks.pt.useTenants()) === null || _Digit$Hooks$pt$useTe === void 0 ? void 0 : _Digit$Hooks$pt$useTe.sort(function (a, b) {
    var _a$i18nKey, _a$i18nKey$localeComp;
    return a === null || a === void 0 ? void 0 : (_a$i18nKey = a.i18nKey) === null || _a$i18nKey === void 0 ? void 0 : (_a$i18nKey$localeComp = _a$i18nKey.localeCompare) === null || _a$i18nKey$localeComp === void 0 ? void 0 : _a$i18nKey$localeComp.call(_a$i18nKey, b === null || b === void 0 ? void 0 : b.i18nKey);
  });
  allCities = allCities ? allCities : (_Digit$Hooks$tl$useTe = Digit.Hooks.tl.useTenants()) === null || _Digit$Hooks$tl$useTe === void 0 ? void 0 : _Digit$Hooks$tl$useTe.sort(function (a, b) {
    var _a$i18nKey2, _a$i18nKey2$localeCom;
    return a === null || a === void 0 ? void 0 : (_a$i18nKey2 = a.i18nKey) === null || _a$i18nKey2 === void 0 ? void 0 : (_a$i18nKey2$localeCom = _a$i18nKey2.localeCompare) === null || _a$i18nKey2$localeCom === void 0 ? void 0 : _a$i18nKey2$localeCom.call(_a$i18nKey2, b === null || b === void 0 ? void 0 : b.i18nKey);
  });
  var _useState3 = React.useState(),
    cityCode = _useState3[0],
    setCityCode = _useState3[1];
  var _useState4 = React.useState(),
    formValue = _useState4[0],
    setFormValue = _useState4[1];
  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertySearchWithDue({
      tenantId: searchData === null || searchData === void 0 ? void 0 : searchData.city,
      filters: searchData === null || searchData === void 0 ? void 0 : searchData.filters,
      auth: true,
      configs: {
        enabled: Object.keys(searchData).length > 0,
        retry: false,
        retryOnMount: false,
        staleTime: Infinity
      }
    }),
    propertyData = _Digit$Hooks$pt$usePr.data,
    propertyDataLoading = _Digit$Hooks$pt$usePr.isLoading,
    error = _Digit$Hooks$pt$usePr.error;
  React.useEffect(function () {
    showToast && setShowToast(null);
  }, [action, propertyDataLoading]);
  React.useLayoutEffect(function () {
    var getActionBar = function getActionBar() {
      var el = document.querySelector("div.action-bar-wrap");
      if (el) {
        el.style.position = "static";
        el.style.padding = "8px 0";
        el.style.boxShadow = "none";
        el.style.marginBottom = "16px";
      } else {
        setTimeout(function () {
          getActionBar();
        }, 100);
      }
    };
    getActionBar();
  }, []);
  var _Digit$Hooks$pt$useMD = Digit.Hooks.pt.useMDMS(Digit.ULBService.getStateId(), "DIGIT-UI", "HelpText", {
      select: function select(data) {
        var _data$DIGITUI, _data$DIGITUI$HelpTex, _data$DIGITUI$HelpTex2;
        return data === null || data === void 0 ? void 0 : (_data$DIGITUI = data["DIGIT-UI"]) === null || _data$DIGITUI === void 0 ? void 0 : (_data$DIGITUI$HelpTex = _data$DIGITUI["HelpText"]) === null || _data$DIGITUI$HelpTex === void 0 ? void 0 : (_data$DIGITUI$HelpTex2 = _data$DIGITUI$HelpTex[0]) === null || _data$DIGITUI$HelpTex2 === void 0 ? void 0 : _data$DIGITUI$HelpTex2.PT;
      }
    }),
    ptSearchConfig = _Digit$Hooks$pt$useMD.data,
    isLoading = _Digit$Hooks$pt$useMD.isLoading;
  var _propsConfig$inputs = propsConfig.inputs,
    mobileNumber = _propsConfig$inputs[0],
    property = _propsConfig$inputs[1],
    oldProperty = _propsConfig$inputs[2],
    name = _propsConfig$inputs[3],
    doorNumber = _propsConfig$inputs[4];
  var config = [{
    body: [{
      type: "custom",
      populators: {
        name: "addParam",
        defaultValue: {
          code: 0,
          name: t('PT_KNOW_PTID')
        },
        customProps: {
          t: t,
          isMandatory: true,
          optionsKey: "name",
          options: [{
            code: 0,
            name: t('PT_KNOW_PTID')
          }, {
            code: 1,
            name: t('PT_SEARCH_DOOR_NO')
          }]
        },
        component: function component(props, customProps) {
          return /*#__PURE__*/React__default.createElement(digitUiReactComponents.RadioButtons, _extends({}, customProps, {
            selectedOption: props.value,
            onSelect: function onSelect(d) {
              props === null || props === void 0 ? void 0 : props.setValue("city", {});
              props === null || props === void 0 ? void 0 : props.setValue("locality", {});
              props === null || props === void 0 ? void 0 : props.setValue("mobileNumber", "");
              props === null || props === void 0 ? void 0 : props.setValue("propertyIds", "");
              props === null || props === void 0 ? void 0 : props.setValue("doorNumber", "");
              props === null || props === void 0 ? void 0 : props.setValue("oldPropertyId", "");
              props === null || props === void 0 ? void 0 : props.setValue("name", "");
              history.replace(history.location.pathname + "?action=" + (action == 0 ? 1 : 0));
            }
          }));
        }
      }
    }, {
      label: "PT_SELECT_CITY",
      isMandatory: true,
      type: "custom",
      populators: {
        name: "city",
        defaultValue: null,
        rules: {
          required: true
        },
        customProps: {
          t: t,
          isMandatory: true,
          option: [].concat(allCities),
          optionKey: "i18nKey"
        },
        component: function component(props, customProps) {
          return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Dropdown, _extends({}, customProps, {
            selected: props.value,
            select: function select(d) {
              var _props$value, _props$value2;
              Digit.LocalizationService.getLocale({
                modules: ["rainmaker-" + (props === null || props === void 0 ? void 0 : (_props$value = props.value) === null || _props$value === void 0 ? void 0 : _props$value.code)],
                locale: Digit.StoreData.getCurrentLanguage(),
                tenantId: "" + (props === null || props === void 0 ? void 0 : (_props$value2 = props.value) === null || _props$value2 === void 0 ? void 0 : _props$value2.code)
              });
              if (d.code !== cityCode) props.setValue("locality", null);
              props.onChange(d);
            }
          }));
        }
      }
    }, {
      label: t("PT_PROVIDE_ONE_MORE_PARAM"),
      isInsideBox: true,
      placementinbox: 0,
      isSectionText: true
    }, _extends({
      label: mobileNumber.label,
      type: mobileNumber.type,
      populators: {
        defaultValue: "",
        name: mobileNumber.name,
        validation: mobileNumber === null || mobileNumber === void 0 ? void 0 : mobileNumber.validation
      }
    }, description, {
      isMandatory: false,
      isInsideBox: true,
      placementinbox: 1
    }), _extends({
      label: "",
      labelChildren: /*#__PURE__*/React__default.createElement("div", {
        className: "tooltip"
      }, /*#__PURE__*/React__default.createElement("div", {
        style: {
          display: "flex",
          gap: "0 4px"
        }
      }, /*#__PURE__*/React__default.createElement("h2", null, property.label), /*#__PURE__*/React__default.createElement(digitUiReactComponents.InfoBannerIcon, {
        fill: "#0b0c0c"
      }), /*#__PURE__*/React__default.createElement("span", {
        className: "tooltiptext",
        style: {
          position: "absolute",
          width: "100%",
          marginLeft: "50%",
          fontSize: "medium"
        }
      }, t(property.description) + " " + (ptSearchConfig === null || ptSearchConfig === void 0 ? void 0 : ptSearchConfig.propertyIdFormat)))),
      type: property.type,
      populators: {
        name: property.name,
        defaultValue: "",
        validation: property === null || property === void 0 ? void 0 : property.validation
      }
    }, description, {
      isMandatory: false,
      isInsideBox: true,
      placementinbox: 1
    }), {
      label: oldProperty.label,
      type: oldProperty.type,
      populators: {
        name: oldProperty.name,
        defaultValue: "",
        validation: oldProperty === null || oldProperty === void 0 ? void 0 : oldProperty.validation
      },
      isMandatory: false,
      isInsideBox: true,
      placementinbox: 2
    }],
    body1: [{
      type: "custom",
      populators: {
        name: "addParam1",
        defaultValue: {
          code: 1,
          name: t('PT_SEARCH_DOOR_NO')
        },
        customProps: {
          t: t,
          isMandatory: true,
          optionsKey: "name",
          options: [{
            code: 0,
            name: t('PT_KNOW_PTID')
          }, {
            code: 1,
            name: t('PT_SEARCH_DOOR_NO')
          }]
        },
        component: function component(props, customProps) {
          return /*#__PURE__*/React__default.createElement(digitUiReactComponents.RadioButtons, _extends({}, customProps, {
            selectedOption: props.value,
            onSelect: function onSelect(d) {
              props === null || props === void 0 ? void 0 : props.setValue("city", {});
              props === null || props === void 0 ? void 0 : props.setValue("locality", {});
              props === null || props === void 0 ? void 0 : props.setValue("mobileNumber", "");
              props === null || props === void 0 ? void 0 : props.setValue("propertyIds", "");
              props === null || props === void 0 ? void 0 : props.setValue("doorNumber", "");
              props === null || props === void 0 ? void 0 : props.setValue("oldPropertyId", "");
              props === null || props === void 0 ? void 0 : props.setValue("name", "");
              history.replace(history.location.pathname + "?action=" + (action == 0 ? 1 : 0));
            }
          }));
        }
      }
    }, {
      label: "PT_SELECT_CITY",
      isMandatory: true,
      type: "custom",
      populators: {
        name: "city",
        defaultValue: null,
        rules: {
          required: true
        },
        customProps: {
          t: t,
          isMandatory: true,
          option: [].concat(allCities),
          optionKey: "i18nKey"
        },
        component: function component(props, customProps) {
          return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Dropdown, _extends({}, customProps, {
            selected: props.value,
            select: function select(d) {
              var _props$value3, _props$value4;
              Digit.LocalizationService.getLocale({
                modules: ["rainmaker-" + (props === null || props === void 0 ? void 0 : (_props$value3 = props.value) === null || _props$value3 === void 0 ? void 0 : _props$value3.code)],
                locale: Digit.StoreData.getCurrentLanguage(),
                tenantId: "" + (props === null || props === void 0 ? void 0 : (_props$value4 = props.value) === null || _props$value4 === void 0 ? void 0 : _props$value4.code)
              });
              if (d.code !== cityCode) props.setValue("locality", null);
              props.onChange(d);
            }
          }));
        }
      }
    }, {
      label: "PT_SELECT_LOCALITY",
      type: "custom",
      isMandatory: true,
      populators: {
        name: "locality",
        defaultValue: "",
        rules: {
          required: true
        },
        customProps: {},
        component: function component(props, customProps) {
          return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Localities, {
            selectLocality: function selectLocality(d) {
              props.onChange(d);
            },
            tenantId: cityCode,
            boundaryType: "revenue",
            keepNull: false,
            optionCardStyles: {
              height: "600px",
              overflow: "auto",
              zIndex: "10"
            },
            selected: formValue === null || formValue === void 0 ? void 0 : formValue.locality,
            disable: !cityCode,
            disableLoader: true
          });
        }
      }
    }, {
      label: t("PT_PROVIDE_ONE_MORE_PARAM"),
      isInsideBox: true,
      placementinbox: 0,
      isSectionText: true
    }, {
      label: doorNumber.label,
      type: doorNumber.type,
      populators: {
        defaultValue: "",
        name: doorNumber.name,
        validation: doorNumber === null || doorNumber === void 0 ? void 0 : doorNumber.validation
      },
      isMandatory: false,
      isInsideBox: true,
      placementinbox: 1
    }, {
      label: name.label,
      type: name.type,
      populators: {
        defaultValue: "",
        name: name.name,
        validation: name === null || name === void 0 ? void 0 : name.validation
      },
      isMandatory: false,
      isInsideBox: true,
      placementinbox: 2
    }]
  }];
  var onPropertySearch = function onPropertySearch(data) {
    try {
      var _data$city;
      if (!(data !== null && data !== void 0 && (_data$city = data.city) !== null && _data$city !== void 0 && _data$city.code)) {
        setShowToast({
          error: true,
          label: "ERR_PT_FILL_VALID_FIELDS"
        });
        return Promise.resolve();
      }
      if (action == 0) {
        var _data$mobileNumber, _mobileNumber$validat, _mobileNumber$validat2, _data$propertyIds, _property$validation, _property$validation$, _data$oldPropertyId, _oldProperty$validati, _oldProperty$validati2;
        if (!(data !== null && data !== void 0 && data.mobileNumber || data !== null && data !== void 0 && data.propertyIds || data !== null && data !== void 0 && data.oldPropertyId)) {
          setShowToast({
            error: true,
            label: "ERR_PT_FILL_VALID_FIELDS"
          });
          return Promise.resolve();
        }
        if (data !== null && data !== void 0 && data.mobileNumber && !((_data$mobileNumber = data.mobileNumber) !== null && _data$mobileNumber !== void 0 && _data$mobileNumber.match(mobileNumber === null || mobileNumber === void 0 ? void 0 : (_mobileNumber$validat = mobileNumber.validation) === null || _mobileNumber$validat === void 0 ? void 0 : (_mobileNumber$validat2 = _mobileNumber$validat.pattern) === null || _mobileNumber$validat2 === void 0 ? void 0 : _mobileNumber$validat2.value))) {
          var _mobileNumber$validat3, _mobileNumber$validat4;
          setShowToast({
            error: true,
            label: mobileNumber === null || mobileNumber === void 0 ? void 0 : (_mobileNumber$validat3 = mobileNumber.validation) === null || _mobileNumber$validat3 === void 0 ? void 0 : (_mobileNumber$validat4 = _mobileNumber$validat3.pattern) === null || _mobileNumber$validat4 === void 0 ? void 0 : _mobileNumber$validat4.message
          });
          return Promise.resolve();
        }
        if (data !== null && data !== void 0 && data.propertyIds && !((_data$propertyIds = data.propertyIds) !== null && _data$propertyIds !== void 0 && _data$propertyIds.match(property === null || property === void 0 ? void 0 : (_property$validation = property.validation) === null || _property$validation === void 0 ? void 0 : (_property$validation$ = _property$validation.pattern) === null || _property$validation$ === void 0 ? void 0 : _property$validation$.value))) {
          var _property$validation2, _property$validation3;
          setShowToast({
            error: true,
            label: property === null || property === void 0 ? void 0 : (_property$validation2 = property.validation) === null || _property$validation2 === void 0 ? void 0 : (_property$validation3 = _property$validation2.pattern) === null || _property$validation3 === void 0 ? void 0 : _property$validation3.message
          });
          return Promise.resolve();
        }
        if (data !== null && data !== void 0 && data.oldPropertyId && !((_data$oldPropertyId = data.oldPropertyId) !== null && _data$oldPropertyId !== void 0 && _data$oldPropertyId.match(oldProperty === null || oldProperty === void 0 ? void 0 : (_oldProperty$validati = oldProperty.validation) === null || _oldProperty$validati === void 0 ? void 0 : (_oldProperty$validati2 = _oldProperty$validati.pattern) === null || _oldProperty$validati2 === void 0 ? void 0 : _oldProperty$validati2.value))) {
          var _oldProperty$validati3, _oldProperty$validati4;
          setShowToast({
            error: true,
            label: oldProperty === null || oldProperty === void 0 ? void 0 : (_oldProperty$validati3 = oldProperty.validation) === null || _oldProperty$validati3 === void 0 ? void 0 : (_oldProperty$validati4 = _oldProperty$validati3.pattern) === null || _oldProperty$validati4 === void 0 ? void 0 : _oldProperty$validati4.message
          });
          return Promise.resolve();
        }
      } else {
        var _data$locality, _data$name, _name$validation, _name$validation$patt, _data$doorNumber, _doorNumber$validatio, _doorNumber$validatio2;
        if (!(data !== null && data !== void 0 && (_data$locality = data.locality) !== null && _data$locality !== void 0 && _data$locality.code)) {
          setShowToast({
            error: true,
            label: "ERR_PT_FILL_VALID_FIELDS"
          });
          return Promise.resolve();
        }
        if (!(data !== null && data !== void 0 && data.doorNumber || data !== null && data !== void 0 && data.name)) {
          setShowToast({
            error: true,
            label: "ERR_PT_FILL_VALID_FIELDS"
          });
          return Promise.resolve();
        }
        if (data !== null && data !== void 0 && data.name && !((_data$name = data.name) !== null && _data$name !== void 0 && _data$name.match(name === null || name === void 0 ? void 0 : (_name$validation = name.validation) === null || _name$validation === void 0 ? void 0 : (_name$validation$patt = _name$validation.pattern) === null || _name$validation$patt === void 0 ? void 0 : _name$validation$patt.value))) {
          var _name$validation2, _name$validation2$pat;
          setShowToast({
            error: true,
            label: name === null || name === void 0 ? void 0 : (_name$validation2 = name.validation) === null || _name$validation2 === void 0 ? void 0 : (_name$validation2$pat = _name$validation2.pattern) === null || _name$validation2$pat === void 0 ? void 0 : _name$validation2$pat.message
          });
          return Promise.resolve();
        }
        if (data !== null && data !== void 0 && data.doorNumber && !((_data$doorNumber = data.doorNumber) !== null && _data$doorNumber !== void 0 && _data$doorNumber.match(doorNumber === null || doorNumber === void 0 ? void 0 : (_doorNumber$validatio = doorNumber.validation) === null || _doorNumber$validatio === void 0 ? void 0 : (_doorNumber$validatio2 = _doorNumber$validatio.pattern) === null || _doorNumber$validatio2 === void 0 ? void 0 : _doorNumber$validatio2.value))) {
          var _doorNumber$validatio3, _doorNumber$validatio4;
          setShowToast({
            error: true,
            label: doorNumber === null || doorNumber === void 0 ? void 0 : (_doorNumber$validatio3 = doorNumber.validation) === null || _doorNumber$validatio3 === void 0 ? void 0 : (_doorNumber$validatio4 = _doorNumber$validatio3.pattern) === null || _doorNumber$validatio4 === void 0 ? void 0 : _doorNumber$validatio4.message
          });
          return Promise.resolve();
        }
      }
      setShowToast(null);
      var tempObject = Object.keys(data).filter(function (k) {
        return data[k];
      }).reduce(function (acc, key) {
        var _extends2;
        return _extends({}, acc, (_extends2 = {}, _extends2[key] = typeof data[key] === "object" ? data[key].code : data[key], _extends2));
      }, {});
      var city = tempObject.city;
      delete tempObject.addParam;
      delete tempObject.addParam1;
      delete tempObject.city;
      setSearchData({
        city: city,
        filters: tempObject
      });
      return Promise.resolve();
    } catch (e) {
      return Promise.reject(e);
    }
  };
  var onFormValueChange = function onFormValueChange(setValue, data, formState) {
    var city = data === null || data === void 0 ? void 0 : data.city;

    var locality = data === null || data === void 0 ? void 0 : data.locality;
    if ((city === null || city === void 0 ? void 0 : city.code) !== cityCode) {
      setCityCode(city === null || city === void 0 ? void 0 : city.code);
    }
    if (!lodash.isEqual(data, formValue)) {
      setFormValue(data);
    }
    if (!locality || !city) {
      return;
    }
  };
  if (isLoading) {
    return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null);
  }
  if (propertyData && !propertyDataLoading && !error) {
    var _searchData$filters, _propertyDataLoading$;
    var qs = {};
    qs = _extends({}, searchData.filters, {
      city: searchData.city
    });
    if (ptSearchConfig !== null && ptSearchConfig !== void 0 && ptSearchConfig.ptSearchCount && searchData !== null && searchData !== void 0 && (_searchData$filters = searchData.filters) !== null && _searchData$filters !== void 0 && _searchData$filters.locality && propertyDataLoading && propertyDataLoading !== null && propertyDataLoading !== void 0 && (_propertyDataLoading$ = propertyDataLoading.Properties) !== null && _propertyDataLoading$ !== void 0 && _propertyDataLoading$.length && propertyDataLoading.Properties.length > ptSearchConfig.ptSearchCount) {
      !showToast && setShowToast({
        error: true,
        label: "PT_MODIFY_SEARCH_CRITERIA"
      });
    } else if (propsConfig.action === "MUTATION") {
      onSelect(propsConfig.key, qs, null, null, null, {
        queryParams: _extends({}, qs)
      });
    } else {
      if (redirectToUrl || window.location.href.includes("digit-ui/citizen/commonpt/property/citizen-search")) {
        history.push("/digit-ui/citizen/commonPt/property/search-results?" + Object.keys(qs).map(function (key) {
          return key + "=" + qs[key];
        }).join("&") + (redirectToUrl ? "&redirectToUrl=" + redirectToUrl : ''));
      } else {
        var _qs, _qs2, _qs3, _qs4, _qs5, _qs6, _qs7, _qs8;
        var SearchParams = {};
        if (action == 0) SearchParams = {
          city: (_qs = qs) === null || _qs === void 0 ? void 0 : _qs.city,
          mobileNumber: ((_qs2 = qs) === null || _qs2 === void 0 ? void 0 : _qs2.mobileNumber) || "",
          propertyIds: ((_qs3 = qs) === null || _qs3 === void 0 ? void 0 : _qs3.propertyIds) || "",
          oldPropertyIds: ((_qs4 = qs) === null || _qs4 === void 0 ? void 0 : _qs4.oldPropertyIds) || "",
          locality: "",
          doorNo: "",
          name: ""
        };else SearchParams = {
          city: (_qs5 = qs) === null || _qs5 === void 0 ? void 0 : _qs5.city,
          locality: ((_qs6 = qs) === null || _qs6 === void 0 ? void 0 : _qs6.locality) || "",
          doorNo: ((_qs7 = qs) === null || _qs7 === void 0 ? void 0 : _qs7.doorNumber) || "",
          name: ((_qs8 = qs) === null || _qs8 === void 0 ? void 0 : _qs8.name) || "",
          mobileNumber: "",
          propertyIds: "",
          oldPropertyIds: ""
        };
        onSelect('cptSearchQuery', SearchParams, null, null, null, {
          queryParams: _extends({}, SearchParams)
        });
      }
    }
  }
  if (error) {
    var _error$response, _error$response$data, _error$response$data$, _error$response$data$2;
    !showToast && setShowToast({
      error: true,
      label: (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.Errors) === null || _error$response$data$ === void 0 ? void 0 : (_error$response$data$2 = _error$response$data$[0]) === null || _error$response$data$2 === void 0 ? void 0 : _error$response$data$2.code) || error
    });
  }
  if (action == 1) {
    config[0].body = [].concat(config[0].body1);
  }
  return /*#__PURE__*/React__default.createElement("div", {
    style: {
      marginTop: "16px",
      marginBottom: "16px",
      backgroundColor: "white"
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.FormComposer, {
    onSubmit: onPropertySearch,
    noBoxShadow: true,
    inline: true,
    config: config,
    label: propsConfig.texts.submitButtonLabel,
    heading: t(propsConfig.texts.header),
    text: t(propsConfig.texts.text),
    headingStyle: {
      fontSize: "32px",
      marginBottom: "16px",
      fontFamily: "Roboto Condensed,sans-serif"
    },
    onFormValueChange: onFormValueChange,
    cardStyle: {
      marginBottom: "0"
    }
  }), /*#__PURE__*/React__default.createElement("span", {
    className: "link",
    style: {
      display: "flex",
      justifyContent: "center",
      paddingBottom: "16px"
    }
  }, /*#__PURE__*/React__default.createElement(reactRouterDom.Link, {
    to: window.location.href.includes("/tl/tradelicence/") ? "/digit-ui/citizen/tl/tradelicence/new-application/create-property" : "/digit-ui/citizen/commonpt/property/new-application"
  }, t("CPT_REG_NEW_PROPERTY"))), showToast && /*#__PURE__*/React__default.createElement(digitUiReactComponents.Toast, {
    isDleteBtn: true,
    error: showToast.error,
    warning: showToast.warning,
    label: t(showToast.label),
    onClose: function onClose() {
      setShowToast(null);
    }
  }));
};
SearchProperty.propTypes = {
  loginParams: propTypes.any
};
SearchProperty.defaultProps = {
  loginParams: null
};

var SearchProperty$1 = function SearchProperty$1(_ref) {
  var onSelect = _ref.onSelect;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var _useRouteMatch = reactRouterDom.useRouteMatch(),
    path = _useRouteMatch.path;
  var search = reactRouterDom.useLocation().search;
  var redirectToUrl = new URLSearchParams(search).get('redirectToUrl');
  var params = React.useMemo(function () {
    return config.map(function (step) {
      var texts = {};
      for (var key in step.texts) {
        texts[key] = t(step.texts[key]);
      }
      return _extends({}, step, {
        texts: texts
      });
    }, [config]);
  });
  return /*#__PURE__*/React__default.createElement(reactRouterDom.Switch, null, /*#__PURE__*/React__default.createElement(reactRouterDom.Route, {
    path: "" + path,
    exact: true
  }, /*#__PURE__*/React__default.createElement(SearchProperty, {
    config: params[0],
    onSelect: onSelect,
    redirectToUrl: redirectToUrl
  })));
};

var config$1 = [{
  texts: {
    header: "CS_SEARCH_RESULTS",
    actionButtonLabel: "Select"
  },
  labels: [{
    label: "Amount Due",
    key: "total_due",
    noteStyle: {
      fontSize: "24px",
      fontWeight: "bold"
    },
    notePrefix: "₹ "
  }, {
    label: "Property ID",
    key: "property_id"
  }, {
    label: "Owner's Name",
    key: "owner_name"
  }, {
    label: "Address",
    key: "property_address"
  }, {
    label: "Status",
    key: "status"
  }]
}];

var _iteratorSymbol = /*#__PURE__*/typeof Symbol !== "undefined" ? Symbol.iterator || (Symbol.iterator = Symbol("Symbol.iterator")) : "@@iterator";
var _asyncIteratorSymbol = /*#__PURE__*/typeof Symbol !== "undefined" ? Symbol.asyncIterator || (Symbol.asyncIterator = Symbol("Symbol.asyncIterator")) : "@@asyncIterator";

function _catch(body, recover) {
  try {
    var result = body();
  } catch (e) {
    return recover(e);
  }
  if (result && result.then) {
    return result.then(void 0, recover);
  }
  return result;
}

var TYPE_LOGIN$1 = {
  type: "login"
};
var DEFAULT_REDIRECT_URL = "/digit-ui/citizen";
var PropertySearchResults = function PropertySearchResults(_ref) {
  var _result$data, _result$data$Properti, _paymentDetails$data, _paymentDetails$data$, _result$data3, _result$data3$Propert, _result$data4, _modalData$total_due;
  var template = _ref.template,
    header = _ref.header,
    actionButtonLabel = _ref.actionButtonLabel,
    isMutation = _ref.isMutation,
    onSelect = _ref.onSelect,
    _ref$clearParams = _ref.clearParams,
    clearParams = _ref$clearParams === void 0 ? function () {} : _ref$clearParams,
    stateCode = _ref.stateCode,
    redirectToUrl = _ref.redirectToUrl,
    searchQuery = _ref.searchQuery;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var modalRef = React.useRef();
  var _Digit$Hooks$useQuery = Digit.Hooks.useQueryParams(),
    mobileNumber = _Digit$Hooks$useQuery.mobileNumber,
    propertyIds = _Digit$Hooks$useQuery.propertyIds,
    oldPropertyIds = _Digit$Hooks$useQuery.oldPropertyIds,
    locality = _Digit$Hooks$useQuery.locality,
    city = _Digit$Hooks$useQuery.city,
    doorNo = _Digit$Hooks$useQuery.doorNo,
    name = _Digit$Hooks$useQuery.name;
  var filters = {};
  var _useState = React.useState(false),
    modalData = _useState[0],
    setShowModal = _useState[1];
  var closeModal = function closeModal() {
    setShowModal(false);
  };
  Digit.Hooks.useClickOutside(modalRef, closeModal, modalData);
  if (mobileNumber || searchQuery && searchQuery.mobileNumber) filters.mobileNumber = mobileNumber ? mobileNumber : searchQuery === null || searchQuery === void 0 ? void 0 : searchQuery.mobileNumber;
  if (propertyIds || searchQuery && searchQuery.propertyIds) filters.propertyIds = propertyIds ? propertyIds : searchQuery === null || searchQuery === void 0 ? void 0 : searchQuery.propertyIds;
  if (oldPropertyIds || searchQuery && searchQuery.oldPropertyIds) filters.oldPropertyIds = oldPropertyIds ? oldPropertyIds : searchQuery === null || searchQuery === void 0 ? void 0 : searchQuery.oldPropertyIds;
  if (locality || searchQuery && searchQuery.locality) filters.locality = locality ? locality : searchQuery === null || searchQuery === void 0 ? void 0 : searchQuery.locality;
  if (doorNo || searchQuery && searchQuery.doorNo) filters.doorNo = doorNo ? doorNo : searchQuery === null || searchQuery === void 0 ? void 0 : searchQuery.doorNo;
  if (name || searchQuery && searchQuery.name) filters.name = name ? name : searchQuery === null || searchQuery === void 0 ? void 0 : searchQuery.name;
  var _Digit$Hooks$useSessi = Digit.Hooks.useSessionStorage("PT_MUTATE_MULTIPLE_OWNERS", null),
    setOwners = _Digit$Hooks$useSessi[1];
  var _Digit$Hooks$useSessi2 = Digit.Hooks.useSessionStorage("PT_MUTATE_MULTIPLE_OWNERS_LAST_PATH", null),
    setLastPath = _Digit$Hooks$useSessi2[1];
  var _useRouteMatch = reactRouterDom.useRouteMatch();
  var searchParams = Digit.Hooks.useQueryParams();
  React.useEffect(function () {
    setOwners([]);
    clearParams();
    setLastPath("");
  }, []);

  var auth = true;
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var scity = city ? city : searchQuery === null || searchQuery === void 0 ? void 0 : searchQuery.city;
  var searchArgs = scity ? {
    tenantId: scity,
    filters: filters,
    auth: auth
  } : {
    filters: filters,
    auth: auth
  };
  var result = Digit.Hooks.pt.usePropertySearch(searchArgs);
  var consumerCode = result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : (_result$data$Properti = _result$data.Properties) === null || _result$data$Properti === void 0 ? void 0 : _result$data$Properti.map(function (a) {
    return a.propertyId;
  }).join(",");
  var fetchBillParams = mobileNumber ? {
    mobileNumber: mobileNumber,
    consumerCode: consumerCode
  } : {
    consumerCode: consumerCode
  };
  var paymentDetails = Digit.Hooks.useFetchBillsForBuissnessService(_extends({
    businessService: "PT"
  }, fetchBillParams, {
    tenantId: scity
  }), {
    enabled: consumerCode ? true : false,
    retry: false
  });
  var history = reactRouterDom.useHistory();
  var proceedToPay = function proceedToPay(data) {
    history.push("/digit-ui/citizen/payment/my-bills/PT/" + data.property_id, {
      tenantId: tenantId
    });
  };
  if (paymentDetails.isLoading || result.isLoading) {
    return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null);
  }
  if (result.error || !consumerCode) {
    return /*#__PURE__*/React__default.createElement("div", {
      style: {
        height: "150px"
      }
    }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Card, {
      style: {
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        height: "100%"
      }
    }, t("CS_PT_NO_PROPERTIES_FOUND")));
  }
  var payment = {};
  paymentDetails === null || paymentDetails === void 0 ? void 0 : (_paymentDetails$data = paymentDetails.data) === null || _paymentDetails$data === void 0 ? void 0 : (_paymentDetails$data$ = _paymentDetails$data.Bill) === null || _paymentDetails$data$ === void 0 ? void 0 : _paymentDetails$data$.forEach(function (element) {
    if (element !== null && element !== void 0 && element.consumerCode) {
      payment[element === null || element === void 0 ? void 0 : element.consumerCode] = {
        total_due: element === null || element === void 0 ? void 0 : element.totalAmount,
        bil_due__date: new Date(element === null || element === void 0 ? void 0 : element.billDate).toDateString()
      };
    }
  });
  var arr = isMutation ? result === null || result === void 0 ? void 0 : (_result$data3 = result.data) === null || _result$data3 === void 0 ? void 0 : (_result$data3$Propert = _result$data3.Properties) === null || _result$data3$Propert === void 0 ? void 0 : _result$data3$Propert.filter(function (e) {
    return e.status === "ACTIVE";
  }) : result === null || result === void 0 ? void 0 : (_result$data4 = result.data) === null || _result$data4 === void 0 ? void 0 : _result$data4.Properties;
  var searchResults = arr === null || arr === void 0 ? void 0 : arr.map(function (property) {
    var _, _addr$locality, _payment$property$pro, _payment$property$pro2, _2;
    var addr = (property === null || property === void 0 ? void 0 : property.address) || {};
    return {
      property_id: property === null || property === void 0 ? void 0 : property.propertyId,
      owner_name: (_ = ((property === null || property === void 0 ? void 0 : property.owners) || [])[0]) === null || _ === void 0 ? void 0 : _.name,
      property_address: [addr.doorNo || "", addr.buildingName || "", addr.street || "", ((_addr$locality = addr.locality) === null || _addr$locality === void 0 ? void 0 : _addr$locality.name) || "", addr.city || ""].filter(function (a) {
        return a;
      }).join(", "),
      total_due: ((_payment$property$pro = payment[property === null || property === void 0 ? void 0 : property.propertyId]) === null || _payment$property$pro === void 0 ? void 0 : _payment$property$pro.total_due) || 0,
      bil_due__date: ((_payment$property$pro2 = payment[property === null || property === void 0 ? void 0 : property.propertyId]) === null || _payment$property$pro2 === void 0 ? void 0 : _payment$property$pro2.bil_due__date) || t("N/A"),
      status: property.status,
      owner_mobile: (_2 = ((property === null || property === void 0 ? void 0 : property.owners) || [])[0]) === null || _2 === void 0 ? void 0 : _2.mobileNumber
    };
  });
  var getUserType = function getUserType() {
    return Digit.UserService.getType();
  };
  var getFromLocation = function getFromLocation(state, searchParams) {
    return (state === null || state === void 0 ? void 0 : state.from) || (searchParams === null || searchParams === void 0 ? void 0 : searchParams.from) || DEFAULT_REDIRECT_URL;
  };
  var sendOtpToUser = function sendOtpToUser(record) {
    try {
      return Promise.resolve(function () {
        if (onSelect) {
          onSelect('cptId', {
            id: record.property_id
          });
        } else {
          var data = {
            mobileNumber: record === null || record === void 0 ? void 0 : record.owner_mobile,
            tenantId: stateCode,
            userType: getUserType()
          };
          return Promise.resolve(sendOtp({
            otp: _extends({}, data, TYPE_LOGIN$1)
          })).then(function (_ref2) {
            var res = _ref2[0],
              err = _ref2[1];
            if (!err) {
              var redirectUrl = '/digit-ui/citizen/commonPt/property/link-success/' + record.property_id;
              if (redirectToUrl) {
                redirectUrl = redirectToUrl + '?propertyId=' + record.property_id + '&tenantId=' + tenantId;
              }
              history.replace("/digit-ui/citizen/commonPt/property/citizen-otp", {
                from: getFromLocation(location.state, searchParams),
                mobileNumber: record.owner_mobile,
                redirectBackTo: redirectUrl
              });
            } else {
              history.push("/digit-ui/citizen/", {
                from: getFromLocation(location.state, searchParams),
                data: data
              });
            }
          });
        }
      }());
    } catch (e) {
      return Promise.reject(e);
    }
  };
  var sendOtp = function sendOtp(data) {
    return Promise.resolve(_catch(function () {
      return Promise.resolve(Digit.UserService.sendOtp(data, stateCode)).then(function (res) {
        return [res, null];
      });
    }, function (err) {
      return [null, err];
    }));
  };
  return /*#__PURE__*/React__default.createElement("div", {
    className: "static",
    style: {
      marginTop: "16px"
    }
  }, /*#__PURE__*/React__default.createElement("div", {
    className: "static-wrapper"
  }, header && /*#__PURE__*/React__default.createElement(digitUiReactComponents.Header, {
    style: {
      marginLeft: "8px"
    }
  }, t(header), " (", searchResults === null || searchResults === void 0 ? void 0 : searchResults.length, ")"), /*#__PURE__*/React__default.createElement(digitUiReactComponents.ResponseComposer, {
    data: searchResults,
    template: template,
    actionButtonLabel: actionButtonLabel,
    onSubmit: sendOtpToUser
  })), modalData ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.Modal, {
    hideSubmit: true,
    isDisabled: false,
    popupStyles: {
      width: "319px",
      height: "250px",
      margin: "auto"
    },
    formId: "modal-action"
  }, /*#__PURE__*/React__default.createElement("div", {
    ref: modalRef
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.KeyNote, {
    keyValue: t("PT_AMOUNT_DUE"),
    note: "\u20B9 " + (modalData === null || modalData === void 0 ? void 0 : (_modalData$total_due = modalData.total_due) === null || _modalData$total_due === void 0 ? void 0 : _modalData$total_due.toLocaleString("en-IN")),
    noteStyle: {
      fontSize: "24px",
      fontWeight: "bold"
    }
  }), /*#__PURE__*/React__default.createElement("p", null, t("PT_YOU_HAVE") + " " + "₹" + " " + (modalData === null || modalData === void 0 ? void 0 : modalData.total_due.toLocaleString("en-IN")) + " " + t("PT_PENDING_AMOUNT") + " " + t("PT_INORDER_TO_TRANSFER")), /*#__PURE__*/React__default.createElement(digitUiReactComponents.SubmitBar, {
    submit: false,
    onSubmit: function onSubmit() {
      return proceedToPay(modalData);
    },
    style: {
      marginTop: "14px",
      width: "100%"
    },
    label: t("PT_PROCEED_PAYMENT")
  }))) : null);
};
PropertySearchResults.propTypes = {
  template: propTypes.any,
  header: propTypes.string,
  actionButtonLabel: propTypes.string
};
PropertySearchResults.defaultProps = {
  template: [],
  header: null,
  actionButtonLabel: null
};

var loginSteps = [{
  texts: {
    header: "CS_LOGIN_PROVIDE_MOBILE_NUMBER",
    cardText: "CS_LOGIN_TEXT",
    nextText: "CS_COMMONS_NEXT",
    submitBarLabel: "CS_COMMONS_NEXT"
  },
  inputs: [{
    label: "CORE_COMMON_MOBILE_NUMBER",
    type: "text",
    name: "mobileNumber",
    error: "ERR_HRMS_INVALID_MOB_NO",
    validation: {
      required: true,
      minLength: 10,
      maxLength: 10
    }
  }]
}, {
  texts: {
    header: "CS_LOGIN_OTP",
    cardText: "CS_LOGIN_OTP_TEXT",
    nextText: "CS_COMMONS_NEXT",
    submitBarLabel: "CS_COMMONS_NEXT"
  }
}, {
  texts: {
    header: "CS_LOGIN_PROVIDE_NAME",
    cardText: "CS_LOGIN_NAME_TEXT",
    nextText: "CS_COMMONS_NEXT",
    submitBarLabel: "CS_COMMONS_NEXT"
  },
  inputs: [{
    label: "CORE_COMMON_NAME",
    type: "text",
    name: "name",
    error: "CORE_COMMON_NAME_VALIDMSG",
    validation: {
      required: true,
      minLength: 1,
      pattern: /^[^{0-9}^\$\"<>?\\\\~!@#$%^()+={}\[\]*,/_:;“”‘’]{1,50}$/i
    }
  }]
}];

var SearchResultsComponent = function SearchResultsComponent(props) {
  var propConfig = props.config,
    onSelect = props.onSelect,
    clearParams = props.clearParams,
    formData = props.formData,
    stateCode = props.stateCode;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var _useRouteMatch = reactRouterDom.useRouteMatch(),
    path = _useRouteMatch.path;
  var search = reactRouterDom.useLocation().search;
  var redirectToUrl = new URLSearchParams(search).get('redirectToUrl');

  var config = config$1;
  var params = React.useMemo(function () {
    var _config$map;
    return config === null || config === void 0 ? void 0 : (_config$map = config.map) === null || _config$map === void 0 ? void 0 : _config$map.call(config, function (step) {
      var texts = {};
      for (var key in step.texts) {
        texts[key] = t(step.texts[key]);
      }
      return _extends({}, step, {
        texts: texts
      });
    });
  }, [config]);
  return /*#__PURE__*/React__default.createElement(reactRouterDom.Switch, null, /*#__PURE__*/React__default.createElement(reactRouterDom.Route, {
    path: "" + path,
    exact: true
  }, /*#__PURE__*/React__default.createElement(PropertySearchResults, {
    template: params[0].labels,
    header: params[0].texts.header,
    actionButtonLabel: params[0].texts.actionButtonLabel,
    t: t,
    isMutation: (propConfig === null || propConfig === void 0 ? void 0 : propConfig.action) === "MUTATION",
    onSelect: onSelect,
    config: propConfig,
    clearParams: clearParams,
    stateCode: stateCode,
    redirectToUrl: redirectToUrl,
    searchQuery: formData === null || formData === void 0 ? void 0 : formData.cptSearchQuery
  })));
};

var PropertyLinkSuccess = function PropertyLinkSuccess(_ref) {
  var onSelect = _ref.onSelect;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var _useParams = reactRouterDom.useParams(),
    propertyIds = _useParams.propertyIds;
  var history = reactRouterDom.useHistory();
  var onSubmit = function onSubmit() {
    if (onSelect) {
      onSelect('propertyId', propertyIds);
    }
  };
  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertySearch({
      filters: {
        propertyIds: propertyIds
      }
    }, {
      filters: {
        propertyIds: propertyIds
      }
    }),
    data = _Digit$Hooks$pt$usePr.data;
  var _useState = React.useState(function () {
      return (data === null || data === void 0 ? void 0 : data.Properties[0]) || " ";
    }),
    property = _useState[0],
    setProperty = _useState[1];
  React.useEffect(function () {
    if (data) {
      setProperty(data === null || data === void 0 ? void 0 : data.Properties[0]);
    }
  }, [data]);
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Header, null, t("PT_PROPERTY_DETAILS")), /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Card, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.StatusTable, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
    label: t("PT_PROPERTY_PTUID"),
    text: "" + (property.propertyId || t("CS_NA")),
    textStyle: {
      whiteSpace: "pre"
    }
  })), onSelect ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.SubmitBar, {
    submit: false,
    label: t("CS_COMMONS_NEXT"),
    onSubmit: onSubmit
  }) : /*#__PURE__*/React__default.createElement(digitUiReactComponents.SubmitBar, {
    submit: false,
    label: t("PT_PROPERTY_CREATE"),
    onSubmit: function onSubmit() {
      return history.push('/digit-ui/citizen/commonPt/property/new-application');
    }
  }))));
};

function useInterval(callback, delay) {
  var savedCallback = React.useRef();
  React.useEffect(function () {
    savedCallback.current = callback;
  }, [callback]);
  React.useEffect(function () {
    function tick() {
      savedCallback.current();
    }
    if (delay !== null) {
      var timer = setInterval(tick, delay);
      return function () {
        return clearInterval(timer);
      };
    }
  }, [delay]);
}

var SelectOtp = function SelectOtp(_ref) {
  var config = _ref.config,
    otp = _ref.otp,
    onOtpChange = _ref.onOtpChange,
    onResend = _ref.onResend,
    onSelect = _ref.onSelect,
    t = _ref.t,
    error = _ref.error,
    _ref$userType = _ref.userType,
    userType = _ref$userType === void 0 ? "citizen" : _ref$userType;
  var _useState = React.useState(30),
    timeLeft = _useState[0],
    setTimeLeft = _useState[1];
  useInterval(function () {
    setTimeLeft(timeLeft - 1);
  }, timeLeft > 0 ? 1000 : null);
  var handleResendOtp = function handleResendOtp() {
    onResend();
    setTimeLeft(2);
  };
  if (userType === "employee") {
    return /*#__PURE__*/React__default.createElement(React.Fragment, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.OTPInput, {
      length: 6,
      onChange: onOtpChange,
      value: otp
    }), timeLeft > 0 ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardText, null, t("CS_RESEND_ANOTHER_OTP") + " " + timeLeft + " " + t("CS_RESEND_SECONDS")) : /*#__PURE__*/React__default.createElement("p", {
      className: "card-text-button",
      onClick: handleResendOtp
    }, t("CS_RESEND_OTP")), !error && /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabelError, null, t("CS_INVALID_OTP")));
  }
  return /*#__PURE__*/React__default.createElement(digitUiReactComponents.FormStep, {
    onSelect: onSelect,
    config: config,
    t: t,
    isDisabled: (otp === null || otp === void 0 ? void 0 : otp.length) !== 6
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.OTPInput, {
    length: 6,
    onChange: onOtpChange,
    value: otp
  }), timeLeft > 0 ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardText, null, t("CS_RESEND_ANOTHER_OTP") + " " + timeLeft + " " + t("CS_RESEND_SECONDS")) : /*#__PURE__*/React__default.createElement("p", {
    className: "card-text-button",
    onClick: handleResendOtp
  }, t("CS_RESEND_OTP")), !error && /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabelError, null, t("CS_INVALID_OTP")));
};

var _excluded = ["ResponseInfo", "UserRequest"];
var CitizenOtp = function CitizenOtp(props) {
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var _useRouteMatch = reactRouterDom.useRouteMatch();
  var location = reactRouterDom.useLocation();
  var history = reactRouterDom.useHistory();
  var _useState = React.useState({
      mobileNumber: location.state.mobileNumber,
      otp: ''
    }),
    params1 = _useState[0],
    setParmas1 = _useState[1];
  var _useState2 = React.useState(true),
    isOtpValid = _useState2[0],
    setIsOtpValid = _useState2[1];
  var getUserType = function getUserType() {
    return Digit.UserService.getType();
  };

  var selectOtp = function selectOtp() {
    try {
      var _temp2 = _catch(function () {
        setIsOtpValid(true);
        var mobileNumber = params1.mobileNumber,
          otp = params1.otp,
          name = params1.name;
        var requestData = {
          username: mobileNumber,
          password: otp,
          tenantId: props.stateCode,
          userType: getUserType()
        };
        return Promise.resolve(Digit.UserService.authenticate(requestData)).then(function (_ref) {
          var _location$state;
          var ResponseInfo = _ref.ResponseInfo,
            info = _ref.UserRequest,
            tokens = _objectWithoutPropertiesLoose(_ref, _excluded);
          if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.redirectBackTo) {
            var _location$state2, _location$state3;
            history.replace((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.redirectBackTo, {
              data: (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.redirectData
            });
          } else {
            history.replace('digit-ui/citizen/');
          }
        });
      }, function () {
        setIsOtpValid(false);
      });
      return Promise.resolve(_temp2 && _temp2.then ? _temp2.then(function () {}) : void 0);
    } catch (e) {
      return Promise.reject(e);
    }
  };
  var resendOtp = function resendOtp() {
    try {
      var mobileNumber = params1.mobileNumber;
      var data = {
        mobileNumber: mobileNumber,
        tenantId: props.stateCode,
        userType: getUserType()
      };
      return Promise.resolve(sendOtp({
        otp: _extends({}, data, TYPE_LOGIN)
      })).then(function () {});
    } catch (e) {
      return Promise.reject(e);
    }
  };
  var stepItems = React.useMemo(function () {
    return loginSteps.map(function (step) {
      var texts = {};
      for (var key in step.texts) {
        texts[key] = t(step.texts[key]);
      }
      return _extends({}, step, {
        texts: texts
      });
    }, [loginSteps]);
  });
  var handleOtpChange = function handleOtpChange(otp) {
    setParmas1(_extends({}, params1, {
      otp: otp
    }));
  };
  return /*#__PURE__*/React__default.createElement(SelectOtp, {
    config: _extends({}, stepItems[1], {
      texts: _extends({}, stepItems[1].texts, {
        cardText: stepItems[1].texts.cardText + " " + (params1.mobileNumber || "")
      })
    }),
    onOtpChange: handleOtpChange,
    onResend: resendOtp,
    onSelect: selectOtp,
    otp: params1.otp,
    error: isOtpValid,
    t: t
  });
};

var configPTApproverApplication = function configPTApproverApplication(_ref) {
  var _action$assigneeRoles;
  var t = _ref.t,
    action = _ref.action,
    approvers = _ref.approvers,
    selectedApprover = _ref.selectedApprover,
    setSelectedApprover = _ref.setSelectedApprover,
    selectFile = _ref.selectFile,
    uploadedFile = _ref.uploadedFile,
    setUploadedFile = _ref.setUploadedFile,
    assigneeLabel = _ref.assigneeLabel,
    businessService = _ref.businessService;
  return {
    label: {
      heading: "WF_" + (action === null || action === void 0 ? void 0 : action.action) + "_APPLICATION",
      submit: "WF_" + businessService + "_" + (action === null || action === void 0 ? void 0 : action.action),
      cancel: "ES_PT_COMMON_CANCEL"
    },
    form: [{
      body: [{
        label: action.isTerminateState || (action === null || action === void 0 ? void 0 : action.action) === "SENDBACKTOCITIZEN" ? null : t(assigneeLabel || "WF_ROLE_" + ((_action$assigneeRoles = action.assigneeRoles) === null || _action$assigneeRoles === void 0 ? void 0 : _action$assigneeRoles[0])),
        type: "dropdown",
        populators: action.isTerminateState || (action === null || action === void 0 ? void 0 : action.action) === "SENDBACKTOCITIZEN" ? null : /*#__PURE__*/React__default.createElement(digitUiReactComponents.Dropdown, {
          option: approvers,
          autoComplete: "off",
          optionKey: "name",
          id: "fieldInspector",
          select: setSelectedApprover,
          selected: selectedApprover
        })
      }, {
        label: t("ES_PT_ACTION_COMMENTS"),
        type: "textarea",
        populators: {
          name: "comments"
        }
      }, {
        label: "" + t("ES_PT_ATTACH_FILE") + (action.docUploadRequired ? " *" : ""),
        populators: /*#__PURE__*/React__default.createElement(digitUiReactComponents.UploadFile, {
          id: "workflow-doc",
          onUpload: selectFile,
          onDelete: function onDelete() {
            setUploadedFile(null);
          },
          showHint: true,
          hintText: t("PT_ATTACH_RESTRICTIONS_SIZE"),
          message: uploadedFile ? "1 " + t("ES_PT_ACTION_FILEUPLOADED") : t("ES_PT_ACTION_NO_FILEUPLOADED")
        })
      }]
    }]
  };
};

var configPTAssessProperty = function configPTAssessProperty(_ref) {
  var t = _ref.t,
    action = _ref.action,
    financialYears = _ref.financialYears,
    selectedFinancialYear = _ref.selectedFinancialYear,
    setSelectedFinancialYear = _ref.setSelectedFinancialYear;
  return {
    label: {
      heading: "WF_" + action.action + "_APPLICATION",
      submit: "WF_PT.CREATE_" + action.action,
      cancel: "ES_PT_COMMON_CANCEL"
    },
    form: [{
      body: [{
        label: t("ES_PT_FINANCIAL_YEARS"),
        isMandatory: true,
        type: "radio",
        populators: /*#__PURE__*/React__default.createElement(digitUiReactComponents.RadioButtons, {
          options: financialYears,
          optionsKey: "name",
          onSelect: setSelectedFinancialYear,
          selectedOption: selectedFinancialYear
        })
      }]
    }]
  };
};

var configTLApproverApplication = function configTLApproverApplication(_ref) {
  var t = _ref.t,
    action = _ref.action,
    approvers = _ref.approvers,
    selectedApprover = _ref.selectedApprover,
    setSelectedApprover = _ref.setSelectedApprover,
    selectFile = _ref.selectFile,
    uploadedFile = _ref.uploadedFile,
    setUploadedFile = _ref.setUploadedFile,
    businessService = _ref.businessService;
  var checkCondtions = true;
  if ((action === null || action === void 0 ? void 0 : action.action) == "SENDBACKTOCITIZEN" || (action === null || action === void 0 ? void 0 : action.action) == "APPROVE") checkCondtions = false;
  if (action.isTerminateState) checkCondtions = false;
  return {
    label: {
      heading: "WF_" + (action === null || action === void 0 ? void 0 : action.action) + "_APPLICATION",
      submit: "WF_" + (businessService === null || businessService === void 0 ? void 0 : businessService.toUpperCase()) + "_" + (action === null || action === void 0 ? void 0 : action.action),
      cancel: "WF_EMPLOYEE_NEWTL_CANCEL"
    },
    form: [{
      body: [{
        label: !checkCondtions ? null : t("WF_ASSIGNEE_NAME_LABEL"),
        placeholder: !checkCondtions ? null : t("WF_ASSIGNEE_NAME_PLACEHOLDER"),
        type: "dropdown",
        populators: !checkCondtions ? null : /*#__PURE__*/React__default.createElement(digitUiReactComponents.Dropdown, {
          option: approvers,
          autoComplete: "off",
          optionKey: "name",
          id: "fieldInspector",
          select: setSelectedApprover,
          selected: selectedApprover
        })
      }, {
        label: t("WF_COMMON_COMMENTS"),
        type: "textarea",
        populators: {
          name: "comments"
        }
      }, {
        label: t("TL_APPROVAL_CHECKLIST_BUTTON_UP_FILE"),
        populators: /*#__PURE__*/React__default.createElement(digitUiReactComponents.UploadFile, {
          id: "workflow-doc"
          ,
          onUpload: selectFile,
          onDelete: function onDelete() {
            setUploadedFile(null);
          },
          message: uploadedFile ? "1 " + t("ES_PT_ACTION_FILEUPLOADED") : t("CS_ACTION_NO_FILEUPLOADED")
        })
      }
      ]
    }]
  };
};

var configBPAREGApproverApplication = function configBPAREGApproverApplication(_ref) {
  var t = _ref.t,
    action = _ref.action,
    approvers = _ref.approvers,
    selectedApprover = _ref.selectedApprover,
    setSelectedApprover = _ref.setSelectedApprover,
    selectFile = _ref.selectFile,
    uploadedFile = _ref.uploadedFile,
    setUploadedFile = _ref.setUploadedFile,
    businessService = _ref.businessService,
    error = _ref.error;
  var checkCondtions = true;
  if ((action === null || action === void 0 ? void 0 : action.action) == "SENDBACKTOCITIZEN") checkCondtions = false;
  if (action.isTerminateState) checkCondtions = false;
  return {
    label: {
      heading: "WF_" + (action === null || action === void 0 ? void 0 : action.action) + "_APPLICATION",
      submit: "WF_" + (businessService === null || businessService === void 0 ? void 0 : businessService.toUpperCase()) + "_" + (action === null || action === void 0 ? void 0 : action.action),
      cancel: "WF_EMPLOYEE_BPAREG_CANCEL"
    },
    form: [{
      body: [{
        label: !checkCondtions ? null : t("WF_ASSIGNEE_NAME_LABEL"),
        placeholder: !checkCondtions ? null : t("WF_ASSIGNEE_NAME_PLACEHOLDER"),
        type: "dropdown",
        populators: !checkCondtions ? null : /*#__PURE__*/React__default.createElement(digitUiReactComponents.Dropdown, {
          option: approvers,
          autoComplete: "off",
          optionKey: "name",
          id: "fieldInspector",
          select: setSelectedApprover,
          selected: selectedApprover
        })
      }, {
        label: t("WF_COMMON_COMMENTS"),
        type: "textarea",
        populators: {
          name: "comments"
        }
      }, {
        label: t("BPA_APPROVAL_CHECKLIST_BUTTON_UP_FILE"),
        populators: /*#__PURE__*/React__default.createElement(digitUiReactComponents.UploadFile, {
          id: "workflow-doc",
          onUpload: selectFile,
          onDelete: function onDelete() {
            setUploadedFile(null);
          },
          message: uploadedFile ? "1 " + t("ES_PT_ACTION_FILEUPLOADED") : t("CS_ACTION_NO_FILEUPLOADED"),
          accept: "image/*, .pdf, .png, .jpeg, .jpg",
          iserror: error
        })
      }]
    }]
  };
};

var configBPAApproverApplication = function configBPAApproverApplication(_ref) {
  var _action$assigneeRoles;
  var t = _ref.t,
    action = _ref.action,
    approvers = _ref.approvers,
    selectedApprover = _ref.selectedApprover,
    setSelectedApprover = _ref.setSelectedApprover,
    selectFile = _ref.selectFile,
    uploadedFile = _ref.uploadedFile,
    setUploadedFile = _ref.setUploadedFile,
    assigneeLabel = _ref.assigneeLabel,
    businessService = _ref.businessService,
    error = _ref.error;
  var isRejectOrRevocate = false;
  if ((action === null || action === void 0 ? void 0 : action.action) == "REVOCATE" || (action === null || action === void 0 ? void 0 : action.action) == "REJECT" || action.action == "SKIP_PAYMENT" || (action === null || action === void 0 ? void 0 : action.action) == "SEND_BACK_TO_CITIZEN" || (action === null || action === void 0 ? void 0 : action.action) == "APPROVE") {
    isRejectOrRevocate = true;
  }
  var isCommentRequired = false;
  if ((action === null || action === void 0 ? void 0 : action.action) == "REVOCATE" || (action === null || action === void 0 ? void 0 : action.action) == "REJECT") {
    isCommentRequired = true;
  }
  return {
    label: {
      heading: "WF_" + (action === null || action === void 0 ? void 0 : action.action) + "_APPLICATION",
      submit: "WF_" + businessService + "_" + (action === null || action === void 0 ? void 0 : action.action),
      cancel: "BPA_CITIZEN_CANCEL_BUTTON"
    },
    form: [{
      body: [{
        label: action.isTerminateState || isRejectOrRevocate ? null : t(assigneeLabel || "WF_ROLE_" + ((_action$assigneeRoles = action.assigneeRoles) === null || _action$assigneeRoles === void 0 ? void 0 : _action$assigneeRoles[0])),
        type: "dropdown",
        populators: action.isTerminateState || isRejectOrRevocate ? null : /*#__PURE__*/React__default.createElement(digitUiReactComponents.Dropdown, {
          option: approvers,
          autoComplete: "off",
          optionKey: "name",
          id: "fieldInspector",
          select: setSelectedApprover,
          selected: selectedApprover
        })
      }, {
        label: t("WF_COMMON_COMMENTS"),
        type: "textarea",
        isMandatory: isCommentRequired,
        populators: {
          name: "comments"
        }
      }, {
        label: "" + t("WF_APPROVAL_UPLOAD_HEAD"),
        populators: /*#__PURE__*/React__default.createElement(digitUiReactComponents.UploadFile, {
          id: "workflow-doc",
          onUpload: selectFile,
          onDelete: function onDelete() {
            setUploadedFile(null);
          },
          message: uploadedFile ? "1 " + t("ES_PT_ACTION_FILEUPLOADED") : t("CS_ACTION_NO_FILEUPLOADED"),
          accept: "image/*, .pdf, .png, .jpeg, .jpg",
          iserror: error
        })
      }]
    }]
  };
};

var configNOCApproverApplication = function configNOCApproverApplication(_ref) {
  var _action$assigneeRoles;
  var t = _ref.t,
    action = _ref.action,
    approvers = _ref.approvers,
    selectedApprover = _ref.selectedApprover,
    setSelectedApprover = _ref.setSelectedApprover,
    selectFile = _ref.selectFile,
    uploadedFile = _ref.uploadedFile,
    setUploadedFile = _ref.setUploadedFile,
    assigneeLabel = _ref.assigneeLabel,
    businessService = _ref.businessService,
    error = _ref.error;
  var isCommentRequired = false;
  if ((action === null || action === void 0 ? void 0 : action.action) == "REVOCATE" || (action === null || action === void 0 ? void 0 : action.action) == "REJECT") {
    isCommentRequired = true;
  }
  var isRejectOrRevocate = false;
  if ((action === null || action === void 0 ? void 0 : action.action) == "APPROVE" || (action === null || action === void 0 ? void 0 : action.action) == "REJECT" || action.action == "AUTO_APPROVE" || action.action == "AUTO_REJECT") {
    isRejectOrRevocate = true;
  }
  return {
    label: {
      heading: "WF_" + (action === null || action === void 0 ? void 0 : action.action) + "_APPLICATION",
      submit: "WF_" + businessService + "_" + (action === null || action === void 0 ? void 0 : action.action),
      cancel: "CORE_LOGOUTPOPUP_CANCEL"
    },
    form: [{
      body: [{
        label: action.isTerminateState || isRejectOrRevocate ? null : t(assigneeLabel || "WF_ROLE_" + ((_action$assigneeRoles = action.assigneeRoles) === null || _action$assigneeRoles === void 0 ? void 0 : _action$assigneeRoles[0])),
        type: "dropdown",
        populators: action.isTerminateState || isRejectOrRevocate ? null : /*#__PURE__*/React__default.createElement(digitUiReactComponents.Dropdown, {
          option: approvers,
          autoComplete: "off",
          optionKey: "name",
          id: "fieldInspector",
          select: setSelectedApprover,
          selected: selectedApprover
        })
      }, {
        label: t("WF_COMMON_COMMENTS"),
        type: "textarea",
        isMandatory: isCommentRequired,
        populators: {
          name: "comments"
        }
      }, {
        label: "" + t("WF_APPROVAL_UPLOAD_HEAD"),
        populators: /*#__PURE__*/React__default.createElement(digitUiReactComponents.UploadFile, {
          id: "workflow-doc",
          onUpload: selectFile,
          onDelete: function onDelete() {
            setUploadedFile(null);
          },
          showHint: true,
          message: uploadedFile ? "1 " + t("ES_PT_ACTION_FILEUPLOADED") : t("CS_ACTION_NO_FILEUPLOADED"),
          accept: "image/*, .pdf, .png, .jpeg, .jpg",
          iserror: error
        })
      }]
    }]
  };
};

var Heading = function Heading(props) {
  return /*#__PURE__*/React__default.createElement("h1", {
    className: "heading-m"
  }, props.label);
};
var Close = function Close() {
  return /*#__PURE__*/React__default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "#FFFFFF"
  }, /*#__PURE__*/React__default.createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
  }));
};
var CloseBtn = function CloseBtn(props) {
  return /*#__PURE__*/React__default.createElement("div", {
    className: "icon-bg-secondary",
    onClick: props.onClick
  }, /*#__PURE__*/React__default.createElement(Close, null));
};
var ActionModal = function ActionModal(_ref) {
  var _action$assigneeRoles, _action$assigneeRoles2;
  var t = _ref.t,
    action = _ref.action,
    tenantId = _ref.tenantId,
    closeModal = _ref.closeModal,
    submitAction = _ref.submitAction,
    applicationData = _ref.applicationData,
    businessService = _ref.businessService,
    moduleCode = _ref.moduleCode;
  var _Digit$Hooks$useEmplo = Digit.Hooks.useEmployeeSearch(tenantId, {
      roles: action === null || action === void 0 ? void 0 : (_action$assigneeRoles = action.assigneeRoles) === null || _action$assigneeRoles === void 0 ? void 0 : (_action$assigneeRoles2 = _action$assigneeRoles.map) === null || _action$assigneeRoles2 === void 0 ? void 0 : _action$assigneeRoles2.call(_action$assigneeRoles, function (e) {
        return {
          code: e
        };
      }),
      isActive: true
    }, {
      enabled: !(action !== null && action !== void 0 && action.isTerminateState)
    }),
    approverData = _Digit$Hooks$useEmplo.data,
    PTALoading = _Digit$Hooks$useEmplo.isLoading;
  var _Digit$Hooks$pt$useMD = Digit.Hooks.pt.useMDMS(tenantId, businessService, "FINANCIAL_YEARLS", {}, {
      details: {
        tenantId: Digit.ULBService.getStateId(),
        moduleDetails: [{
          moduleName: "egf-master",
          masterDetails: [{
            name: "FinancialYear",
            filter: "[?(@.module == 'PT')]"
          }]
        }]
      }
    }),
    financialYearsLoading = _Digit$Hooks$pt$useMD.isLoading,
    financialYearsData = _Digit$Hooks$pt$useMD.data;
  var _useState = React.useState({}),
    config = _useState[0],
    setConfig = _useState[1];
  var _useState2 = React.useState({}),
    defaultValues = _useState2[0];
  var _useState3 = React.useState([]),
    approvers = _useState3[0],
    setApprovers = _useState3[1];
  var _useState4 = React.useState(null),
    selectedApprover = _useState4[0],
    setSelectedApprover = _useState4[1];
  var _useState5 = React.useState(null),
    file = _useState5[0],
    setFile = _useState5[1];
  var _useState6 = React.useState(null),
    uploadedFile = _useState6[0],
    setUploadedFile = _useState6[1];
  var _useState7 = React.useState(null),
    setError = _useState7[1];
  var _useState8 = React.useState([]),
    financialYears = _useState8[0],
    setFinancialYears = _useState8[1];
  var _useState9 = React.useState(null),
    selectedFinancialYear = _useState9[0],
    setSelectedFinancialYear = _useState9[1];
  var _useState10 = React.useState(false);
  React.useEffect(function () {
    if (financialYearsData && financialYearsData["egf-master"]) {
      var _financialYearsData$e;
      setFinancialYears((_financialYearsData$e = financialYearsData["egf-master"]) === null || _financialYearsData$e === void 0 ? void 0 : _financialYearsData$e["FinancialYear"]);
    }
  }, [financialYearsData]);
  React.useEffect(function () {
    var _approverData$Employe;
    setApprovers(approverData === null || approverData === void 0 ? void 0 : (_approverData$Employe = approverData.Employees) === null || _approverData$Employe === void 0 ? void 0 : _approverData$Employe.map(function (employee) {
      var _employee$user;
      return {
        uuid: employee === null || employee === void 0 ? void 0 : employee.uuid,
        name: employee === null || employee === void 0 ? void 0 : (_employee$user = employee.user) === null || _employee$user === void 0 ? void 0 : _employee$user.name
      };
    }));
  }, [approverData]);
  function selectFile(e) {
    setFile(e.target.files[0]);
  }
  React.useEffect(function () {
    (function () {
      try {
        setError(null);
        var _temp4 = function () {
          if (file) {
            var _temp5 = function () {
              if (file.size >= 5242880) {
                setError(t("CS_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
              } else {
                var _temp6 = _catch(function () {
                  return Promise.resolve(Digit.UploadServices.Filestorage("PT", file, Digit.ULBService.getStateId())).then(function (response) {
                    var _response$data, _response$data$files;
                    if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
                      var _response$data2, _response$data2$files;
                      setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
                    } else {
                      setError(t("CS_FILE_UPLOAD_ERROR"));
                    }
                  });
                }, function () {
                  setError(t("CS_FILE_UPLOAD_ERROR"));
                });
                if (_temp6 && _temp6.then) return _temp6.then(function () {});
              }
            }();
            if (_temp5 && _temp5.then) return _temp5.then(function () {});
          }
        }();
        return _temp4 && _temp4.then ? _temp4.then(function () {}) : void 0;
      } catch (e) {
        Promise.reject(e);
      }
    })();
  }, [file]);
  function submit(data) {
    if (!(action !== null && action !== void 0 && action.showFinancialYearsModal)) {
      var workflow = {
        action: action === null || action === void 0 ? void 0 : action.action,
        comments: data === null || data === void 0 ? void 0 : data.comments,
        businessService: businessService,
        moduleName: moduleCode
      };
      workflow["assignes"] = action !== null && action !== void 0 && action.isTerminateState || !selectedApprover ? [] : [selectedApprover];
      if (uploadedFile) workflow["documents"] = [{
        documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
        fileName: file === null || file === void 0 ? void 0 : file.name,
        fileStoreId: uploadedFile
      }];
      submitAction({
        Property: _extends({}, applicationData, {
          workflow: workflow
        })
      });
    } else {
      submitAction({
        customFunctionToExecute: action === null || action === void 0 ? void 0 : action.customFunctionToExecute,
        Assessment: {
          financialYear: selectedFinancialYear === null || selectedFinancialYear === void 0 ? void 0 : selectedFinancialYear.name,
          propertyId: applicationData === null || applicationData === void 0 ? void 0 : applicationData.propertyId,
          tenantId: tenantId,
          source: applicationData === null || applicationData === void 0 ? void 0 : applicationData.source,
          channel: applicationData === null || applicationData === void 0 ? void 0 : applicationData.channel,
          assessmentDate: Date.now()
        }
      });
    }
  }
  React.useEffect(function () {
    if (action) {
      if (action !== null && action !== void 0 && action.showFinancialYearsModal) {
        setConfig(configPTAssessProperty({
          t: t,
          action: action,
          financialYears: financialYears,
          selectedFinancialYear: selectedFinancialYear,
          setSelectedFinancialYear: setSelectedFinancialYear
        }));
      } else {
        setConfig(configPTApproverApplication({
          t: t,
          action: action,
          approvers: approvers,
          selectedApprover: selectedApprover,
          setSelectedApprover: setSelectedApprover,
          selectFile: selectFile,
          uploadedFile: uploadedFile,
          setUploadedFile: setUploadedFile,
          businessService: businessService
        }));
      }
    }
  }, [action, approvers, financialYears, selectedFinancialYear, uploadedFile]);
  return action && config.form ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.Modal, {
    headerBarMain: /*#__PURE__*/React__default.createElement(Heading, {
      label: t(config.label.heading)
    }),
    headerBarEnd: /*#__PURE__*/React__default.createElement(CloseBtn, {
      onClick: closeModal
    }),
    actionCancelLabel: t(config.label.cancel),
    actionCancelOnSubmit: closeModal,
    actionSaveLabel: t(config.label.submit),
    actionSaveOnSubmit: function actionSaveOnSubmit() {},
    isDisabled: !action.showFinancialYearsModal ? PTALoading || (action === null || action === void 0 ? void 0 : action.docUploadRequired) && !uploadedFile : !selectedFinancialYear,
    formId: "modal-action"
  }, financialYearsLoading ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null) : /*#__PURE__*/React__default.createElement(digitUiReactComponents.FormComposer, {
    config: config.form,
    noBoxShadow: true,
    inline: true,
    childrenAtTheBottom: true,
    onSubmit: submit,
    defaultValues: defaultValues,
    formId: "modal-action"
  })) : /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null);
};

var Heading$1 = function Heading(props) {
  return /*#__PURE__*/React__default.createElement("h1", {
    className: "heading-m"
  }, props.label);
};
var Close$1 = function Close() {
  return /*#__PURE__*/React__default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "#FFFFFF"
  }, /*#__PURE__*/React__default.createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
  }));
};
var CloseBtn$1 = function CloseBtn(props) {
  return /*#__PURE__*/React__default.createElement("div", {
    className: "icon-bg-secondary",
    onClick: props.onClick
  }, /*#__PURE__*/React__default.createElement(Close$1, null));
};
var ActionModal$1 = function ActionModal(_ref) {
  var _action$assigneeRoles, _action$assigneeRoles2;
  var t = _ref.t,
    action = _ref.action,
    tenantId = _ref.tenantId,
    closeModal = _ref.closeModal,
    submitAction = _ref.submitAction,
    applicationData = _ref.applicationData,
    businessService = _ref.businessService;
  var _Digit$Hooks$useEmplo = Digit.Hooks.useEmployeeSearch(tenantId, {
      roles: action === null || action === void 0 ? void 0 : (_action$assigneeRoles = action.assigneeRoles) === null || _action$assigneeRoles === void 0 ? void 0 : (_action$assigneeRoles2 = _action$assigneeRoles.map) === null || _action$assigneeRoles2 === void 0 ? void 0 : _action$assigneeRoles2.call(_action$assigneeRoles, function (e) {
        return {
          code: e
        };
      }),
      isActive: true
    }, {
      enabled: !(action !== null && action !== void 0 && action.isTerminateState)
    }),
    approverData = _Digit$Hooks$useEmplo.data;
  var _Digit$Hooks$pt$useMD = Digit.Hooks.pt.useMDMS(tenantId, businessService, "FINANCIAL_YEARLS", {}, {
      details: {
        tenantId: Digit.ULBService.getStateId(),
        moduleDetails: [{
          moduleName: "egf-master",
          masterDetails: [{
            name: "FinancialYear",
            filter: "[?(@.module == 'TL')]"
          }]
        }]
      }
    }),
    financialYearsLoading = _Digit$Hooks$pt$useMD.isLoading,
    financialYearsData = _Digit$Hooks$pt$useMD.data;
  var _useState = React.useState({}),
    config = _useState[0],
    setConfig = _useState[1];
  var _useState2 = React.useState({}),
    defaultValues = _useState2[0];
  var _useState3 = React.useState([]),
    approvers = _useState3[0],
    setApprovers = _useState3[1];
  var _useState4 = React.useState({}),
    selectedApprover = _useState4[0],
    setSelectedApprover = _useState4[1];
  var _useState5 = React.useState(null),
    file = _useState5[0],
    setFile = _useState5[1];
  var _useState6 = React.useState(null),
    uploadedFile = _useState6[0],
    setUploadedFile = _useState6[1];
  var _useState7 = React.useState(null),
    setError = _useState7[1];
  var _useState8 = React.useState([]),
    financialYears = _useState8[0],
    setFinancialYears = _useState8[1];
  var _useState9 = React.useState(null),
    selectedFinancialYear = _useState9[0];
  React.useEffect(function () {
    if (financialYearsData && financialYearsData["egf-master"]) {
      var _financialYearsData$e;
      setFinancialYears((_financialYearsData$e = financialYearsData["egf-master"]) === null || _financialYearsData$e === void 0 ? void 0 : _financialYearsData$e["FinancialYear"]);
    }
  }, [financialYearsData]);
  React.useEffect(function () {
    var _approverData$Employe;
    setApprovers(approverData === null || approverData === void 0 ? void 0 : (_approverData$Employe = approverData.Employees) === null || _approverData$Employe === void 0 ? void 0 : _approverData$Employe.map(function (employee) {
      var _employee$user;
      return {
        uuid: employee === null || employee === void 0 ? void 0 : employee.uuid,
        name: employee === null || employee === void 0 ? void 0 : (_employee$user = employee.user) === null || _employee$user === void 0 ? void 0 : _employee$user.name
      };
    }));
  }, [approverData]);
  function selectFile(e) {
    setFile(e.target.files[0]);
  }
  React.useEffect(function () {
    (function () {
      try {
        setError(null);
        var _temp4 = function () {
          if (file) {
            var _temp5 = function () {
              if (file.size >= 5242880) {
                setError(t("CS_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
              } else {
                var _temp6 = _catch(function () {
                  return Promise.resolve(Digit.UploadServices.Filestorage("PT", file, Digit.ULBService.getStateId())).then(function (response) {
                    var _response$data, _response$data$files;
                    if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
                      var _response$data2, _response$data2$files;
                      setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
                    } else {
                      setError(t("CS_FILE_UPLOAD_ERROR"));
                    }
                  });
                }, function () {
                  setError(t("CS_FILE_UPLOAD_ERROR"));
                });
                if (_temp6 && _temp6.then) return _temp6.then(function () {});
              }
            }();
            if (_temp5 && _temp5.then) return _temp5.then(function () {});
          }
        }();
        return _temp4 && _temp4.then ? _temp4.then(function () {}) : void 0;
      } catch (e) {
        Promise.reject(e);
      }
    })();
  }, [file]);
  function submit(data) {
    applicationData = _extends({}, applicationData, {
      action: action === null || action === void 0 ? void 0 : action.action,
      comment: data === null || data === void 0 ? void 0 : data.comments,
      assignee: !(selectedApprover !== null && selectedApprover !== void 0 && selectedApprover.uuid) ? null : [selectedApprover === null || selectedApprover === void 0 ? void 0 : selectedApprover.uuid],
      wfDocuments: uploadedFile ? [{
        documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
        fileName: file === null || file === void 0 ? void 0 : file.name,
        fileStoreId: uploadedFile
      }] : null
    });
    submitAction({
      Licenses: [applicationData]
    });
  }
  React.useEffect(function () {
    if (action) {
      setConfig(configTLApproverApplication({
        t: t,
        action: action,
        approvers: approvers,
        selectedApprover: selectedApprover,
        setSelectedApprover: setSelectedApprover,
        selectFile: selectFile,
        uploadedFile: uploadedFile,
        setUploadedFile: setUploadedFile,
        businessService: businessService
      }));
    }
  }, [action, approvers, financialYears, selectedFinancialYear, uploadedFile]);
  return action && config.form ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.Modal, {
    headerBarMain: /*#__PURE__*/React__default.createElement(Heading$1, {
      label: t(config.label.heading)
    }),
    headerBarEnd: /*#__PURE__*/React__default.createElement(CloseBtn$1, {
      onClick: closeModal
    }),
    actionCancelLabel: t(config.label.cancel),
    actionCancelOnSubmit: closeModal,
    actionSaveLabel: t(config.label.submit),
    actionSaveOnSubmit: function actionSaveOnSubmit() {}
    ,
    formId: "modal-action"
  }, financialYearsLoading ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null) : /*#__PURE__*/React__default.createElement(digitUiReactComponents.FormComposer, {
    config: config.form,
    noBoxShadow: true,
    inline: true,
    childrenAtTheBottom: true,
    onSubmit: submit,
    defaultValues: defaultValues,
    formId: "modal-action"
  })) : /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null);
};

var Heading$2 = function Heading(props) {
  return /*#__PURE__*/React__default.createElement("h1", {
    style: {
      marginLeft: "22px"
    },
    className: "heading-m BPAheading-m"
  }, props.label);
};
var Close$2 = function Close() {
  return /*#__PURE__*/React__default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "#FFFFFF"
  }, /*#__PURE__*/React__default.createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
  }));
};
var CloseBtn$2 = function CloseBtn(props) {
  return /*#__PURE__*/React__default.createElement("div", {
    className: "icon-bg-secondary",
    onClick: props.onClick
  }, /*#__PURE__*/React__default.createElement(Close$2, null));
};
var ActionModal$2 = function ActionModal(_ref) {
  var _action$assigneeRoles, _action$assigneeRoles2;
  var t = _ref.t,
    action = _ref.action,
    tenantId = _ref.tenantId,
    closeModal = _ref.closeModal,
    submitAction = _ref.submitAction,
    applicationData = _ref.applicationData,
    businessService = _ref.businessService;
  var _Digit$Hooks$useEmplo = Digit.Hooks.useEmployeeSearch(tenantId, {
      roles: action === null || action === void 0 ? void 0 : (_action$assigneeRoles = action.assigneeRoles) === null || _action$assigneeRoles === void 0 ? void 0 : (_action$assigneeRoles2 = _action$assigneeRoles.map) === null || _action$assigneeRoles2 === void 0 ? void 0 : _action$assigneeRoles2.call(_action$assigneeRoles, function (e) {
        return {
          code: e
        };
      }),
      isActive: true
    }, {
      enabled: !(action !== null && action !== void 0 && action.isTerminateState)
    }),
    approverData = _Digit$Hooks$useEmplo.data,
    PTALoading = _Digit$Hooks$useEmplo.isLoading;
  var _useState = React.useState({}),
    config = _useState[0],
    setConfig = _useState[1];
  var _useState2 = React.useState({}),
    defaultValues = _useState2[0];
  var _useState3 = React.useState([]),
    approvers = _useState3[0],
    setApprovers = _useState3[1];
  var _useState4 = React.useState({}),
    selectedApprover = _useState4[0],
    setSelectedApprover = _useState4[1];
  var _useState5 = React.useState(null),
    file = _useState5[0],
    setFile = _useState5[1];
  var _useState6 = React.useState(null),
    uploadedFile = _useState6[0],
    setUploadedFile = _useState6[1];
  var _useState7 = React.useState(null),
    error = _useState7[0],
    setError = _useState7[1];
  var mobileView = Digit.Utils.browser.isMobile() ? true : false;
  React.useEffect(function () {
    var _approverData$Employe;
    setApprovers(approverData === null || approverData === void 0 ? void 0 : (_approverData$Employe = approverData.Employees) === null || _approverData$Employe === void 0 ? void 0 : _approverData$Employe.map(function (employee) {
      var _employee$user;
      return {
        uuid: employee === null || employee === void 0 ? void 0 : employee.uuid,
        name: employee === null || employee === void 0 ? void 0 : (_employee$user = employee.user) === null || _employee$user === void 0 ? void 0 : _employee$user.name
      };
    }));
  }, [approverData]);
  function selectFile(e) {
    setFile(e.target.files[0]);
  }
  React.useEffect(function () {
    (function () {
      try {
        setError(null);
        var _temp5 = function () {
          if (file) {
            var allowedFileTypesRegex = /(.*?)(jpg|jpeg|png|image|pdf)$/i;
            var _temp6 = function () {
              if (file.size >= 5242880) {
                setError(t("CS_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
              } else {
                var _temp7 = function () {
                  if (file !== null && file !== void 0 && file.type && !allowedFileTypesRegex.test(file === null || file === void 0 ? void 0 : file.type)) {
                    setError(t("NOT_SUPPORTED_FILE_TYPE"));
                  } else {
                    var _temp8 = _catch(function () {
                      return Promise.resolve(Digit.UploadServices.Filestorage("OBPS", file, Digit.ULBService.getStateId() || (tenantId === null || tenantId === void 0 ? void 0 : tenantId.split(".")[0]))).then(function (response) {
                        var _response$data, _response$data$files;
                        if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
                          var _response$data2, _response$data2$files;
                          setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
                        } else {
                          setError(t("CS_FILE_UPLOAD_ERROR"));
                        }
                      });
                    }, function () {
                      setError(t("CS_FILE_UPLOAD_ERROR"));
                    });
                    if (_temp8 && _temp8.then) return _temp8.then(function () {});
                  }
                }();
                if (_temp7 && _temp7.then) return _temp7.then(function () {});
              }
            }();
            if (_temp6 && _temp6.then) return _temp6.then(function () {});
          }
        }();
        return _temp5 && _temp5.then ? _temp5.then(function () {}) : void 0;
      } catch (e) {
        Promise.reject(e);
      }
    })();
  }, [file]);
  function submit(data) {
    applicationData = _extends({}, applicationData, {
      action: action === null || action === void 0 ? void 0 : action.action,
      comment: data === null || data === void 0 ? void 0 : data.comments,
      assignee: !(selectedApprover !== null && selectedApprover !== void 0 && selectedApprover.uuid) ? null : [selectedApprover === null || selectedApprover === void 0 ? void 0 : selectedApprover.uuid],
      wfDocuments: uploadedFile ? [{
        documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
        fileName: file === null || file === void 0 ? void 0 : file.name,
        fileStoreId: uploadedFile
      }] : null
    });
    submitAction({
      Licenses: [applicationData]
    }, false, {
      isStakeholder: true,
      bpa: false
    });
  }
  React.useEffect(function () {
    if (action) {
      setConfig(configBPAREGApproverApplication({
        t: t,
        action: action,
        approvers: approvers,
        selectedApprover: selectedApprover,
        setSelectedApprover: setSelectedApprover,
        selectFile: selectFile,
        uploadedFile: uploadedFile,
        setUploadedFile: setUploadedFile,
        businessService: businessService,
        error: error
      }));
    }
  }, [action, approvers, uploadedFile, error]);
  return action && config.form ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.Modal, {
    headerBarMain: /*#__PURE__*/React__default.createElement(Heading$2, {
      label: t(config.label.heading)
    }),
    headerBarEnd: /*#__PURE__*/React__default.createElement(CloseBtn$2, {
      onClick: closeModal
    }),
    actionCancelLabel: t(config.label.cancel),
    actionCancelOnSubmit: closeModal,
    actionSaveLabel: t(config.label.submit),
    actionSaveOnSubmit: function actionSaveOnSubmit() {},
    formId: "modal-action",
    isOBPSFlow: true,
    popupStyles: mobileView ? {
      width: "720px"
    } : {},
    style: !mobileView ? {
      height: "45px",
      width: "107px",
      paddingLeft: "0px",
      paddingRight: "0px"
    } : {
      height: "45px",
      width: "44%"
    },
    popupModuleMianStyles: mobileView ? {
      paddingLeft: "5px"
    } : {}
  }, PTALoading ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null) : /*#__PURE__*/React__default.createElement(digitUiReactComponents.FormComposer, {
    config: config.form,
    cardStyle: {
      marginLeft: "0px",
      marginRight: "0px",
      marginTop: "-25px"
    },
    className: "BPAemployeeCard",
    noBoxShadow: true,
    inline: true,
    childrenAtTheBottom: true,
    onSubmit: submit,
    defaultValues: defaultValues,
    formId: "modal-action"
  })) : /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null);
};

var Heading$3 = function Heading(props) {
  return /*#__PURE__*/React__default.createElement("h1", {
    style: {
      marginLeft: "22px"
    },
    className: "heading-m BPAheading-m"
  }, props.label);
};
var Close$3 = function Close() {
  return /*#__PURE__*/React__default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "#FFFFFF"
  }, /*#__PURE__*/React__default.createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
  }));
};
var CloseBtn$3 = function CloseBtn(props) {
  return /*#__PURE__*/React__default.createElement("div", {
    className: "icon-bg-secondary",
    onClick: props.onClick
  }, /*#__PURE__*/React__default.createElement(Close$3, null));
};
var ActionModal$3 = function ActionModal(_ref) {
  var _applicationData, _applicationData$land, _applicationData$land2, _applicationData2, _applicationData2$lan, _applicationData2$lan2, _workflowDetails$data, _workflowDetails$data2, _workflowDetails$data3, _workflowDetails$data4, _workflowDetails$data5, _workflowDetails$data6;
  var t = _ref.t,
    action = _ref.action,
    tenantId = _ref.tenantId,
    closeModal = _ref.closeModal,
    submitAction = _ref.submitAction,
    applicationDetails = _ref.applicationDetails,
    applicationData = _ref.applicationData,
    businessService = _ref.businessService,
    workflowDetails = _ref.workflowDetails;
  var mutation1 = Digit.Hooks.obps.useObpsAPI((_applicationData = applicationData) !== null && _applicationData !== void 0 && (_applicationData$land = _applicationData.landInfo) !== null && _applicationData$land !== void 0 && (_applicationData$land2 = _applicationData$land.address) !== null && _applicationData$land2 !== void 0 && _applicationData$land2.city ? (_applicationData2 = applicationData) === null || _applicationData2 === void 0 ? void 0 : (_applicationData2$lan = _applicationData2.landInfo) === null || _applicationData2$lan === void 0 ? void 0 : (_applicationData2$lan2 = _applicationData2$lan.address) === null || _applicationData2$lan2 === void 0 ? void 0 : _applicationData2$lan2.city : tenantId, false);
  var _Digit$Hooks$useEmplo = Digit.Hooks.useEmployeeSearch(tenantId, {
      roles: workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data = workflowDetails.data) === null || _workflowDetails$data === void 0 ? void 0 : (_workflowDetails$data2 = _workflowDetails$data.initialActionState) === null || _workflowDetails$data2 === void 0 ? void 0 : (_workflowDetails$data3 = _workflowDetails$data2.nextActions) === null || _workflowDetails$data3 === void 0 ? void 0 : (_workflowDetails$data4 = _workflowDetails$data3.filter(function (ele) {
        return (ele === null || ele === void 0 ? void 0 : ele.action) == (action === null || action === void 0 ? void 0 : action.action);
      })) === null || _workflowDetails$data4 === void 0 ? void 0 : (_workflowDetails$data5 = _workflowDetails$data4[0]) === null || _workflowDetails$data5 === void 0 ? void 0 : (_workflowDetails$data6 = _workflowDetails$data5.assigneeRoles) === null || _workflowDetails$data6 === void 0 ? void 0 : _workflowDetails$data6.map(function (role) {
        return {
          code: role
        };
      }),
      isActive: true
    }, {
      enabled: !(action !== null && action !== void 0 && action.isTerminateState)
    }),
    approverData = _Digit$Hooks$useEmplo.data,
    PTALoading = _Digit$Hooks$useEmplo.isLoading;
  var queryClient = reactQuery.useQueryClient();
  var _useState = React.useState({}),
    config = _useState[0],
    setConfig = _useState[1];
  var _useState2 = React.useState({}),
    defaultValues = _useState2[0];
  var _useState3 = React.useState([]),
    approvers = _useState3[0],
    setApprovers = _useState3[1];
  var _useState4 = React.useState({}),
    selectedApprover = _useState4[0],
    setSelectedApprover = _useState4[1];
  var _useState5 = React.useState(null),
    file = _useState5[0],
    setFile = _useState5[1];
  var _useState6 = React.useState(null),
    uploadedFile = _useState6[0],
    setUploadedFile = _useState6[1];
  var _useState7 = React.useState(null),
    error = _useState7[0],
    setError = _useState7[1];
  var _useState8 = React.useState(null),
    selectedFinancialYear = _useState8[0];
  var mobileView = Digit.Utils.browser.isMobile() ? true : false;
  React.useEffect(function () {
    var _approverData$Employe;
    setApprovers(approverData === null || approverData === void 0 ? void 0 : (_approverData$Employe = approverData.Employees) === null || _approverData$Employe === void 0 ? void 0 : _approverData$Employe.map(function (employee) {
      var _employee$user;
      return {
        uuid: employee === null || employee === void 0 ? void 0 : employee.uuid,
        name: employee === null || employee === void 0 ? void 0 : (_employee$user = employee.user) === null || _employee$user === void 0 ? void 0 : _employee$user.name
      };
    }));
  }, [approverData]);
  function selectFile(e) {
    setFile(e.target.files[0]);
  }
  React.useEffect(function () {
    (function () {
      try {
        setError(null);
        var _temp5 = function () {
          if (file) {
            var allowedFileTypesRegex = /(.*?)(jpg|jpeg|png|image|pdf)$/i;
            var _temp6 = function () {
              if (file.size >= 5242880) {
                setError(t("CS_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
              } else {
                var _temp7 = function () {
                  if (file !== null && file !== void 0 && file.type && !allowedFileTypesRegex.test(file === null || file === void 0 ? void 0 : file.type)) {
                    setError(t("NOT_SUPPORTED_FILE_TYPE"));
                  } else {
                    var _temp8 = _catch(function () {
                      return Promise.resolve(Digit.UploadServices.Filestorage("OBPS", file, Digit.ULBService.getStateId() || (tenantId === null || tenantId === void 0 ? void 0 : tenantId.split(".")[0]))).then(function (response) {
                        var _response$data, _response$data$files;
                        if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
                          var _response$data2, _response$data2$files;
                          setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
                        } else {
                          setError(t("CS_FILE_UPLOAD_ERROR"));
                        }
                      });
                    }, function () {
                      setError(t("CS_FILE_UPLOAD_ERROR"));
                    });
                    if (_temp8 && _temp8.then) return _temp8.then(function () {});
                  }
                }();
                if (_temp7 && _temp7.then) return _temp7.then(function () {});
              }
            }();
            if (_temp6 && _temp6.then) return _temp6.then(function () {});
          }
        }();
        return _temp5 && _temp5.then ? _temp5.then(function () {}) : void 0;
      } catch (e) {
        Promise.reject(e);
      }
    })();
  }, [file]);
  var getInspectionDocs = function getInspectionDocs(docs) {
    var refinedDocs = [];
    docs && docs.map(function (doc, ind) {
      refinedDocs.push({
        "documentType": (doc.documentType + "_" + doc.documentType.split("_")[1]).replaceAll("_", "."),
        "fileStoreId": doc.fileStoreId,
        "fileStore": doc.fileStoreId,
        "fileName": "",
        "dropDownValues": {
          "value": (doc.documentType + "_" + doc.documentType.split("_")[1]).replaceAll("_", ".")
        }
      });
    });
    return refinedDocs;
  };
  var getQuestion = function getQuestion(data) {
    var refinedQues = [];
    var i;
    for (i = 0; i < (data === null || data === void 0 ? void 0 : data.questionLength); i++) {
      var _data;
      refinedQues.push({
        "remarks": data["Remarks_" + i],
        "question": data === null || data === void 0 ? void 0 : data.questionList[i].question,
        "value": data === null || data === void 0 ? void 0 : (_data = data["question_" + i]) === null || _data === void 0 ? void 0 : _data.code
      });
    }
    return refinedQues;
  };
  var getfeildInspection = function getfeildInspection(data) {
    var _data$additionalDetai, _data$additionalDetai2;
    var formdata = [],
      inspectionOb = [];
    if ((data === null || data === void 0 ? void 0 : (_data$additionalDetai = data.additionalDetails) === null || _data$additionalDetai === void 0 ? void 0 : (_data$additionalDetai2 = _data$additionalDetai.fieldinspection_pending) === null || _data$additionalDetai2 === void 0 ? void 0 : _data$additionalDetai2.length) > 0) {
      var _data$additionalDetai3;
      inspectionOb = data === null || data === void 0 ? void 0 : (_data$additionalDetai3 = data.additionalDetails) === null || _data$additionalDetai3 === void 0 ? void 0 : _data$additionalDetai3.fieldinspection_pending;
    }
    if (data.status == "FIELDINSPECTION_INPROGRESS") {
      var _formdata;
      formdata = JSON.parse(sessionStorage.getItem("INSPECTION_DATA"));
      ((_formdata = formdata) === null || _formdata === void 0 ? void 0 : _formdata.length) > 0 && formdata.map(function (ob, ind) {
        inspectionOb.push({
          docs: getInspectionDocs(ob.Documents),
          date: ob.InspectionDate,
          questions: getQuestion(ob),
          time: ob === null || ob === void 0 ? void 0 : ob.InspectionTime
        });
      });
      inspectionOb = inspectionOb.filter(function (ob) {
        return ob.docs && ob.docs.length > 0;
      });
    } else {
      sessionStorage.removeItem("INSPECTION_DATA");
    }
    var fieldinspection_pending = [].concat(inspectionOb);
    return fieldinspection_pending;
  };
  var getDocuments = function getDocuments(applicationData) {
    var documentsformdata = JSON.parse(sessionStorage.getItem("BPA_DOCUMENTS"));
    var documentList = [];
    documentsformdata.map(function (doc) {
      var _doc$uploadedDocument, _doc$uploadedDocument2, _doc$uploadedDocument3, _doc$uploadedDocument4, _doc$uploadedDocument5, _doc$newUploadedDocs;
      if ((doc === null || doc === void 0 ? void 0 : (_doc$uploadedDocument = doc.uploadedDocuments) === null || _doc$uploadedDocument === void 0 ? void 0 : (_doc$uploadedDocument2 = _doc$uploadedDocument[0]) === null || _doc$uploadedDocument2 === void 0 ? void 0 : (_doc$uploadedDocument3 = _doc$uploadedDocument2.values) === null || _doc$uploadedDocument3 === void 0 ? void 0 : _doc$uploadedDocument3.length) > 0) documentList = [].concat(documentList, doc === null || doc === void 0 ? void 0 : (_doc$uploadedDocument4 = doc.uploadedDocuments) === null || _doc$uploadedDocument4 === void 0 ? void 0 : (_doc$uploadedDocument5 = _doc$uploadedDocument4[0]) === null || _doc$uploadedDocument5 === void 0 ? void 0 : _doc$uploadedDocument5.values);
      if ((doc === null || doc === void 0 ? void 0 : (_doc$newUploadedDocs = doc.newUploadedDocs) === null || _doc$newUploadedDocs === void 0 ? void 0 : _doc$newUploadedDocs.length) > 0) documentList = [].concat(documentList, doc === null || doc === void 0 ? void 0 : doc.newUploadedDocs);
    });
    return documentList;
  };
  var getPendingApprovals = function getPendingApprovals() {
    var _result;
    var approvals = Digit.SessionStorage.get("OBPS_APPROVAL_CHECKS");
    var newApprovals = Digit.SessionStorage.get("OBPS_NEW_APPROVALS");
    var result = approvals === null || approvals === void 0 ? void 0 : approvals.reduce(function (acc, approval) {
      return approval !== null && approval !== void 0 && approval.checked ? acc.push(approval === null || approval === void 0 ? void 0 : approval.label) && acc : acc;
    }, []);
    result = (_result = result) === null || _result === void 0 ? void 0 : _result.concat(newApprovals !== null ? newApprovals.filter(function (ob) {
      return ob.label !== "";
    }).map(function (approval) {
      return approval === null || approval === void 0 ? void 0 : approval.label;
    }) : []);
    return result;
  };
  function submit(data) {
    var _applicationData3, _data$comments, _data$comments2, _applicationDetails$n;
    applicationData = _extends({}, applicationData, {
      documents: getDocuments(),
      additionalDetails: _extends({}, (_applicationData3 = applicationData) === null || _applicationData3 === void 0 ? void 0 : _applicationData3.additionalDetails, {
        fieldinspection_pending: getfeildInspection(applicationData),
        pendingapproval: getPendingApprovals()
      }),
      workflow: {
        action: action === null || action === void 0 ? void 0 : action.action,
        comment: (data === null || data === void 0 ? void 0 : (_data$comments = data.comments) === null || _data$comments === void 0 ? void 0 : _data$comments.length) > 0 ? data === null || data === void 0 ? void 0 : data.comments : null,
        comments: (data === null || data === void 0 ? void 0 : (_data$comments2 = data.comments) === null || _data$comments2 === void 0 ? void 0 : _data$comments2.length) > 0 ? data === null || data === void 0 ? void 0 : data.comments : null,
        assignee: !(selectedApprover !== null && selectedApprover !== void 0 && selectedApprover.uuid) ? null : [selectedApprover === null || selectedApprover === void 0 ? void 0 : selectedApprover.uuid],
        assignes: !(selectedApprover !== null && selectedApprover !== void 0 && selectedApprover.uuid) ? null : [selectedApprover === null || selectedApprover === void 0 ? void 0 : selectedApprover.uuid],
        varificationDocuments: uploadedFile ? [{
          documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
          fileName: file === null || file === void 0 ? void 0 : file.name,
          fileStoreId: uploadedFile
        }] : null
      },
      action: action === null || action === void 0 ? void 0 : action.action,
      comment: data === null || data === void 0 ? void 0 : data.comments,
      assignee: !(selectedApprover !== null && selectedApprover !== void 0 && selectedApprover.uuid) ? null : [selectedApprover === null || selectedApprover === void 0 ? void 0 : selectedApprover.uuid],
      wfDocuments: uploadedFile ? [{
        documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
        fileName: file === null || file === void 0 ? void 0 : file.name,
        fileStoreId: uploadedFile
      }] : null
    });
    var nocDetails = applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$n = applicationDetails.nocData) === null || _applicationDetails$n === void 0 ? void 0 : _applicationDetails$n.map(function (noc) {
      var uploadedDocuments = Digit.SessionStorage.get(noc === null || noc === void 0 ? void 0 : noc.nocType) || [];
      return {
        Noc: _extends({}, noc, {
          documents: [].concat(noc !== null && noc !== void 0 && noc.documents ? noc === null || noc === void 0 ? void 0 : noc.documents : [], uploadedDocuments ? uploadedDocuments : [])
        })
      };
    });
    var nocData = [];
    if (nocDetails) {
      nocDetails.map(function (noc) {
        var _noc$Noc, _noc$Noc$applicationS, _noc$Noc2, _noc$Noc2$application, _noc$Noc3, _noc$Noc3$application, _noc$Noc4, _noc$Noc4$application, _noc$Noc5, _noc$Noc5$application;
        if ((noc === null || noc === void 0 ? void 0 : (_noc$Noc = noc.Noc) === null || _noc$Noc === void 0 ? void 0 : (_noc$Noc$applicationS = _noc$Noc.applicationStatus) === null || _noc$Noc$applicationS === void 0 ? void 0 : _noc$Noc$applicationS.toUpperCase()) != "APPROVED" && (noc === null || noc === void 0 ? void 0 : (_noc$Noc2 = noc.Noc) === null || _noc$Noc2 === void 0 ? void 0 : (_noc$Noc2$application = _noc$Noc2.applicationStatus) === null || _noc$Noc2$application === void 0 ? void 0 : _noc$Noc2$application.toUpperCase()) != "AUTO_APPROVED" && (noc === null || noc === void 0 ? void 0 : (_noc$Noc3 = noc.Noc) === null || _noc$Noc3 === void 0 ? void 0 : (_noc$Noc3$application = _noc$Noc3.applicationStatus) === null || _noc$Noc3$application === void 0 ? void 0 : _noc$Noc3$application.toUpperCase()) != "REJECTED" && (noc === null || noc === void 0 ? void 0 : (_noc$Noc4 = noc.Noc) === null || _noc$Noc4 === void 0 ? void 0 : (_noc$Noc4$application = _noc$Noc4.applicationStatus) === null || _noc$Noc4$application === void 0 ? void 0 : _noc$Noc4$application.toUpperCase()) != "AUTO_REJECTED" && (noc === null || noc === void 0 ? void 0 : (_noc$Noc5 = noc.Noc) === null || _noc$Noc5 === void 0 ? void 0 : (_noc$Noc5$application = _noc$Noc5.applicationStatus) === null || _noc$Noc5$application === void 0 ? void 0 : _noc$Noc5$application.toUpperCase()) != "VOIDED") {
          nocData.push(noc);
        }
      });
    }
    submitAction({
      BPA: applicationData
    }, (nocData === null || nocData === void 0 ? void 0 : nocData.length) > 0 ? nocData : false, {
      isStakeholder: false,
      bpa: true
    });
  }
  React.useEffect(function () {
    if (action) {
      setConfig(configBPAApproverApplication({
        t: t,
        action: action,
        approvers: approvers,
        selectedApprover: selectedApprover,
        setSelectedApprover: setSelectedApprover,
        selectFile: selectFile,
        uploadedFile: uploadedFile,
        setUploadedFile: setUploadedFile,
        businessService: businessService,
        assigneeLabel: "WF_ASSIGNEE_NAME_LABEL",
        error: error
      }));
    }
  }, [action, approvers, selectedFinancialYear, uploadedFile, error]);
  return action && config.form ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.Modal, {
    headerBarMain: /*#__PURE__*/React__default.createElement(Heading$3, {
      label: t(config.label.heading)
    }),
    headerBarEnd: /*#__PURE__*/React__default.createElement(CloseBtn$3, {
      onClick: closeModal
    }),
    actionCancelLabel: t(config.label.cancel),
    actionCancelOnSubmit: closeModal,
    actionSaveLabel: t(config.label.submit),
    actionSaveOnSubmit: function actionSaveOnSubmit() {},
    formId: "modal-action",
    isOBPSFlow: true,
    popupStyles: mobileView ? {
      width: "720px"
    } : {},
    style: !mobileView ? {
      minHeight: "45px",
      height: "auto",
      width: "107px",
      paddingLeft: "0px",
      paddingRight: "0px"
    } : {
      minHeight: "45px",
      height: "auto",
      width: "44%"
    },
    popupModuleMianStyles: mobileView ? {
      paddingLeft: "5px"
    } : {}
  }, PTALoading ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null) : /*#__PURE__*/React__default.createElement(digitUiReactComponents.FormComposer, {
    config: config.form,
    cardStyle: {
      marginLeft: "0px",
      marginRight: "0px",
      marginTop: "-25px"
    },
    className: "BPAemployeeCard",
    noBoxShadow: true,
    inline: true,
    childrenAtTheBottom: true,
    onSubmit: submit,
    defaultValues: defaultValues,
    formId: "modal-action"
  })) : /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null);
};

var Heading$4 = function Heading(props) {
  return /*#__PURE__*/React__default.createElement("h1", {
    style: {
      marginLeft: "22px"
    },
    className: "heading-m BPAheading-m"
  }, props.label);
};
var Close$4 = function Close() {
  return /*#__PURE__*/React__default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "#FFFFFF"
  }, /*#__PURE__*/React__default.createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
  }));
};
var CloseBtn$4 = function CloseBtn(props) {
  return /*#__PURE__*/React__default.createElement("div", {
    className: "icon-bg-secondary",
    onClick: props.onClick
  }, /*#__PURE__*/React__default.createElement(Close$4, null));
};
var ActionModal$4 = function ActionModal(_ref) {
  var _action$assigneeRoles, _action$assigneeRoles2;
  var t = _ref.t,
    action = _ref.action,
    tenantId = _ref.tenantId,
    closeModal = _ref.closeModal,
    submitAction = _ref.submitAction,
    applicationData = _ref.applicationData,
    businessService = _ref.businessService;
  var _Digit$Hooks$useEmplo = Digit.Hooks.useEmployeeSearch(tenantId, {
      roles: action === null || action === void 0 ? void 0 : (_action$assigneeRoles = action.assigneeRoles) === null || _action$assigneeRoles === void 0 ? void 0 : (_action$assigneeRoles2 = _action$assigneeRoles.map) === null || _action$assigneeRoles2 === void 0 ? void 0 : _action$assigneeRoles2.call(_action$assigneeRoles, function (e) {
        return {
          code: e
        };
      }),
      isActive: true
    }, {
      enabled: !(action !== null && action !== void 0 && action.isTerminateState)
    }),
    approverData = _Digit$Hooks$useEmplo.data,
    PTALoading = _Digit$Hooks$useEmplo.isLoading;
  var queryClient = reactQuery.useQueryClient();
  var _useState = React.useState({}),
    config = _useState[0],
    setConfig = _useState[1];
  var _useState2 = React.useState({}),
    defaultValues = _useState2[0];
  var _useState3 = React.useState([]),
    approvers = _useState3[0],
    setApprovers = _useState3[1];
  var _useState4 = React.useState({}),
    selectedApprover = _useState4[0],
    setSelectedApprover = _useState4[1];
  var _useState5 = React.useState(null),
    file = _useState5[0],
    setFile = _useState5[1];
  var _useState6 = React.useState(null),
    uploadedFile = _useState6[0],
    setUploadedFile = _useState6[1];
  var _useState7 = React.useState(null),
    error = _useState7[0],
    setError = _useState7[1];
  var mobileView = Digit.Utils.browser.isMobile() ? true : false;
  var history = reactRouterDom.useHistory();
  React.useEffect(function () {
    var _approverData$Employe;
    setApprovers(approverData === null || approverData === void 0 ? void 0 : (_approverData$Employe = approverData.Employees) === null || _approverData$Employe === void 0 ? void 0 : _approverData$Employe.map(function (employee) {
      var _employee$user;
      return {
        uuid: employee === null || employee === void 0 ? void 0 : employee.uuid,
        name: employee === null || employee === void 0 ? void 0 : (_employee$user = employee.user) === null || _employee$user === void 0 ? void 0 : _employee$user.name
      };
    }));
  }, [approverData]);
  function selectFile(e) {
    setFile(e.target.files[0]);
  }
  React.useEffect(function () {
    (function () {
      try {
        setError(null);
        var _temp5 = function () {
          if (file) {
            var allowedFileTypesRegex = /(.*?)(jpg|jpeg|png|image|pdf)$/i;
            var _temp6 = function () {
              if (file.size >= 5242880) {
                setError(t("CS_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
              } else {
                var _temp7 = function () {
                  if (file !== null && file !== void 0 && file.type && !allowedFileTypesRegex.test(file === null || file === void 0 ? void 0 : file.type)) {
                    setError(t("NOT_SUPPORTED_FILE_TYPE"));
                  } else {
                    var _temp8 = _catch(function () {
                      return Promise.resolve(Digit.UploadServices.Filestorage("NOC", file, Digit.ULBService.getStateId() || (tenantId === null || tenantId === void 0 ? void 0 : tenantId.split(".")[0]))).then(function (response) {
                        var _response$data, _response$data$files;
                        if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
                          var _response$data2, _response$data2$files;
                          setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
                        } else {
                          setError(t("CS_FILE_UPLOAD_ERROR"));
                        }
                      });
                    }, function () {
                      setError(t("CS_FILE_UPLOAD_ERROR"));
                    });
                    if (_temp8 && _temp8.then) return _temp8.then(function () {});
                  }
                }();
                if (_temp7 && _temp7.then) return _temp7.then(function () {});
              }
            }();
            if (_temp6 && _temp6.then) return _temp6.then(function () {});
          }
        }();
        return _temp5 && _temp5.then ? _temp5.then(function () {}) : void 0;
      } catch (e) {
        Promise.reject(e);
      }
    })();
  }, [file]);
  function submit(data) {
    var _applicationData, _applicationData$docu, _applicationData2;
    var enteredDocs = JSON.parse(sessionStorage.getItem("NewNOCDocs"));
    var newDocs = ((_applicationData = applicationData) === null || _applicationData === void 0 ? void 0 : (_applicationData$docu = _applicationData.documents) === null || _applicationData$docu === void 0 ? void 0 : _applicationData$docu.length) > 0 ? [].concat((_applicationData2 = applicationData) === null || _applicationData2 === void 0 ? void 0 : _applicationData2.documents) : [];
    enteredDocs.map(function (d, index) {
      newDocs.push(d);
    });
    applicationData = _extends({}, applicationData, {
      workflow: {
        action: action === null || action === void 0 ? void 0 : action.action,
        comment: data !== null && data !== void 0 && data.comments ? data === null || data === void 0 ? void 0 : data.comments : null,
        assignee: !(selectedApprover !== null && selectedApprover !== void 0 && selectedApprover.uuid) ? null : [selectedApprover === null || selectedApprover === void 0 ? void 0 : selectedApprover.uuid],
        documents: uploadedFile ? [{
          documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
          fileName: file === null || file === void 0 ? void 0 : file.name,
          fileStoreId: uploadedFile
        }] : null
      },
      documents: newDocs
    });
    submitAction({
      Noc: applicationData
    }, false, {
      isNoc: true
    });
  }
  React.useEffect(function () {
    if (action) {
      setConfig(configNOCApproverApplication({
        t: t,
        action: action,
        approvers: approvers,
        selectedApprover: selectedApprover,
        setSelectedApprover: setSelectedApprover,
        selectFile: selectFile,
        uploadedFile: uploadedFile,
        setUploadedFile: setUploadedFile,
        businessService: businessService,
        assigneeLabel: "WF_ASSIGNEE_NAME_LABEL",
        error: error
      }));
    }
  }, [action, approvers, uploadedFile, error]);
  return action && config.form ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.Modal, {
    headerBarMain: /*#__PURE__*/React__default.createElement(Heading$4, {
      label: t(config.label.heading)
    }),
    headerBarEnd: /*#__PURE__*/React__default.createElement(CloseBtn$4, {
      onClick: closeModal
    }),
    actionCancelLabel: t(config.label.cancel),
    actionCancelOnSubmit: closeModal,
    actionSaveLabel: t(config.label.submit),
    actionSaveOnSubmit: function actionSaveOnSubmit() {},
    formId: "modal-action",
    isOBPSFlow: true,
    popupStyles: mobileView ? {
      width: "720px"
    } : {},
    style: !mobileView ? {
      height: "45px",
      width: "107px",
      paddingLeft: "0px",
      paddingRight: "0px"
    } : {
      height: "45px",
      width: "44%"
    },
    popupModuleMianStyles: mobileView ? {
      paddingLeft: "5px"
    } : {}
  }, PTALoading ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null) : /*#__PURE__*/React__default.createElement(digitUiReactComponents.FormComposer, {
    config: config.form,
    cardStyle: {
      marginLeft: "0px",
      marginRight: "0px",
      marginTop: "-25px"
    },
    className: "BPAemployeeCard",
    noBoxShadow: true,
    inline: true,
    childrenAtTheBottom: true,
    onSubmit: submit,
    defaultValues: defaultValues,
    formId: "modal-action"
  })) : /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null);
};

var ActionModal$5 = function ActionModal$5(props) {
  if (props !== null && props !== void 0 && props.businessService.includes("PT")) {
    return /*#__PURE__*/React__default.createElement(ActionModal, props);
  }
  if (props !== null && props !== void 0 && props.businessService.includes("NewTL") || props !== null && props !== void 0 && props.businessService.includes("TL") || props !== null && props !== void 0 && props.businessService.includes("EDITRENEWAL") || props !== null && props !== void 0 && props.businessService.includes("DIRECTRENEWAL")) {
    return /*#__PURE__*/React__default.createElement(ActionModal$1, props);
  }
  if (props !== null && props !== void 0 && props.moduleCode.includes("BPAREG")) {
    return /*#__PURE__*/React__default.createElement(ActionModal$2, props);
  }
  if (props !== null && props !== void 0 && props.moduleCode.includes("BPA")) {
    return /*#__PURE__*/React__default.createElement(ActionModal$3, props);
  }
  if (props !== null && props !== void 0 && props.moduleCode.includes("NOC")) {
    return /*#__PURE__*/React__default.createElement(ActionModal$4, props);
  }
};

function DocumentsPreview(_ref) {
  var documents = _ref.documents,
    _ref$svgStyles = _ref.svgStyles,
    svgStyles = _ref$svgStyles === void 0 ? {} : _ref$svgStyles,
    _ref$isSendBackFlow = _ref.isSendBackFlow,
    isSendBackFlow = _ref$isSendBackFlow === void 0 ? false : _ref$isSendBackFlow,
    _ref$isHrLine = _ref.isHrLine,
    isHrLine = _ref$isHrLine === void 0 ? false : _ref$isHrLine,
    titleStyles = _ref.titleStyles;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var isStakeholderApplication = window.location.href.includes("stakeholder");
  return /*#__PURE__*/React__default.createElement("div", {
    style: {
      marginTop: "19px"
    }
  }, !isStakeholderApplication && (documents === null || documents === void 0 ? void 0 : documents.map(function (document, index) {
    var _document$values;
    return /*#__PURE__*/React__default.createElement(React__default.Fragment, {
      key: index
    }, document !== null && document !== void 0 && document.title ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSubHeader, {
      style: titleStyles ? titleStyles : {
        marginTop: "32px",
        marginBottom: "8px",
        color: "#505A5F",
        fontSize: "24px"
      }
    }, t(document === null || document === void 0 ? void 0 : document.title)) : null, /*#__PURE__*/React__default.createElement("div", {
      style: {
        display: "flex",
        flexWrap: "wrap",
        justifyContent: "flex-start"
      }
    }, document !== null && document !== void 0 && document.values && (document === null || document === void 0 ? void 0 : document.values.length) > 0 ? document === null || document === void 0 ? void 0 : (_document$values = document.values) === null || _document$values === void 0 ? void 0 : _document$values.map(function (value, index) {
      var _ref2, _value$documentType;
      return /*#__PURE__*/React__default.createElement("a", {
        target: "_",
        href: value === null || value === void 0 ? void 0 : value.url,
        style: (_ref2 = {
          minWidth: "80px",
          marginRight: "10px",
          maxWidth: "100px",
          height: "auto"
        }, _ref2["minWidth"] = "100px", _ref2),
        key: index
      }, /*#__PURE__*/React__default.createElement("div", {
        style: {
          display: "flex",
          justifyContent: "center"
        }
      }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.PDFSvg, null)), /*#__PURE__*/React__default.createElement("p", {
        style: {
          marginTop: "8px",
          fontWeight: "bold",
          textAlign: "center",
          color: "#505A5F"
        }
      }, t(value === null || value === void 0 ? void 0 : value.title)), isSendBackFlow ? value !== null && value !== void 0 && (_value$documentType = value.documentType) !== null && _value$documentType !== void 0 && _value$documentType.includes("NOC") ? /*#__PURE__*/React__default.createElement("p", {
        style: {
          textAlign: "center"
        }
      }, t(value === null || value === void 0 ? void 0 : value.documentType.split(".")[1])) : /*#__PURE__*/React__default.createElement("p", {
        style: {
          textAlign: "center"
        }
      }, t(value === null || value === void 0 ? void 0 : value.documentType)) : "");
    }) : !window.location.href.includes("citizen") && /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement("p", null, t("BPA_NO_DOCUMENTS_UPLOADED_LABEL")))), isHrLine && (documents === null || documents === void 0 ? void 0 : documents.length) != index + 1 ? /*#__PURE__*/React__default.createElement("hr", {
      style: {
        color: "#D6D5D4",
        backgroundColor: "#D6D5D4",
        height: "2px",
        marginTop: "20px",
        marginBottom: "20px"
      }
    }) : null);
  })), isStakeholderApplication && (documents === null || documents === void 0 ? void 0 : documents.map(function (document, index) {
    var _document$values2;
    return /*#__PURE__*/React__default.createElement(React__default.Fragment, {
      key: index
    }, document !== null && document !== void 0 && document.title ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSubHeader, {
      style: {
        marginTop: "32px",
        marginBottom: "8px",
        color: "#505A5F",
        fontSize: "24px"
      }
    }, t(document === null || document === void 0 ? void 0 : document.title)) : null, /*#__PURE__*/React__default.createElement("div", null, document !== null && document !== void 0 && document.values && (document === null || document === void 0 ? void 0 : document.values.length) > 0 ? document === null || document === void 0 ? void 0 : (_document$values2 = document.values) === null || _document$values2 === void 0 ? void 0 : _document$values2.map(function (value, index) {
      var _ref3;
      return /*#__PURE__*/React__default.createElement("a", {
        target: "_",
        href: value === null || value === void 0 ? void 0 : value.url,
        style: {
          minWidth: svgStyles !== null && svgStyles !== void 0 && svgStyles.minWidth ? svgStyles === null || svgStyles === void 0 ? void 0 : svgStyles.minWidth : "160px",
          marginRight: "20px"
        },
        key: index
      }, /*#__PURE__*/React__default.createElement("div", {
        style: {
          maxWidth: "940px",
          padding: "8px",
          borderRadius: "4px",
          border: "1px solid #D6D5D4",
          background: "#FAFAFA"
        }
      }, /*#__PURE__*/React__default.createElement("p", {
        style: {
          marginTop: "8px",
          fontWeight: "bold",
          marginBottom: "10px"
        }
      }, t(value === null || value === void 0 ? void 0 : value.title)), value !== null && value !== void 0 && value.docInfo ? /*#__PURE__*/React__default.createElement("div", {
        style: {
          fontSize: "12px",
          color: "#505A5F",
          fontWeight: 400,
          lineHeight: "15px",
          marginBottom: "10px"
        }
      }, "" + t(value === null || value === void 0 ? void 0 : value.docInfo)) : null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.PDFSvg, null), /*#__PURE__*/React__default.createElement("p", {
        style: (_ref3 = {
          marginTop: "8px",
          fontSize: "16px",
          lineHeight: "19px",
          color: "#505A5F",
          fontWeight: "400",
          textAlign: "center"
        }, _ref3["color"] = "#505A5F", _ref3)
      }, "" + t(value === null || value === void 0 ? void 0 : value.title))));
    }) : !window.location.href.includes("citizen") && /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement("p", null, t("BPA_NO_DOCUMENTS_UPLOADED_LABEL")))));
  })));
}

var BPADocuments = function BPADocuments(_ref) {
  var _bpaActionsDetails$da, _formData$documents;
  var t = _ref.t,
    formData = _ref.formData,
    applicationData = _ref.applicationData,
    docs = _ref.docs,
    bpaActionsDetails = _ref.bpaActionsDetails;
  var applicationStatus = (applicationData === null || applicationData === void 0 ? void 0 : applicationData.status) || "";
  var actions = (bpaActionsDetails === null || bpaActionsDetails === void 0 ? void 0 : (_bpaActionsDetails$da = bpaActionsDetails.data) === null || _bpaActionsDetails$da === void 0 ? void 0 : _bpaActionsDetails$da.nextActions) || [];
  var stateId = Digit.ULBService.getStateId();
  var _useState = React.useState((formData === null || formData === void 0 ? void 0 : (_formData$documents = formData.documents) === null || _formData$documents === void 0 ? void 0 : _formData$documents.documents) || []),
    documents = _useState[0],
    setDocuments = _useState[1];
  var _useState2 = React.useState(null),
    error = _useState2[0],
    setError = _useState2[1];
  var _useState3 = React.useState([]),
    bpaTaxDocuments = _useState3[0],
    setBpaTaxDocuments = _useState3[1];
  var _useState4 = React.useState(true),
    setEnableSubmit = _useState4[1];
  var _useState5 = React.useState(false),
    checkRequiredFields = _useState5[0],
    setCheckRequiredFields = _useState5[1];
  var _useState6 = React.useState(false),
    checkEnablingDocs = _useState6[0],
    setCheckEnablingDocs = _useState6[1];
  var _Digit$Hooks$obps$use = Digit.Hooks.obps.useMDMS(stateId, "BPA", ["DocTypeMapping"]),
    bpaDocsLoading = _Digit$Hooks$obps$use.isLoading,
    bpaDocs = _Digit$Hooks$obps$use.data;
  var _Digit$Hooks$obps$use2 = Digit.Hooks.obps.useMDMS(stateId, "common-masters", ["DocumentType"]),
    commonDocsLoading = _Digit$Hooks$obps$use2.isLoading,
    commonDocs = _Digit$Hooks$obps$use2.data;
  React.useEffect(function () {
    var _bpaDocs$BPA, _filtredBpaDocs, _filtredBpaDocs$, _filtredBpaDocs$$docT;
    var filtredBpaDocs = [];
    if (bpaDocs !== null && bpaDocs !== void 0 && (_bpaDocs$BPA = bpaDocs.BPA) !== null && _bpaDocs$BPA !== void 0 && _bpaDocs$BPA.DocTypeMapping) {
      var _bpaDocs$BPA2, _bpaDocs$BPA2$DocType;
      filtredBpaDocs = bpaDocs === null || bpaDocs === void 0 ? void 0 : (_bpaDocs$BPA2 = bpaDocs.BPA) === null || _bpaDocs$BPA2 === void 0 ? void 0 : (_bpaDocs$BPA2$DocType = _bpaDocs$BPA2.DocTypeMapping) === null || _bpaDocs$BPA2$DocType === void 0 ? void 0 : _bpaDocs$BPA2$DocType.filter(function (data) {
        var _applicationData$addi, _applicationData$addi2;
        return data.WFState == (applicationData === null || applicationData === void 0 ? void 0 : applicationData.status) ? applicationData === null || applicationData === void 0 ? void 0 : applicationData.status :  data.RiskType == (applicationData === null || applicationData === void 0 ? void 0 : applicationData.riskType) && data.ServiceType == (applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$addi = applicationData.additionalDetails) === null || _applicationData$addi === void 0 ? void 0 : _applicationData$addi.serviceType) && data.applicationType == (applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$addi2 = applicationData.additionalDetails) === null || _applicationData$addi2 === void 0 ? void 0 : _applicationData$addi2.applicationType);
      });
    }
    var documentsList = [];
    (_filtredBpaDocs = filtredBpaDocs) === null || _filtredBpaDocs === void 0 ? void 0 : (_filtredBpaDocs$ = _filtredBpaDocs[0]) === null || _filtredBpaDocs$ === void 0 ? void 0 : (_filtredBpaDocs$$docT = _filtredBpaDocs$.docTypes) === null || _filtredBpaDocs$$docT === void 0 ? void 0 : _filtredBpaDocs$$docT.forEach(function (doc) {
      var _commonDocs$commonMa, _commonDocs$commonMa$, _docs$, _docs$$values;
      var code = doc.code;
      doc.dropdownData = [];
      doc.uploadedDocuments = [];
      commonDocs === null || commonDocs === void 0 ? void 0 : (_commonDocs$commonMa = commonDocs["common-masters"]) === null || _commonDocs$commonMa === void 0 ? void 0 : (_commonDocs$commonMa$ = _commonDocs$commonMa.DocumentType) === null || _commonDocs$commonMa$ === void 0 ? void 0 : _commonDocs$commonMa$.forEach(function (value) {
        var values = value.code.slice(0, code.length);
        if (code === values) {
          doc.hasDropdown = true;
          value.i18nKey = value.code;
          doc.dropdownData.push(value);
        }
      });
      doc.uploadedDocuments[0] = {};
      doc.uploadedDocuments[0].values = [];
      docs === null || docs === void 0 ? void 0 : (_docs$ = docs[0]) === null || _docs$ === void 0 ? void 0 : (_docs$$values = _docs$.values) === null || _docs$$values === void 0 ? void 0 : _docs$$values.map(function (upDocs) {
        var _upDocs$documentType, _upDocs$documentType2;
        if (code === (upDocs === null || upDocs === void 0 ? void 0 : (_upDocs$documentType = upDocs.documentType) === null || _upDocs$documentType === void 0 ? void 0 : _upDocs$documentType.split('.')[0]) + "." + (upDocs === null || upDocs === void 0 ? void 0 : (_upDocs$documentType2 = upDocs.documentType) === null || _upDocs$documentType2 === void 0 ? void 0 : _upDocs$documentType2.split('.')[1])) {
          doc.uploadedDocuments[0].values.push(upDocs);
        }
      });
      documentsList.push(doc);
    });
    sessionStorage.setItem("BPA_DOCUMENTS", JSON.stringify(documentsList));
    setBpaTaxDocuments(documentsList);
  }, [!bpaDocsLoading, !commonDocsLoading]);
  React.useEffect(function () {
    var count = 0;
    bpaTaxDocuments.map(function (doc) {
      var isRequired = false;
      documents.map(function (data) {
        if (doc.required && doc.code == data.documentType.split('.')[0] + "." + data.documentType.split('.')[1]) {
          isRequired = true;
        }
      });
      if (!isRequired && doc.required) {
        count = count + 1;
      }
    });
    if ((count == "0" || count == 0) && documents.length > 0) setEnableSubmit(false);else setEnableSubmit(true);
  }, [documents, checkRequiredFields]);
  React.useEffect(function () {
    if (applicationStatus === "DOC_VERIFICATION_INPROGRESS" && (actions === null || actions === void 0 ? void 0 : actions.length) > 0) setCheckEnablingDocs(true);else setCheckEnablingDocs(false);
  }, [applicationData, bpaActionsDetails]);
  return /*#__PURE__*/React__default.createElement("div", null, bpaTaxDocuments === null || bpaTaxDocuments === void 0 ? void 0 : bpaTaxDocuments.map(function (document, index) {
    return /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement(SelectDocument, {
      key: index,
      index: index,
      document: document,
      t: t,
      error: error,
      setError: setError,
      setDocuments: setDocuments,
      documents: documents,
      setCheckRequiredFields: setCheckRequiredFields,
      applicationStatus: applicationStatus,
      actions: actions,
      bpaTaxDocuments: bpaTaxDocuments,
      checkEnablingDocs: checkEnablingDocs
    }));
  }));
};
function SelectDocument(_ref2) {
  var _doc$dropdownData, _doc$uploadedDocument;
  var t = _ref2.t,
    doc = _ref2.document,
    setDocuments = _ref2.setDocuments,
    documents = _ref2.documents,
    index = _ref2.index,
    bpaTaxDocuments = _ref2.bpaTaxDocuments,
    checkEnablingDocs = _ref2.checkEnablingDocs;
  var filteredDocument = documents === null || documents === void 0 ? void 0 : documents.filter(function (item) {
    var _item$documentType;
    return item === null || item === void 0 ? void 0 : (_item$documentType = item.documentType) === null || _item$documentType === void 0 ? void 0 : _item$documentType.includes(doc === null || doc === void 0 ? void 0 : doc.code);
  })[0];
  var tenantId = Digit.ULBService.getStateId();
  var _useState7 = React.useState(filteredDocument ? _extends({}, filteredDocument, {
      active: true,
      code: filteredDocument === null || filteredDocument === void 0 ? void 0 : filteredDocument.documentType,
      i18nKey: filteredDocument === null || filteredDocument === void 0 ? void 0 : filteredDocument.documentType
    }) : (doc === null || doc === void 0 ? void 0 : (_doc$dropdownData = doc.dropdownData) === null || _doc$dropdownData === void 0 ? void 0 : _doc$dropdownData.length) === 1 ? doc === null || doc === void 0 ? void 0 : doc.dropdownData[0] : {}),
    selectedDocument = _useState7[0],
    setSelectedDocument = _useState7[1];
  var _useState8 = React.useState(null),
    file = _useState8[0],
    setFile = _useState8[1];
  var _useState9 = React.useState(function () {
      return (filteredDocument === null || filteredDocument === void 0 ? void 0 : filteredDocument.fileStoreId) || null;
    }),
    uploadedFile = _useState9[0];
  var _useState10 = React.useState([]),
    selectArrayFiles = _useState10[0],
    SetSelectArrayFiles = _useState10[1];
  var handleSelectDocument = function handleSelectDocument(value) {
    return setSelectedDocument(value);
  };
  var allowedFileTypes = /(.*?)(jpg|jpeg|png|image|pdf)$/i;
  function selectfiles(e) {
    e && setFile(e.file);
  }
  React.useEffect(function () {
    if (selectedDocument !== null && selectedDocument !== void 0 && selectedDocument.code) {
      setDocuments(function (prev) {
        var _documents$find;
        var filteredDocumentsByDocumentType = prev === null || prev === void 0 ? void 0 : prev.filter(function (item) {
          return (item === null || item === void 0 ? void 0 : item.documentType) !== (selectedDocument === null || selectedDocument === void 0 ? void 0 : selectedDocument.code);
        });
        if ((uploadedFile === null || uploadedFile === void 0 ? void 0 : uploadedFile.length) === 0 || uploadedFile === null) return filteredDocumentsByDocumentType;
        var filteredDocumentsByFileStoreId = filteredDocumentsByDocumentType === null || filteredDocumentsByDocumentType === void 0 ? void 0 : filteredDocumentsByDocumentType.filter(function (item) {
          return (item === null || item === void 0 ? void 0 : item.fileStoreId) !== uploadedFile;
        });
        return [].concat(filteredDocumentsByFileStoreId, [{
          documentType: selectedDocument === null || selectedDocument === void 0 ? void 0 : selectedDocument.code,
          fileStoreId: uploadedFile,
          documentUid: uploadedFile,
          fileName: (file === null || file === void 0 ? void 0 : file.name) || "",
          id: documents ? (_documents$find = documents.find(function (x) {
            return x.documentType === (selectedDocument === null || selectedDocument === void 0 ? void 0 : selectedDocument.code);
          })) === null || _documents$find === void 0 ? void 0 : _documents$find.id : undefined
        }]);
      });
    }
  }, [uploadedFile, selectedDocument]);
  React.useEffect(function () {
    try {
      if (selectArrayFiles.length > 0) {
        sessionStorage.removeItem("BPA_DOCUMENTS");
        doc.newUploadedDocs = [];
        selectArrayFiles.map(function (newDoc) {
          if (selectedDocument !== null && selectedDocument !== void 0 && selectedDocument.code) {
            var _newDoc$fileStoreId, _newDoc$fileStoreId2, _newDoc$fileStoreId3;
            doc.newUploadedDocs.push({
              documentType: selectedDocument === null || selectedDocument === void 0 ? void 0 : selectedDocument.code,
              fileStoreId: newDoc === null || newDoc === void 0 ? void 0 : (_newDoc$fileStoreId = newDoc.fileStoreId) === null || _newDoc$fileStoreId === void 0 ? void 0 : _newDoc$fileStoreId.fileStoreId,
              documentUid: newDoc === null || newDoc === void 0 ? void 0 : (_newDoc$fileStoreId2 = newDoc.fileStoreId) === null || _newDoc$fileStoreId2 === void 0 ? void 0 : _newDoc$fileStoreId2.fileStoreId,
              tenantId: newDoc === null || newDoc === void 0 ? void 0 : (_newDoc$fileStoreId3 = newDoc.fileStoreId) === null || _newDoc$fileStoreId3 === void 0 ? void 0 : _newDoc$fileStoreId3.tenantId
            });
          }
        });
        bpaTaxDocuments[index] = doc;
        sessionStorage.setItem("BPA_DOCUMENTS", JSON.stringify(bpaTaxDocuments));
      }
    } catch (e) {
      Promise.reject(e);
    }
  }, [selectArrayFiles, selectedDocument]);
  React.useEffect(function () {
  }, [file]);
  var getData = function getData(index, state) {
    var data = Object.fromEntries(state);
    var newArr = Object.values(data);
    if (Object.keys(data).length !== 0) SetSelectArrayFiles(newArr);
    selectfiles(newArr[newArr.length - 1]);
  };
  return /*#__PURE__*/React__default.createElement("div", {
    style: {
      marginBottom: "24px",
      maxWidth: "950px",
      minWidth: "280px",
      background: "#FAFAFA",
      borderRadius: "4px",
      border: "1px solid #D6D5D4",
      padding: "8px"
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSubHeader, {
    style: {
      marginBottom: "8px",
      paddingBottom: "9px",
      color: "#0B0C0C",
      fontSize: "16px",
      lineHeight: "19px"
    }
  }, "" + t(doc === null || doc === void 0 ? void 0 : doc.code)), (doc === null || doc === void 0 ? void 0 : (_doc$uploadedDocument = doc.uploadedDocuments) === null || _doc$uploadedDocument === void 0 ? void 0 : _doc$uploadedDocument.length) && /*#__PURE__*/React__default.createElement(DocumentsPreview, {
    documents: doc === null || doc === void 0 ? void 0 : doc.uploadedDocuments,
    svgStyles: {
      width: "100px",
      height: "100px",
      viewBox: "0 0 25 25",
      minWidth: "100px"
    }
  }), checkEnablingDocs ? /*#__PURE__*/React__default.createElement("div", {
    style: {
      marginTop: "20px"
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, {
    style: {
      width: "100%"
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, {
    style: {
      marginTop: "-10px",
      width: "100%"
    }
  }, doc !== null && doc !== void 0 && doc.required ? t(doc === null || doc === void 0 ? void 0 : doc.code) + "* " : "" + t(doc === null || doc === void 0 ? void 0 : doc.code)), /*#__PURE__*/React__default.createElement(digitUiReactComponents.Dropdown, {
    className: "form-field",
    t: t,
    isMandatory: false,
    option: doc === null || doc === void 0 ? void 0 : doc.dropdownData,
    selected: selectedDocument,
    optionKey: "i18nKey",
    select: handleSelectDocument,
    style: {
      width: "100%"
    }
  })), /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, {
    style: {
      width: "100%"
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, {
    className: "card-label-smaller",
    style: {
      width: "100%"
    }
  }), /*#__PURE__*/React__default.createElement("div", {
    className: "field",
    style: {
      width: "100%"
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.MultiUploadWrapper, {
    module: "BPA",
    tenantId: tenantId,
    getFormState: function getFormState(e) {
      return getData(index, e);
    },
    t: t,
    allowedFileTypesRegex: allowedFileTypes,
    allowedMaxSizeInMB: 5,
    acceptFiles: "image/*, .pdf, .png, .jpeg, .jpg"
  })))) : null);
}

var getDocuments = function getDocuments(fiDocuments) {
  var returnDocuments = [{
    title: "BPA_DOCUMENT_DETAILS_LABEL",
    values: fiDocuments === null || fiDocuments === void 0 ? void 0 : fiDocuments.map(function (doc) {
      var _doc$documentType;
      return {
        title: doc === null || doc === void 0 ? void 0 : (_doc$documentType = doc.documentType) === null || _doc$documentType === void 0 ? void 0 : _doc$documentType.replaceAll('.', '_'),
        documentType: doc === null || doc === void 0 ? void 0 : doc.documentType,
        documentUid: doc === null || doc === void 0 ? void 0 : doc.documentUid,
        fileStoreId: doc === null || doc === void 0 ? void 0 : doc.fileStoreId,
        id: doc === null || doc === void 0 ? void 0 : doc.id,
        url: doc === null || doc === void 0 ? void 0 : doc.url
      };
    })
  }];
  return returnDocuments;
};
function InspectionReport(_ref) {
  var fiReport = _ref.fiReport,
    _ref$isCitizen = _ref.isCitizen,
    isCitizen = _ref$isCitizen === void 0 ? false : _ref$isCitizen;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("div", {
    style: {
      marginTop: "10px"
    }
  }, isCitizen ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardHeader, {
    style: {
      fontSize: "24px"
    }
  }, "" + t("BPA_FI_REPORT")) : /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSectionHeader, {
    style: {
      fontSize: "24px"
    }
  }, "" + t("BPA_FI_REPORT")), fiReport.map(function (fiData, index) {
    var _fiData$date, _fiData$date2, _fiData$date3, _fiData$questions, _fiData$questions2;
    return /*#__PURE__*/React__default.createElement("div", {
      style: {
        background: "#FAFAFA",
        border: "1px solid #D6D5D4",
        padding: "8px",
        borderRadius: "4px",
        maxWidth: "950px",
        minWidth: "280px",
        marginBottom: "24px"
      }
    }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.StatusTable, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSectionHeader, {
      style: {
        fontSize: "20px"
      }
    }, (fiReport === null || fiReport === void 0 ? void 0 : fiReport.length) == 1 ? "" + t("BPA_FI_REPORT") : t("BPA_FI_REPORT") + " - " + (index + 1)), /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
      className: "border-none",
      label: "" + t("BPA_FI_DATE_LABEL"),
      text: fiData !== null && fiData !== void 0 && fiData.date ? fiData.date.includes("-") ? ((_fiData$date = fiData.date) === null || _fiData$date === void 0 ? void 0 : _fiData$date.split("-")[2]) + "/" + ((_fiData$date2 = fiData.date) === null || _fiData$date2 === void 0 ? void 0 : _fiData$date2.split("-")[1]) + "/" + ((_fiData$date3 = fiData.date) === null || _fiData$date3 === void 0 ? void 0 : _fiData$date3.split("-")[0]) : fiData === null || fiData === void 0 ? void 0 : fiData.date : "NA"
    }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
      className: "border-none",
      label: "" + t("BPA_FI_TIME_LABEL"),
      text: fiData !== null && fiData !== void 0 && fiData.time ? fiData === null || fiData === void 0 ? void 0 : fiData.time : "NA"
    }), (fiData === null || fiData === void 0 ? void 0 : (_fiData$questions = fiData.questions) === null || _fiData$questions === void 0 ? void 0 : _fiData$questions.length) && (fiData === null || fiData === void 0 ? void 0 : (_fiData$questions2 = fiData.questions) === null || _fiData$questions2 === void 0 ? void 0 : _fiData$questions2.map(function (qstn) {
      return /*#__PURE__*/React__default.createElement("div", {
        style: {
          background: "white",
          border: "1px solid #D6D5D4",
          padding: "8px",
          borderRadius: "4px",
          marginTop: "10px"
        }
      }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
        className: "border-none",
        label: "" + t("" + qstn.question),
        text: qstn !== null && qstn !== void 0 && qstn.value ? qstn === null || qstn === void 0 ? void 0 : qstn.value : "NA"
      }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
        className: "border-none",
        label: "" + t("BPA_ENTER_REMARKS"),
        text: qstn.remarks ? qstn.remarks : "NA"
      }));
    })), /*#__PURE__*/React__default.createElement(DocumentsPreview, {
      documents: getDocuments(fiData === null || fiData === void 0 ? void 0 : fiData.docs),
      svgStyles: {
        width: "100px",
        height: "100px",
        viewBox: "0 0 25 25",
        minWidth: "100px"
      }
    })));
  })));
}

function SelectDocument$1(_ref) {
  var t = _ref.t,
    doc = _ref.document,
    setNocDocuments = _ref.setNocDocuments,
    setError = _ref.setError,
    nocDocuments = _ref.nocDocuments;
  var filteredDocument = nocDocuments === null || nocDocuments === void 0 ? void 0 : nocDocuments.filter(function (item) {
    var _item$documentType;
    return item === null || item === void 0 ? void 0 : (_item$documentType = item.documentType) === null || _item$documentType === void 0 ? void 0 : _item$documentType.includes(doc === null || doc === void 0 ? void 0 : doc.code);
  })[0];
  var tenantId = Digit.ULBService.getStateId();
  var _useState = React.useState();
  var _useState2 = React.useState(null),
    file = _useState2[0],
    setFile = _useState2[1];
  var _useState3 = React.useState(function () {
      return (filteredDocument === null || filteredDocument === void 0 ? void 0 : filteredDocument.fileStoreId) || null;
    }),
    uploadedFile = _useState3[0],
    setUploadedFile = _useState3[1];
  var allowedFileTypes = /(.*?)(jpg|jpeg|png|image|pdf)$/i;
  function selectfile(e) {
    e && setFile(e.file);
  }
  React.useEffect(function () {
    var _doc$dropdownData, _doc$dropdownData$;
    if (doc !== null && doc !== void 0 && (_doc$dropdownData = doc.dropdownData) !== null && _doc$dropdownData !== void 0 && (_doc$dropdownData$ = _doc$dropdownData[0]) !== null && _doc$dropdownData$ !== void 0 && _doc$dropdownData$.code) {
      setNocDocuments(function (prev) {
        var _doc$dropdownData3;
        var filteredDocumentsByDocumentType = prev === null || prev === void 0 ? void 0 : prev.filter(function (item) {
          var _doc$dropdownData2, _doc$dropdownData2$;
          return (item === null || item === void 0 ? void 0 : item.documentType) !== (doc === null || doc === void 0 ? void 0 : (_doc$dropdownData2 = doc.dropdownData) === null || _doc$dropdownData2 === void 0 ? void 0 : (_doc$dropdownData2$ = _doc$dropdownData2[0]) === null || _doc$dropdownData2$ === void 0 ? void 0 : _doc$dropdownData2$.code);
        });
        if ((uploadedFile === null || uploadedFile === void 0 ? void 0 : uploadedFile.length) === 0 || uploadedFile === null) {
          return filteredDocumentsByDocumentType;
        }
        var filteredDocumentsByFileStoreId = filteredDocumentsByDocumentType === null || filteredDocumentsByDocumentType === void 0 ? void 0 : filteredDocumentsByDocumentType.filter(function (item) {
          return (item === null || item === void 0 ? void 0 : item.fileStoreId) !== uploadedFile;
        });
        return [].concat(filteredDocumentsByFileStoreId, [{
          documentType: doc === null || doc === void 0 ? void 0 : (_doc$dropdownData3 = doc.dropdownData) === null || _doc$dropdownData3 === void 0 ? void 0 : _doc$dropdownData3[0].code,
          fileStoreId: uploadedFile,
          documentUid: uploadedFile,
          fileName: (file === null || file === void 0 ? void 0 : file.name) || ""
        }]);
      });
    }
  }, [uploadedFile]);
  React.useEffect(function () {
    (function () {
      try {
        setError(null);
        var _temp5 = function () {
          if (file) {
            var allowedFileTypesRegex = /(.*?)(jpg|jpeg|png|image|pdf)$/i;
            var _temp6 = function () {
              if (file.size >= 5242880) {
                setError(t("CS_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
              } else {
                var _temp7 = function () {
                  if (file !== null && file !== void 0 && file.type && !allowedFileTypesRegex.test(file === null || file === void 0 ? void 0 : file.type)) {
                    setError(t("NOT_SUPPORTED_FILE_TYPE"));
                  } else {
                    var _temp8 = _catch(function () {
                      setUploadedFile(null);
                      return Promise.resolve(Digit.UploadServices.Filestorage("PT", file, Digit.ULBService.getStateId())).then(function (response) {
                        var _response$data, _response$data$files;
                        if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
                          var _response$data2, _response$data2$files;
                          setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
                        } else {
                          setError(t("CS_FILE_UPLOAD_ERROR"));
                        }
                      });
                    }, function () {
                      setError(t("CS_FILE_UPLOAD_ERROR"));
                    });
                    if (_temp8 && _temp8.then) return _temp8.then(function () {});
                  }
                }();
                if (_temp7 && _temp7.then) return _temp7.then(function () {});
              }
            }();
            if (_temp6 && _temp6.then) return _temp6.then(function () {});
          }
        }();
        return _temp5 && _temp5.then ? _temp5.then(function () {}) : void 0;
      } catch (e) {
        Promise.reject(e);
      }
    })();
  }, [file]);
  var getData = function getData(state) {
    var data = Object.fromEntries(state);
    var newArr = Object.values(data);
    selectfile(newArr[newArr.length - 1]);
  };
  return /*#__PURE__*/React__default.createElement("div", {
    style: {}
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, {
    style: {
      width: "98%",
      marginRight: "10px"
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, {
    style: {
      width: "100%"
    }
  }, doc !== null && doc !== void 0 && doc.required ? t("TL_BUTTON_UPLOAD FILE") + "*" : "" + t("TL_BUTTON_UPLOAD FILE")), /*#__PURE__*/React__default.createElement("div", {
    className: "field",
    style: {
      width: "100%"
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.MultiUploadWrapper, {
    module: "NOC",
    tenantId: tenantId,
    getFormState: function getFormState(e) {
      return getData(e);
    },
    t: t,
    allowedFileTypesRegex: allowedFileTypes,
    allowedMaxSizeInMB: 5,
    acceptFiles: "image/*, .pdf, .png, .jpeg, .jpg"
  }))));
}
var NOCDocuments = function NOCDocuments(_ref2) {
  var _bpaActionsDetails$da;
  var t = _ref2.t,
    noc = _ref2.noc,
    docs = _ref2.docs,
    isNoc = _ref2.isNoc,
    applicationData = _ref2.applicationData,
    NOCdata = _ref2.NOCdata,
    bpaActionsDetails = _ref2.bpaActionsDetails;
  var tenantId = Digit.ULBService.getStateId();
  var stateId = Digit.ULBService.getStateId();
  var bpaApplicationStatus = (applicationData === null || applicationData === void 0 ? void 0 : applicationData.status) || "";
  var actions = (bpaActionsDetails === null || bpaActionsDetails === void 0 ? void 0 : (_bpaActionsDetails$da = bpaActionsDetails.data) === null || _bpaActionsDetails$da === void 0 ? void 0 : _bpaActionsDetails$da.nextActions) || [];
  var _Digit$Hooks$obps$use = Digit.Hooks.obps.useMDMS(stateId, "NOC", ["DocumentTypeMapping"], {
      enabled: isNoc
    }),
    nocDocs = _Digit$Hooks$obps$use.data;
  var _Digit$Hooks$obps$use2 = Digit.Hooks.obps.useMDMS(stateId, "BPA", ["DocTypeMapping"], {
      enabled: !isNoc
    }),
    bpaDocs = _Digit$Hooks$obps$use2.data;
  var _Digit$Hooks$obps$use3 = Digit.Hooks.obps.useMDMS(stateId, "common-masters", ["DocumentType"]),
    commonDocs = _Digit$Hooks$obps$use3.data;
  var _useState4 = React.useState([]),
    commonDocMaping = _useState4[0],
    setCommonDocMaping = _useState4[1];
  var _useState5 = React.useState([]),
    nocTaxDocuments = _useState5[0],
    setNocTaxDocuments = _useState5[1];
  var _useState6 = React.useState(false),
    checkEnablingDocs = _useState6[0],
    setCheckEnablingDocs = _useState6[1];
  var _Digit$Hooks$useSessi = Digit.Hooks.useSessionStorage(noc === null || noc === void 0 ? void 0 : noc.nocType, []),
    nocDocuments = _Digit$Hooks$useSessi[0],
    setNocDocuments = _Digit$Hooks$useSessi[1];
  var _useState7 = React.useState(null),
    error = _useState7[0],
    setError = _useState7[1];
  var isEmployee = window.location.href.includes("/employee/");
  React.useEffect(function () {
    var _commonDocs$commonMa;
    setCommonDocMaping(commonDocs === null || commonDocs === void 0 ? void 0 : (_commonDocs$commonMa = commonDocs["common-masters"]) === null || _commonDocs$commonMa === void 0 ? void 0 : _commonDocs$commonMa.DocumentType);
  }, [commonDocs]);
  React.useEffect(function () {
    var _filteredData, _filteredData$, _filteredData$$docTyp;
    var documents = [];
    var filteredData;
    if (isNoc) {
      var _nocDocs$NOC, _nocDocs$NOC$Document;
      filteredData = nocDocs === null || nocDocs === void 0 ? void 0 : (_nocDocs$NOC = nocDocs.NOC) === null || _nocDocs$NOC === void 0 ? void 0 : (_nocDocs$NOC$Document = _nocDocs$NOC.DocumentTypeMapping) === null || _nocDocs$NOC$Document === void 0 ? void 0 : _nocDocs$NOC$Document.filter(function (data) {
        return (data === null || data === void 0 ? void 0 : data.applicationType) === (noc === null || noc === void 0 ? void 0 : noc.applicationType) && (data === null || data === void 0 ? void 0 : data.nocType) === (noc === null || noc === void 0 ? void 0 : noc.nocType);
      });
    } else {
      var _bpaDocs$BPA, _bpaDocs$BPA$DocTypeM;
      filteredData = bpaDocs === null || bpaDocs === void 0 ? void 0 : (_bpaDocs$BPA = bpaDocs.BPA) === null || _bpaDocs$BPA === void 0 ? void 0 : (_bpaDocs$BPA$DocTypeM = _bpaDocs$BPA.DocTypeMapping) === null || _bpaDocs$BPA$DocTypeM === void 0 ? void 0 : _bpaDocs$BPA$DocTypeM.filter(function (data) {
        var _applicationData$addi, _applicationData$addi2;
        return data.WFState == (applicationData === null || applicationData === void 0 ? void 0 : applicationData.status) && data.RiskType == (applicationData === null || applicationData === void 0 ? void 0 : applicationData.riskType) && data.ServiceType == (applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$addi = applicationData.additionalDetails) === null || _applicationData$addi === void 0 ? void 0 : _applicationData$addi.serviceType) && data.applicationType == (applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$addi2 = applicationData.additionalDetails) === null || _applicationData$addi2 === void 0 ? void 0 : _applicationData$addi2.applicationType);
      });
    }
    if ((_filteredData = filteredData) !== null && _filteredData !== void 0 && (_filteredData$ = _filteredData[0]) !== null && _filteredData$ !== void 0 && (_filteredData$$docTyp = _filteredData$.docTypes) !== null && _filteredData$$docTyp !== void 0 && _filteredData$$docTyp[0]) {
      filteredData[0].docTypes[0].nocType = filteredData[0].nocType;
      filteredData[0].docTypes[0].additionalDetails = {
        submissionDetails: noc === null || noc === void 0 ? void 0 : noc.additionalDetails,
        applicationStatus: noc === null || noc === void 0 ? void 0 : noc.applicationStatus,
        appNumberLink: noc === null || noc === void 0 ? void 0 : noc.applicationNo,
        nocNo: noc === null || noc === void 0 ? void 0 : noc.nocNo
      };
      documents.push(filteredData[0].docTypes[0]);
    }
    var documentsList = [];
    if (documents && documents.length > 0) {
      documents.map(function (doc) {
        var code = doc.documentType;
        doc.dropdownData = [];
        commonDocMaping === null || commonDocMaping === void 0 ? void 0 : commonDocMaping.forEach(function (value) {
          var values = value.code.slice(0, code === null || code === void 0 ? void 0 : code.length);
          if (code === values) {
            doc.hasDropdown = true;
            doc.dropdownData.push(value);
          }
        });
        documentsList.push(doc);
      });
      setNocTaxDocuments(documentsList);
    }
  }, [nocDocs, commonDocMaping]);
  React.useEffect(function () {
    if (bpaApplicationStatus === 'NOC_VERIFICATION_INPROGRESS' && (actions === null || actions === void 0 ? void 0 : actions.length) > 0) setCheckEnablingDocs(true);else setCheckEnablingDocs(false);
  }, [applicationData, bpaActionsDetails]);
  return /*#__PURE__*/React__default.createElement("div", {
    style: {
      border: "1px solid #D6D5D4",
      padding: "16px 0px 16px 8px",
      background: "#FAFAFA",
      borderRadius: "5px",
      marginBottom: "24px",
      maxWidth: "950px"
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.StatusTable, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
    label: isEmployee ? "" + t("BPA_" + (noc === null || noc === void 0 ? void 0 : noc.nocType) + "_HEADER") : t("BPA_" + (noc === null || noc === void 0 ? void 0 : noc.nocType) + "_HEADER"),
    labelStyle: {
      fontSize: "20px",
      width: "150%"
    }
  }), NOCdata && NOCdata.map(function (noc, index) {
    if (noc !== null && noc !== void 0 && noc.value) {
      if ((noc === null || noc === void 0 ? void 0 : noc.field) == "STATUS") {
        return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
          className: "border-none",
          label: isEmployee ? "" + t(noc === null || noc === void 0 ? void 0 : noc.title) : t(noc === null || noc === void 0 ? void 0 : noc.title),
          text: noc !== null && noc !== void 0 && noc.value ? t(noc === null || noc === void 0 ? void 0 : noc.value) : t("CS_NA"),
          textStyle: (noc === null || noc === void 0 ? void 0 : noc.value) == "APPROVED" || (noc === null || noc === void 0 ? void 0 : noc.value) == "AUTO_APPROVED" ? {
            color: "#00703C"
          } : {
            color: "#D4351C"
          }
        });
      } else {
        return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
          className: "border-none",
          label: isEmployee ? "" + t(noc === null || noc === void 0 ? void 0 : noc.title) : t(noc === null || noc === void 0 ? void 0 : noc.title),
          text: noc !== null && noc !== void 0 && noc.value ? t(noc === null || noc === void 0 ? void 0 : noc.value) : t("CS_NA")
        });
      }
    }
  })), /*#__PURE__*/React__default.createElement(DocumentsPreview, {
    documents: docs,
    svgStyles: {
      width: "80px",
      height: "100px",
      viewBox: "0 0 25 25",
      minWidth: "80px"
    }
  }), checkEnablingDocs && (nocTaxDocuments === null || nocTaxDocuments === void 0 ? void 0 : nocTaxDocuments.map(function (document, index) {
    return /*#__PURE__*/React__default.createElement(SelectDocument$1, {
      key: index,
      document: document,
      t: t,
      error: error,
      setError: setError,
      setNocDocuments: setNocDocuments,
      nocDocuments: nocDocuments,
      checkEnablingDocs: checkEnablingDocs
    });
  })));
};

var PermissionCheck = function PermissionCheck(_ref) {
  var permissions = _ref.permissions,
    t = _ref.t;
  var _Digit$Hooks$useSessi = Digit.Hooks.useSessionStorage("OBPS_APPROVAL_CHECKS", permissions === null || permissions === void 0 ? void 0 : permissions.map(function (permission) {
      return {
        label: permission,
        checked: false
      };
    })),
    approvalChecks = _Digit$Hooks$useSessi[0],
    setApprovalChecks = _Digit$Hooks$useSessi[1];
  var _Digit$Hooks$useSessi2 = Digit.Hooks.useSessionStorage('OBPS_NEW_APPROVALS', []),
    newApprovals = _Digit$Hooks$useSessi2[0],
    setNewApprovals = _Digit$Hooks$useSessi2[1];
  React.useEffect(function () {
    return function () {
      Digit.SessionStorage.del("OBPS_NEW_APPROVALS");
      Digit.SessionStorage.del("OBPS_APPROVAL_CHECKS");
    };
  }, []);
  var handleAdd = function handleAdd() {
    setNewApprovals([].concat(newApprovals, [{
      label: ''
    }]));
  };
  var handleRemove = function handleRemove(index) {
    var values = [].concat(newApprovals);
    values.splice(index, 1);
    setNewApprovals([].concat(values));
  };
  var handleChange = function handleChange(event, index) {
    setNewApprovals(function () {
      return newApprovals === null || newApprovals === void 0 ? void 0 : newApprovals.map(function (approval, id) {
        if (index === id) {
          var _event$target;
          return {
            label: event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value
          };
        }
        return approval;
      });
    });
  };
  var handleCheck = function handleCheck(event, label, index) {
    var isChecked = event.target.checked;
    setApprovalChecks(function () {
      return approvalChecks === null || approvalChecks === void 0 ? void 0 : approvalChecks.map(function (approval, id) {
        if (index === id) {
          return _extends({}, approval, {
            checked: isChecked
          });
        }
        return approval;
      });
    });
  };
  return /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSubHeader, {
    style: {
      marginBottom: "16px",
      fontSize: "24px"
    }
  }, t("BPA_PERMIT_CONDITIONS")), approvalChecks === null || approvalChecks === void 0 ? void 0 : approvalChecks.map(function (permission, index) {
    return /*#__PURE__*/React__default.createElement(digitUiReactComponents.CheckBox, {
      key: index,
      styles: {
        margin: "20px 0 40px",
        maxWidth: "70%"
      },
      label: permission === null || permission === void 0 ? void 0 : permission.label,
      checked: permission === null || permission === void 0 ? void 0 : permission.checked,
      onChange: function onChange(event) {
        return handleCheck(event, permission === null || permission === void 0 ? void 0 : permission.label, index);
      },
      isLabelFirst: true,
      index: index
    });
  }), newApprovals === null || newApprovals === void 0 ? void 0 : newApprovals.map(function (approval, index) {
    return /*#__PURE__*/React__default.createElement("div", null, " ", /*#__PURE__*/React__default.createElement(digitUiReactComponents.TextInput, {
      key: index,
      value: approval === null || approval === void 0 ? void 0 : approval.label,
      onChange: function onChange(event) {
        return handleChange(event, index);
      },
      textInputStyle: {
        maxWidth: "830px",
        width: "830px"
      },
      placeholder: "Enter permit conditions.........."
    }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.LinkButton, {
      label: /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement("span", null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Close, {
        style: {
          float: "right",
          position: "relative",
          bottom: "32px",
          marginTop: "-21px",
          marginRight: "35%"
        }
      }))),
      style: {},
      onClick: function onClick(e) {
        return handleRemove(index);
      }
    }));
  }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.LinkButton, {
    style: {
      color: "#f47738",
      maxWidth: "10%",
      marginRight: "3%"
    },
    label: t("BPA_ADD_MORE"),
    onClick: handleAdd
  }));
};

function PropertyDocuments(_ref) {
  var documents = _ref.documents,
    _ref$svgStyles = _ref.svgStyles,
    svgStyles = _ref$svgStyles === void 0 ? {} : _ref$svgStyles,
    _ref$isSendBackFlow = _ref.isSendBackFlow,
    isSendBackFlow = _ref$isSendBackFlow === void 0 ? false : _ref$isSendBackFlow;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var _useState = React.useState(function () {
      return [];
    }),
    filesArray = _useState[0],
    setFilesArray = _useState[1];
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var _useState2 = React.useState({}),
    pdfFiles = _useState2[0],
    setPdfFiles = _useState2[1];
  React.useEffect(function () {
    var _acc;
    var acc = [];
    documents === null || documents === void 0 ? void 0 : documents.forEach(function (element, index, array) {
      acc = [].concat(acc, element.values ? element.values : []);
    });
    setFilesArray((_acc = acc) === null || _acc === void 0 ? void 0 : _acc.map(function (value) {
      return value === null || value === void 0 ? void 0 : value.fileStoreId;
    }));
  }, [documents]);
  React.useEffect(function () {
    if (filesArray !== null && filesArray !== void 0 && filesArray.length) {
      Digit.UploadServices.Filefetch(filesArray, Digit.ULBService.getStateId()).then(function (res) {
        setPdfFiles(res === null || res === void 0 ? void 0 : res.data);
      });
    }
  }, [filesArray]);
  var checkLocation = window.location.href.includes("employee/tl") || window.location.href.includes("/obps");
  var isStakeholderApplication = window.location.href.includes("stakeholder");
  return /*#__PURE__*/React__default.createElement("div", {
    style: {
      marginTop: "19px"
    }
  }, !isStakeholderApplication && (documents === null || documents === void 0 ? void 0 : documents.map(function (document, index) {
    var _document$values;
    return /*#__PURE__*/React__default.createElement(React__default.Fragment, {
      key: index
    }, document !== null && document !== void 0 && document.title ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSubHeader, {
      style: checkLocation ? {
        marginTop: "32px",
        marginBottom: "18px",
        color: "#0B0C0C, 100%",
        fontSize: "24px",
        lineHeight: "30px"
      } : {
        marginTop: "32px",
        marginBottom: "8px",
        color: "#505A5F",
        fontSize: "24px"
      }
    }, t(document === null || document === void 0 ? void 0 : document.title)) : null, /*#__PURE__*/React__default.createElement("div", {
      style: {
        display: "flex",
        flexWrap: "wrap",
        justifyContent: "flex-start"
      }
    }, document !== null && document !== void 0 && document.values && (document === null || document === void 0 ? void 0 : document.values.length) > 0 ? document === null || document === void 0 ? void 0 : (_document$values = document.values) === null || _document$values === void 0 ? void 0 : _document$values.map(function (value, index) {
      var _pdfFiles$value$fileS, _value$documentType;
      return /*#__PURE__*/React__default.createElement("a", {
        target: "_",
        href: (_pdfFiles$value$fileS = pdfFiles[value.fileStoreId]) === null || _pdfFiles$value$fileS === void 0 ? void 0 : _pdfFiles$value$fileS.split(",")[0],
        style: {
          minWidth: "80px",
          marginRight: "10px",
          maxWidth: "100px",
          height: "auto"
        },
        key: index
      }, /*#__PURE__*/React__default.createElement("div", {
        style: {
          display: "flex",
          justifyContent: "center"
        }
      }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.PDFSvg, null)), /*#__PURE__*/React__default.createElement("p", {
        style: checkLocation ? {
          marginTop: "8px",
          fontWeight: "bold",
          fontSize: "16px",
          lineHeight: "19px",
          color: "#505A5F",
          textAlign: "center"
        } : {
          marginTop: "8px",
          fontWeight: "bold"
        }
      }, t(value === null || value === void 0 ? void 0 : value.title)), isSendBackFlow ? value !== null && value !== void 0 && (_value$documentType = value.documentType) !== null && _value$documentType !== void 0 && _value$documentType.includes("NOC") ? /*#__PURE__*/React__default.createElement("p", {
        style: {
          textAlign: "center"
        }
      }, t(value === null || value === void 0 ? void 0 : value.documentType.split(".")[1])) : /*#__PURE__*/React__default.createElement("p", {
        style: {
          textAlign: "center"
        }
      }, t(value === null || value === void 0 ? void 0 : value.documentType)) : "");
    }) : !window.location.href.includes("citizen") && /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement("p", null, t("BPA_NO_DOCUMENTS_UPLOADED_LABEL")))));
  })), isStakeholderApplication && (documents === null || documents === void 0 ? void 0 : documents.map(function (document, index) {
    var _document$values2;
    return /*#__PURE__*/React__default.createElement(React__default.Fragment, {
      key: index
    }, document !== null && document !== void 0 && document.title ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSubHeader, {
      style: {
        marginTop: "32px",
        marginBottom: "8px",
        color: "#505A5F",
        fontSize: "24px"
      }
    }, t(document === null || document === void 0 ? void 0 : document.title)) : null, /*#__PURE__*/React__default.createElement("div", null, document !== null && document !== void 0 && document.values && (document === null || document === void 0 ? void 0 : document.values.length) > 0 ? document === null || document === void 0 ? void 0 : (_document$values2 = document.values) === null || _document$values2 === void 0 ? void 0 : _document$values2.map(function (value, index) {
      var _pdfFiles$value$fileS2;
      return /*#__PURE__*/React__default.createElement("a", {
        target: "_",
        href: (_pdfFiles$value$fileS2 = pdfFiles[value.fileStoreId]) === null || _pdfFiles$value$fileS2 === void 0 ? void 0 : _pdfFiles$value$fileS2.split(",")[0],
        style: {
          minWidth: svgStyles !== null && svgStyles !== void 0 && svgStyles.minWidth ? svgStyles === null || svgStyles === void 0 ? void 0 : svgStyles.minWidth : "160px",
          marginRight: "20px"
        },
        key: index
      }, /*#__PURE__*/React__default.createElement("div", {
        style: {
          maxWidth: "940px",
          padding: "8px",
          borderRadius: "4px",
          border: "1px solid #D6D5D4",
          background: "#FAFAFA"
        }
      }, /*#__PURE__*/React__default.createElement("p", {
        style: {
          marginTop: "8px",
          fontWeight: "bold",
          marginBottom: "10px"
        }
      }, t(value === null || value === void 0 ? void 0 : value.title)), value !== null && value !== void 0 && value.docInfo ? /*#__PURE__*/React__default.createElement("div", {
        style: {
          fontSize: "12px",
          color: "#505A5F",
          fontWeight: 400,
          lineHeight: "15px",
          marginBottom: "10px"
        }
      }, "" + t(value === null || value === void 0 ? void 0 : value.docInfo)) : null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.PDFSvg, null), /*#__PURE__*/React__default.createElement("p", {
        style: {
          marginTop: "8px",
          fontSize: "16px",
          lineHeight: "19px",
          color: "#505A5F",
          fontWeight: "400"
        }
      }, "" + t(value === null || value === void 0 ? void 0 : value.title))));
    }) : !window.location.href.includes("citizen") && /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement("p", null, t("BPA_NO_DOCUMENTS_UPLOADED_LABEL")))));
  })));
}

function PropertyEstimates(_ref) {
  var taxHeadEstimatesCalculation = _ref.taxHeadEstimatesCalculation;
  var taxHeadEstimates = taxHeadEstimatesCalculation.taxHeadEstimates;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  return /*#__PURE__*/React__default.createElement("div", {
    style: {
      marginTop: "40px"
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.StatusTable, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
    label: t("ES_PT_TITLE_TAX_HEADS"),
    text: t("ES_PT_TITLE_AMOUNT"),
    className: "border-none",
    textStyle: {
      fontWeight: "bold"
    }
  }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.BreakLine, {
    style: {
      margin: "16px 0",
      width: "40%"
    }
  }), taxHeadEstimates === null || taxHeadEstimates === void 0 ? void 0 : taxHeadEstimates.map(function (estimate, index) {
    return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
      key: t(estimate.taxHeadCode),
      label: t(estimate.taxHeadCode),
      text: "\u20B9 " + estimate.estimateAmount || "N/A",
      last: index === (taxHeadEstimates === null || taxHeadEstimates === void 0 ? void 0 : taxHeadEstimates.length) - 1,
      className: "border-none",
      textStyle: {
        color: "#505A5F"
      },
      labelStyle: {
        color: "#505A5F"
      }
    });
  }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.BreakLine, {
    style: {
      margin: "16px 0",
      width: "40%"
    }
  }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
    label: t("ES_PT_TITLE_TOTAL_DUE_AMOUNT"),
    text: "\u20B9 " + (taxHeadEstimatesCalculation === null || taxHeadEstimatesCalculation === void 0 ? void 0 : taxHeadEstimatesCalculation.totalAmount) || "N/A",
    className: "border-none",
    textStyle: {
      fontSize: "24px",
      fontWeight: "bold"
    }
  })));
}

function PropertyFloors(_ref) {
  var floors = _ref.floors;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, floors.map(function (floor) {
    var _floor$values;
    return /*#__PURE__*/React__default.createElement("div", {
      key: t(floor === null || floor === void 0 ? void 0 : floor.title),
      style: {
        marginTop: "19px"
      }
    }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSubHeader, {
      style: {
        marginBottom: "8px",
        color: "#505A5F",
        fontSize: "24px"
      }
    }, t(floor === null || floor === void 0 ? void 0 : floor.title)), floor === null || floor === void 0 ? void 0 : (_floor$values = floor.values) === null || _floor$values === void 0 ? void 0 : _floor$values.map(function (value, index) {
      var _value$values;
      return /*#__PURE__*/React__default.createElement(React__default.Fragment, {
        key: index
      }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSectionHeader, {
        style: {
          marginBottom: "16px",
          color: "#505A5F",
          fontSize: "16px",
          marginTop: index !== 0 ? "16px" : "revert"
        }
      }, t(value.title)), /*#__PURE__*/React__default.createElement(digitUiReactComponents.StatusTable, {
        style: {
          position: "relative",
          padding: "8px"
        }
      }, /*#__PURE__*/React__default.createElement("div", {
        style: {
          border: "1px solid #D6D5D4",
          padding: "16px",
          marginTop: "8px",
          borderRadius: "4px",
          background: "#FAFAFA",
          maxWidth: "100%"
        }
      }, value === null || value === void 0 ? void 0 : (_value$values = value.values) === null || _value$values === void 0 ? void 0 : _value$values.map(function (value, index) {
        var _value$values2;
        if (value.map === true && value.value !== "N/A") {
          return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
            key: t(value.title),
            label: t(value.title),
            text: /*#__PURE__*/React__default.createElement("img", {
              src: t(value.value),
              alt: ""
            })
          });
        }
        return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
          key: t(value.title),
          label: t(value.title),
          text: t(value.value) || "N/A",
          last: index === (value === null || value === void 0 ? void 0 : (_value$values2 = value.values) === null || _value$values2 === void 0 ? void 0 : _value$values2.length) - 1,
          caption: value.caption,
          className: "border-none"
        });
      }))));
    }));
  }));
}

function PropertyOwners(_ref) {
  var owners = _ref.owners;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var checkOwnerLength = (owners === null || owners === void 0 ? void 0 : owners.length) || 1;
  var cardStyles = {
    marginTop: "19px"
  };
  var statusTableStyles = {
    position: "relative",
    padding: "8px"
  };
  var rowContainerStyle = {
    justifyContent: "space-between",
    fontSize: "16px",
    lineHeight: "19px",
    color: "#0B0C0C"
  };
  if ( Number(checkOwnerLength) > 1) {
    cardStyles = {
      marginTop: "19px",
      background: "#FAFAFA",
      border: "1px solid #D6D5D4",
      borderRadius: "4px",
      padding: "8px",
      lineHeight: "19px",
      maxWidth: "600px",
      minWidth: "280px"
    };
  } else if ( !(Number(checkOwnerLength) > 1)) {
    cardStyles = {
      marginTop: "19px",
      lineHeight: "19px",
      maxWidth: "600px",
      minWidth: "280px"
    };
    statusTableStyles = {
      position: "relative",
      marginTop: "19px"
    };
  }
  if (window.location.href.includes("obps")) {
    cardStyles = _extends({}, cardStyles, {
      maxWidth: "950px"
    });
    cardStyles = _extends({}, cardStyles, {
      maxWidth: "950px"
    });
    rowContainerStyle = {};
  }
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, owners.map(function (owner, index) {
    var _owner$values;
    return /*#__PURE__*/React__default.createElement("div", {
      key: t(owner === null || owner === void 0 ? void 0 : owner.title),
      style: cardStyles
    }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSubHeader, {
      style:  Number(checkOwnerLength) > 1 ? {
        marginBottom: "8px",
        paddingBottom: "9px",
        color: "#0B0C0C",
        fontSize: "16px",
        lineHeight: "19px"
      } : {
        marginBottom: "8px",
        color: "#505A5F",
        fontSize: "24px"
      }
    },  Number(checkOwnerLength) > 1 ? t(owner === null || owner === void 0 ? void 0 : owner.title) + " " + (index + 1) : t(owner === null || owner === void 0 ? void 0 : owner.title)), /*#__PURE__*/React__default.createElement(React__default.Fragment, {
      key: index
    }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.StatusTable, {
      style: statusTableStyles
    }, /*#__PURE__*/React__default.createElement("div", {
      style: {
        maxWidth: "640px",
        top: 0,
        left: 0,
        bottom: 0,
        right: 0,
        width: "auto"
      }
    }), owner === null || owner === void 0 ? void 0 : (_owner$values = owner.values) === null || _owner$values === void 0 ? void 0 : _owner$values.map(function (value, index) {
      var _value$values;
      if (value.map === true && value.value !== "N/A") {
        return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
          key: t(value.title),
          label: t(value.title),
          text: /*#__PURE__*/React__default.createElement("img", {
            src: t(value.value),
            alt: ""
          })
        });
      }
      return /*#__PURE__*/React__default.createElement("span", null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
        key: t(value.title),
        label:  "" + t(value.title),
        text: t(value.value) || "N/A",
        last: index === (value === null || value === void 0 ? void 0 : (_value$values = value.values) === null || _value$values === void 0 ? void 0 : _value$values.length) - 1,
        caption: value.caption,
        className: "border-none",
        textStyle: value.textStyle
        ,
        rowContainerStyle: rowContainerStyle
      }));
    }))));
  }));
}

var ScruntinyDetails = function ScruntinyDetails(_ref) {
  var _scrutinyDetails$valu, _scrutinyDetails$perm, _scrutinyDetails$scru;
  var scrutinyDetails = _ref.scrutinyDetails;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var getTextValues = function getTextValues(data) {
    if (data !== null && data !== void 0 && data.value && data !== null && data !== void 0 && data.isTransLate) return /*#__PURE__*/React__default.createElement("span", {
      style: {
        color: "#00703C"
      }
    }, t(data === null || data === void 0 ? void 0 : data.value));else if (data !== null && data !== void 0 && data.value && data !== null && data !== void 0 && data.isTransLate) return t(data === null || data === void 0 ? void 0 : data.value);else if (data !== null && data !== void 0 && data.value) return data === null || data === void 0 ? void 0 : data.value;else t("NA");
  };
  return /*#__PURE__*/React__default.createElement(React.Fragment, null, !(scrutinyDetails !== null && scrutinyDetails !== void 0 && scrutinyDetails.isChecklist) && /*#__PURE__*/React__default.createElement("div", {
    style: {
      background: "#FAFAFA",
      border: "1px solid #D6D5D4",
      padding: "8px",
      borderRadius: "4px",
      maxWidth: "950px",
      minWidth: "280px"
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.StatusTable, null, /*#__PURE__*/React__default.createElement("div", null, scrutinyDetails === null || scrutinyDetails === void 0 ? void 0 : (_scrutinyDetails$valu = scrutinyDetails.values) === null || _scrutinyDetails$valu === void 0 ? void 0 : _scrutinyDetails$valu.map(function (value, index) {
    if (value !== null && value !== void 0 && value.isUnit) return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
      className: "border-none",
      textStyle: (value === null || value === void 0 ? void 0 : value.value) === "Paid" ? {
        color: "darkgreen"
      } : (value === null || value === void 0 ? void 0 : value.value) === "Unpaid" ? {
        color: "red"
      } : {},
      key: "" + value.title,
      label: "" + t("" + value.title),
      text: value !== null && value !== void 0 && value.value ? getTextValues(value) + " " + t(value === null || value === void 0 ? void 0 : value.isUnit) : t("NA"),
      labelStyle: value !== null && value !== void 0 && value.isHeader ? {
        fontSize: "20px"
      } : {}
    });else if (value !== null && value !== void 0 && value.isHeader && !(value !== null && value !== void 0 && value.isUnit)) return /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSubHeader, {
      style: {
        fontSize: "20px",
        paddingBottom: "10px"
      }
    }, t(value === null || value === void 0 ? void 0 : value.title));else if (value !== null && value !== void 0 && value.isSubTitle && !(value !== null && value !== void 0 && value.isUnit)) return /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSubHeader, {
      style: {
        fontSize: "20px",
        paddingBottom: "10px",
        margin: "0px"
      }
    }, t(value === null || value === void 0 ? void 0 : value.title));else return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
      className: "border-none",
      textStyle: (value === null || value === void 0 ? void 0 : value.value) === "Paid" ? {
        color: "darkgreen"
      } : (value === null || value === void 0 ? void 0 : value.value) === "Unpaid" ? {
        color: "red"
      } : {},
      key: "" + value.title,
      label: "" + t("" + value.title),
      text: getTextValues(value),
      labelStyle: value !== null && value !== void 0 && value.isHeader ? {
        fontSize: "20px"
      } : {}
    });
  }), scrutinyDetails === null || scrutinyDetails === void 0 ? void 0 : (_scrutinyDetails$perm = scrutinyDetails.permit) === null || _scrutinyDetails$perm === void 0 ? void 0 : _scrutinyDetails$perm.map(function (value, ind) {
    return /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, {
      style: {
        fontWeight: "400"
      }
    }, value === null || value === void 0 ? void 0 : value.title);
  })), /*#__PURE__*/React__default.createElement("div", null, scrutinyDetails === null || scrutinyDetails === void 0 ? void 0 : (_scrutinyDetails$scru = scrutinyDetails.scruntinyDetails) === null || _scrutinyDetails$scru === void 0 ? void 0 : _scrutinyDetails$scru.map(function (report, index) {
    return /*#__PURE__*/React__default.createElement(React.Fragment, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
      className: "border-none",
      label: "" + t(report === null || report === void 0 ? void 0 : report.title),
      labelStyle: {
        width: "150%"
      }
    }), /*#__PURE__*/React__default.createElement("a", {
      href: report === null || report === void 0 ? void 0 : report.value
    }, " ", /*#__PURE__*/React__default.createElement(digitUiReactComponents.PDFSvg, null), " "), /*#__PURE__*/React__default.createElement("p", {
      style: {
        margin: "8px 0px",
        fontWeight: "bold",
        fontSize: "16px",
        lineHeight: "19px",
        color: "#505A5F"
      }
    }, t(report === null || report === void 0 ? void 0 : report.text)));
  })))));
};

var SubOccupancyTable = function SubOccupancyTable(_ref) {
  var _edcrDetails$values, _edcrDetails$subOccup, _edcrDetails$subOccup2, _edcrDetails$subOccup3, _edcrDetails$subOccup4;
  var edcrDetails = _ref.edcrDetails,
    applicationData = _ref.applicationData;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var isMobile = window.Digit.Utils.browser.isMobile();
  var tableHeader = [{
    name: "BPA_TABLE_COL_FLOOR",
    id: "Floor"
  }, {
    name: "BPA_TABLE_COL_LEVEL",
    id: "Level"
  }, {
    name: "BPA_TABLE_COL_OCCUPANCY",
    id: "Occupancy"
  }, {
    name: "BPA_TABLE_COL_BUILDUPAREA",
    id: "BuildupArea"
  }, {
    name: "BPA_TABLE_COL_FLOORAREA",
    id: "FloorArea"
  }, {
    name: "BPA_TABLE_COL_CARPETAREA",
    id: "CarpetArea"
  }];
  var accessData = function accessData(plot) {
    var name = plot;
    return function (originalRow, rowIndex, columns) {
      return originalRow[name];
    };
  };
  var tableColumns = React.useMemo(function () {
    return tableHeader.map(function (ob) {
      return {
        Header: t("" + ob.name),
        accessor: accessData(ob.id),
        id: ob.id
      };
    });
  });
  function getFloorData(block) {
    var _block$building;
    var floors = [];
    block === null || block === void 0 ? void 0 : (_block$building = block.building) === null || _block$building === void 0 ? void 0 : _block$building.floors.map(function (ob) {
      var _ob$occupancies, _ob$occupancies$, _ob$occupancies2, _ob$occupancies2$, _ob$occupancies3, _ob$occupancies3$, _ob$occupancies4, _ob$occupancies4$;
      floors.push({
        Floor: t("BPA_FLOOR_NAME_" + ob.number),
        Level: ob.number,
        Occupancy: t("" + ((_ob$occupancies = ob.occupancies) === null || _ob$occupancies === void 0 ? void 0 : (_ob$occupancies$ = _ob$occupancies[0]) === null || _ob$occupancies$ === void 0 ? void 0 : _ob$occupancies$.type)),
        BuildupArea: (_ob$occupancies2 = ob.occupancies) === null || _ob$occupancies2 === void 0 ? void 0 : (_ob$occupancies2$ = _ob$occupancies2[0]) === null || _ob$occupancies2$ === void 0 ? void 0 : _ob$occupancies2$.builtUpArea,
        FloorArea: ((_ob$occupancies3 = ob.occupancies) === null || _ob$occupancies3 === void 0 ? void 0 : (_ob$occupancies3$ = _ob$occupancies3[0]) === null || _ob$occupancies3$ === void 0 ? void 0 : _ob$occupancies3$.floorArea) || 0,
        CarpetArea: ((_ob$occupancies4 = ob.occupancies) === null || _ob$occupancies4 === void 0 ? void 0 : (_ob$occupancies4$ = _ob$occupancies4[0]) === null || _ob$occupancies4$ === void 0 ? void 0 : _ob$occupancies4$.CarpetArea) || 0,
        key: t("BPA_FLOOR_NAME_" + ob.number)
      });
    });
    return floors;
  }
  var stringReplaceAll = function stringReplaceAll(str, searcher, replaceWith) {
    if (str === void 0) {
      str = "";
    }
    if (searcher === void 0) {
      searcher = "";
    }
    if (replaceWith === void 0) {
      replaceWith = "";
    }
    if (searcher == "") return str;
    while (str.includes(searcher)) {
      str = str.replace(searcher, replaceWith);
    }
    return str;
  };
  function getSubOccupancyValues(index) {
    var _applicationData$land;
    var values = applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$land = applicationData.landInfo) === null || _applicationData$land === void 0 ? void 0 : _applicationData$land.unit;
    var returnValue = "";
    if ((values === null || values === void 0 ? void 0 : values.length) > 0) {
      var _values$index, _values$index$usageCa;
      var splitArray = (_values$index = values[index]) === null || _values$index === void 0 ? void 0 : (_values$index$usageCa = _values$index.usageCategory) === null || _values$index$usageCa === void 0 ? void 0 : _values$index$usageCa.split(',');
      if (splitArray !== null && splitArray !== void 0 && splitArray.length) {
        var returnValueArray = splitArray.map(function (data) {
          return data ? "" + t("BPA_SUBOCCUPANCYTYPE_" + stringReplaceAll(data === null || data === void 0 ? void 0 : data.toUpperCase(), "-", "_")) : "NA";
        });
        returnValue = returnValueArray.join(', ');
      }
    }
    return returnValue ? returnValue : "NA";
  }
  return /*#__PURE__*/React__default.createElement(React.Fragment, null, /*#__PURE__*/React__default.createElement("div", {
    style: {
      background: "#FAFAFA",
      border: "1px solid #D6D5D4",
      padding: "8px",
      borderRadius: "4px",
      maxWidth: "950px",
      minWidth: "280px"
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.StatusTable, null, edcrDetails === null || edcrDetails === void 0 ? void 0 : (_edcrDetails$values = edcrDetails.values) === null || _edcrDetails$values === void 0 ? void 0 : _edcrDetails$values.map(function (value, index) {
    if (value !== null && value !== void 0 && value.isHeader) return /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSubHeader, {
      style: {
        fontSize: "20px",
        paddingBottom: "10px"
      }
    }, t(value === null || value === void 0 ? void 0 : value.title));else return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
      className: "border-none",
      labelStyle: {
        width: "100%",
        fontSize: "20px"
      },
      key: "" + value.title,
      label: "" + t("" + value.title),
      text: value !== null && value !== void 0 && value.value ? value === null || value === void 0 ? void 0 : value.value : ""
    });
  })), edcrDetails === null || edcrDetails === void 0 ? void 0 : (_edcrDetails$subOccup = edcrDetails.subOccupancyTableDetails) === null || _edcrDetails$subOccup === void 0 ? void 0 : (_edcrDetails$subOccup2 = _edcrDetails$subOccup[0]) === null || _edcrDetails$subOccup2 === void 0 ? void 0 : (_edcrDetails$subOccup3 = _edcrDetails$subOccup2.value) === null || _edcrDetails$subOccup3 === void 0 ? void 0 : (_edcrDetails$subOccup4 = _edcrDetails$subOccup3.planDetail) === null || _edcrDetails$subOccup4 === void 0 ? void 0 : _edcrDetails$subOccup4.blocks.map(function (block, index) {
    var _edcrDetails$subOccup5, _edcrDetails$subOccup6, _edcrDetails$subOccup7, _edcrDetails$subOccup8, _edcrDetails$subOccup9;
    return /*#__PURE__*/React__default.createElement("div", {
      key: index,
      style: (edcrDetails === null || edcrDetails === void 0 ? void 0 : (_edcrDetails$subOccup5 = edcrDetails.subOccupancyTableDetails) === null || _edcrDetails$subOccup5 === void 0 ? void 0 : (_edcrDetails$subOccup6 = _edcrDetails$subOccup5[0]) === null || _edcrDetails$subOccup6 === void 0 ? void 0 : (_edcrDetails$subOccup7 = _edcrDetails$subOccup6.value) === null || _edcrDetails$subOccup7 === void 0 ? void 0 : (_edcrDetails$subOccup8 = _edcrDetails$subOccup7.planDetail) === null || _edcrDetails$subOccup8 === void 0 ? void 0 : (_edcrDetails$subOccup9 = _edcrDetails$subOccup8.blocks) === null || _edcrDetails$subOccup9 === void 0 ? void 0 : _edcrDetails$subOccup9.length) > 0 ? {
        marginBottom: "30px",
        background: "#FAFAFA",
        border: "1px solid #D6D5D4",
        padding: "8px",
        borderRadius: "4px",
        maxWidth: "950px",
        minWidth: "280px"
      } : {
        marginBottom: "30px"
      }
    }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSubHeader, {
      style: {
        marginBottom: "8px",
        paddingBottom: "9px",
        color: "#0B0C0C",
        fontSize: "18px",
        lineHeight: "19px"
      }
    }, t("BPA_BLOCK_SUBHEADER"), " ", index + 1), /*#__PURE__*/React__default.createElement(digitUiReactComponents.StatusTable, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
      className: "border-none",
      textStyle: {
        wordBreak: "break-word"
      },
      label: "" + t("BPA_SUB_OCCUPANCY_LABEL"),
      text: getSubOccupancyValues(index)
    })), /*#__PURE__*/React__default.createElement("div", {
      style: window.location.href.includes("citizen") || isMobile ? {
        overflow: "scroll"
      } : {
        maxWidth: "950px",
        maxHeight: "280px"
      }
    }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Table, {
      className: "customTable table-fixed-first-column table-border-style",
      t: t,
      disableSort: false,
      autoSort: true,
      manualPagination: false,
      isPaginationRequired: false,
      initSortId: "S N ",
      data: getFloorData(block),
      columns: tableColumns,
      getCellProps: function getCellProps(cellInfo) {
        return {
          style: {}
        };
      }
    })));
  })));
};

var Reason = function Reason(_ref) {
  var headComment = _ref.headComment,
    otherComment = _ref.otherComment;
  return /*#__PURE__*/React__default.createElement("div", {
    className: "checkpoint-comments-wrap"
  }, /*#__PURE__*/React__default.createElement("h4", null, headComment), /*#__PURE__*/React__default.createElement("p", null, otherComment));
};

var TLCaption = function TLCaption(_ref) {
  var _data$wfComment, _data$thumbnailsToSho, _data$thumbnailsToSho2;
  var data = _ref.data,
    OpenImage = _ref.OpenImage;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  return /*#__PURE__*/React__default.createElement("div", null, data.date && /*#__PURE__*/React__default.createElement("p", null, data.date), /*#__PURE__*/React__default.createElement("p", null, data.name), data.mobileNumber && /*#__PURE__*/React__default.createElement(digitUiReactComponents.TelePhone, {
    mobile: data.mobileNumber
  }), data.source && /*#__PURE__*/React__default.createElement("p", null, t("ES_APPLICATION_DETAILS_APPLICATION_CHANNEL_" + data.source.toUpperCase())), data.comment && /*#__PURE__*/React__default.createElement(Reason, {
    otherComment: data === null || data === void 0 ? void 0 : data.otherComment,
    headComment: data === null || data === void 0 ? void 0 : data.comment
  }), data !== null && data !== void 0 && data.wfComment ? /*#__PURE__*/React__default.createElement("div", null, data === null || data === void 0 ? void 0 : (_data$wfComment = data.wfComment) === null || _data$wfComment === void 0 ? void 0 : _data$wfComment.map(function (e) {
    return /*#__PURE__*/React__default.createElement("div", {
      className: "TLComments"
    }, /*#__PURE__*/React__default.createElement("h3", null, t("WF_COMMON_COMMENTS")), /*#__PURE__*/React__default.createElement("p", null, e));
  })) : null, (data === null || data === void 0 ? void 0 : (_data$thumbnailsToSho = data.thumbnailsToShow) === null || _data$thumbnailsToSho === void 0 ? void 0 : (_data$thumbnailsToSho2 = _data$thumbnailsToSho.thumbs) === null || _data$thumbnailsToSho2 === void 0 ? void 0 : _data$thumbnailsToSho2.length) > 0 ? /*#__PURE__*/React__default.createElement("div", {
    className: "TLComments"
  }, /*#__PURE__*/React__default.createElement("h3", null, t("CS_COMMON_ATTACHMENTS")), /*#__PURE__*/React__default.createElement(digitUiReactComponents.DisplayPhotos, {
    srcs: data === null || data === void 0 ? void 0 : data.thumbnailsToShow.thumbs,
    onClick: function onClick(src, index) {
      OpenImage(src, index, data === null || data === void 0 ? void 0 : data.thumbnailsToShow);
    }
  })) : null);
};

function TLTradeAccessories(_ref) {
  var units = _ref.units;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, units.map(function (unit, index) {
    var _unit$values;
    return (
      /*#__PURE__*/
      React__default.createElement("div", {
        key: t(unit === null || unit === void 0 ? void 0 : unit.title),
        style: {
          marginTop: "19px",
          background: "#FAFAFA",
          border: "1px solid #D6D5D4",
          borderRadius: "4px",
          padding: "8px",
          lineHeight: "19px",
          maxWidth: "600px",
          minWidth: "280px"
        }
      }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSubHeader, {
        style: {
          marginBottom: "8px",
          paddingBottom: "9px",
          color: "#0B0C0C",
          fontSize: "16px",
          lineHeight: "19px"
        }
      }, t(unit === null || unit === void 0 ? void 0 : unit.title) + " " + (index + 1)), /*#__PURE__*/React__default.createElement(React__default.Fragment, {
        key: index
      }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.StatusTable, {
        style: {
          position: "relative",
          marginTop: "19px"
        }
      }, /*#__PURE__*/React__default.createElement("div", {
        style: {
          position: "absolute",
          maxWidth: "640px",
          top: 0,
          left: 0,
          bottom: 0,
          right: 0,
          width: "auto"
        }
      }), unit === null || unit === void 0 ? void 0 : (_unit$values = unit.values) === null || _unit$values === void 0 ? void 0 : _unit$values.map(function (value, index) {
        var _value$values;
        if (value.map === true && value.value !== "N/A") {
          return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
            key: t(value.title),
            label: t(value.title),
            text: /*#__PURE__*/React__default.createElement("img", {
              src: t(value.value),
              alt: ""
            })
          });
        }
        return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
          key: t(value.title),
          label: t(value.title) + ":",
          text: t(value.value) || "N/A",
          last: index === (value === null || value === void 0 ? void 0 : (_value$values = value.values) === null || _value$values === void 0 ? void 0 : _value$values.length) - 1,
          caption: value.caption,
          className: "border-none"
          ,
          rowContainerStyle: {
            justifyContent: "space-between",
            fontSize: "16px",
            lineHeight: "19px",
            color: "#0B0C0C"
          }
        });
      }))))
    );
  }));
}

function TLTradeUnits(_ref) {
  var units = _ref.units;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, units.map(function (unit, index) {
    var _unit$values;
    return (
      /*#__PURE__*/
      React__default.createElement("div", {
        key: t(unit === null || unit === void 0 ? void 0 : unit.title),
        style: {
          marginTop: "19px",
          background: "#FAFAFA",
          border: "1px solid #D6D5D4",
          borderRadius: "4px",
          padding: "8px",
          lineHeight: "19px",
          maxWidth: "600px",
          minWidth: "280px"
        }
      }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSubHeader, {
        style: {
          marginBottom: "9px",
          paddingBottom: "9px",
          color: "#0B0C0C",
          fontSize: "16px",
          lineHeight: "19px"
        }
      }, t(unit === null || unit === void 0 ? void 0 : unit.title) + " " + (index + 1)), /*#__PURE__*/React__default.createElement(React__default.Fragment, {
        key: index
      }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.StatusTable, {
        style: {
          position: "relative",
          marginTop: "19px"
        }
      }, /*#__PURE__*/React__default.createElement("div", {
        style: {
          position: "absolute",
          maxWidth: "640px",
          top: 0,
          left: 0,
          bottom: 0,
          right: 0,
          width: "auto"
        }
      }), unit === null || unit === void 0 ? void 0 : (_unit$values = unit.values) === null || _unit$values === void 0 ? void 0 : _unit$values.map(function (value, index) {
        var _value$values;
        if (value.map === true && value.value !== "N/A") {
          return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
            key: t(value.title),
            label: t(value.title),
            text: /*#__PURE__*/React__default.createElement("img", {
              src: t(value.value),
              alt: ""
            })
          });
        }
        return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
          key: t(value.title),
          label: t(value.title) + ":",
          text: t(value.value) || "NA",
          last: index === (value === null || value === void 0 ? void 0 : (_value$values = value.values) === null || _value$values === void 0 ? void 0 : _value$values.length) - 1,
          caption: value.caption,
          className: "border-none"
          ,
          rowContainerStyle: {
            justifyContent: "space-between",
            fontSize: "16px",
            lineHeight: "19px",
            color: "#0B0C0C"
          }
        });
      }))))
    );
  }));
}

function ApplicationDetailsContent(_ref) {
  var _applicationDetails$a, _workflowDetails$data3, _workflowDetails$data4, _workflowDetails$data5, _workflowDetails$data6, _workflowDetails$data7, _workflowDetails$data8, _workflowDetails$data9, _workflowDetails$data10, _workflowDetails$data11, _workflowDetails$data12;
  var applicationDetails = _ref.applicationDetails,
    workflowDetails = _ref.workflowDetails,
    isDataLoading = _ref.isDataLoading,
    applicationData = _ref.applicationData,
    timelineStatusPrefix = _ref.timelineStatusPrefix,
    _ref$showTimeLine = _ref.showTimeLine,
    showTimeLine = _ref$showTimeLine === void 0 ? true : _ref$showTimeLine,
    _ref$statusAttribute = _ref.statusAttribute,
    statusAttribute = _ref$statusAttribute === void 0 ? "status" : _ref$statusAttribute,
    paymentsList = _ref.paymentsList;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  function OpenImage(imageSource, index, thumbnailsToShow) {
    var _thumbnailsToShow$ful;
    window.open(thumbnailsToShow === null || thumbnailsToShow === void 0 ? void 0 : (_thumbnailsToShow$ful = thumbnailsToShow.fullImage) === null || _thumbnailsToShow$ful === void 0 ? void 0 : _thumbnailsToShow$ful[0], "_blank");
  }
  var getTimelineCaptions = function getTimelineCaptions(checkpoint) {
    if (checkpoint.state === "OPEN" || checkpoint.status === "INITIATED" && !window.location.href.includes("/obps/")) {
      var _applicationData$audi;
      var caption = {
        date: Digit.DateUtils.ConvertTimestampToDate(applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$audi = applicationData.auditDetails) === null || _applicationData$audi === void 0 ? void 0 : _applicationData$audi.createdTime),
        source: (applicationData === null || applicationData === void 0 ? void 0 : applicationData.channel) || ""
      };
      return /*#__PURE__*/React__default.createElement(TLCaption, {
        data: caption
      });
    } else if (window.location.href.includes("/obps/") || window.location.href.includes("/noc/")) {
      var _checkpoint$auditDeta, _checkpoint$assignes, _checkpoint$assignes$, _checkpoint$assignes2, _checkpoint$assignes3;
      var _caption = {
        date: checkpoint === null || checkpoint === void 0 ? void 0 : (_checkpoint$auditDeta = checkpoint.auditDetails) === null || _checkpoint$auditDeta === void 0 ? void 0 : _checkpoint$auditDeta.lastModified,
        name: checkpoint === null || checkpoint === void 0 ? void 0 : (_checkpoint$assignes = checkpoint.assignes) === null || _checkpoint$assignes === void 0 ? void 0 : (_checkpoint$assignes$ = _checkpoint$assignes[0]) === null || _checkpoint$assignes$ === void 0 ? void 0 : _checkpoint$assignes$.name,
        mobileNumber: checkpoint === null || checkpoint === void 0 ? void 0 : (_checkpoint$assignes2 = checkpoint.assignes) === null || _checkpoint$assignes2 === void 0 ? void 0 : (_checkpoint$assignes3 = _checkpoint$assignes2[0]) === null || _checkpoint$assignes3 === void 0 ? void 0 : _checkpoint$assignes3.mobileNumber,
        comment: t(checkpoint === null || checkpoint === void 0 ? void 0 : checkpoint.comment),
        wfComment: checkpoint.wfComment,
        thumbnailsToShow: checkpoint === null || checkpoint === void 0 ? void 0 : checkpoint.thumbnailsToShow
      };
      return /*#__PURE__*/React__default.createElement(TLCaption, {
        data: _caption,
        OpenImage: OpenImage
      });
    } else {
      var _Digit$DateUtils, _applicationData$audi2, _checkpoint$assignes4, _checkpoint$assignes5, _checkpoint$assignes6, _checkpoint$assignes7;
      var _caption2 = {
        date: (_Digit$DateUtils = Digit.DateUtils) === null || _Digit$DateUtils === void 0 ? void 0 : _Digit$DateUtils.ConvertTimestampToDate(applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$audi2 = applicationData.auditDetails) === null || _applicationData$audi2 === void 0 ? void 0 : _applicationData$audi2.lastModifiedTime),
        name: checkpoint === null || checkpoint === void 0 ? void 0 : (_checkpoint$assignes4 = checkpoint.assignes) === null || _checkpoint$assignes4 === void 0 ? void 0 : (_checkpoint$assignes5 = _checkpoint$assignes4[0]) === null || _checkpoint$assignes5 === void 0 ? void 0 : _checkpoint$assignes5.name,
        wfComment: checkpoint === null || checkpoint === void 0 ? void 0 : checkpoint.wfComment,
        mobileNumber: checkpoint === null || checkpoint === void 0 ? void 0 : (_checkpoint$assignes6 = checkpoint.assignes) === null || _checkpoint$assignes6 === void 0 ? void 0 : (_checkpoint$assignes7 = _checkpoint$assignes6[0]) === null || _checkpoint$assignes7 === void 0 ? void 0 : _checkpoint$assignes7.mobileNumber
      };
      return /*#__PURE__*/React__default.createElement(TLCaption, {
        data: _caption2
      });
    }
  };
  var getTranslatedValues = function getTranslatedValues(dataValue, isNotTranslated) {
    if (dataValue) {
      return !isNotTranslated ? t(dataValue) : dataValue;
    } else {
      return t("NA");
    }
  };
  var checkLocation = window.location.href.includes("employee/tl") || window.location.href.includes("employee/obps") || window.location.href.includes("employee/noc");
  var isNocLocation = window.location.href.includes("employee/noc");
  var isBPALocation = window.location.href.includes("employee/obps");
  var getRowStyles = function getRowStyles() {
    if (window.location.href.includes("employee/obps") || window.location.href.includes("employee/noc")) {
      return {
        justifyContent: "space-between",
        fontSize: "16px",
        lineHeight: "19px",
        color: "#0B0C0C"
      };
    } else if (checkLocation) {
      return {
        justifyContent: "space-between",
        fontSize: "16px",
        lineHeight: "19px",
        color: "#0B0C0C"
      };
    } else {
      return {};
    }
  };
  var getTableStyles = function getTableStyles() {
    if (window.location.href.includes("employee/obps") || window.location.href.includes("employee/noc")) {
      return {
        position: "relative",
        marginTop: "19px"
      };
    } else if (checkLocation) {
      return {
        position: "relative",
        marginTop: "19px"
      };
    } else {
      return {};
    }
  };
  var getMainDivStyles = function getMainDivStyles() {
    if (window.location.href.includes("employee/obps") || window.location.href.includes("employee/noc")) {
      return {
        lineHeight: "19px",
        maxWidth: "950px",
        minWidth: "280px"
      };
    } else if (checkLocation) {
      return {
        lineHeight: "19px",
        maxWidth: "600px",
        minWidth: "280px"
      };
    } else {
      return {};
    }
  };
  var getTextValue = function getTextValue(value) {
    if (value !== null && value !== void 0 && value.skip) return value.value;else if (value !== null && value !== void 0 && value.isUnit) return value !== null && value !== void 0 && value.value ? getTranslatedValues(value === null || value === void 0 ? void 0 : value.value, value === null || value === void 0 ? void 0 : value.isNotTranslated) + " " + t(value === null || value === void 0 ? void 0 : value.isUnit) : t("N/A");else return value !== null && value !== void 0 && value.value ? getTranslatedValues(value === null || value === void 0 ? void 0 : value.value, value === null || value === void 0 ? void 0 : value.isNotTranslated) : t("N/A");
  };
  return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Card, {
    style: {
      position: "relative"
    },
    className: "employeeCard-override"
  }, applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a = applicationDetails.applicationDetails) === null || _applicationDetails$a === void 0 ? void 0 : _applicationDetails$a.map(function (detail, index) {
    var _detail$values, _detail$additionalDet, _applicationDetails$a2, _applicationDetails$a3, _applicationDetails$a4, _detail$additionalDet2, _applicationDetails$a5, _applicationDetails$a6, _detail$additionalDet3, _detail$additionalDet4, _detail$additionalDet5, _detail$additionalDet6, _detail$additionalDet7, _detail$additionalDet8, _detail$additionalDet9, _detail$additionalDet10, _detail$additionalDet11, _workflowDetails$data, _workflowDetails$data2, _detail$additionalDet12, _detail$additionalDet13, _detail$additionalDet14, _detail$additionalDet15, _detail$additionalDet16, _detail$additionalDet17, _detail$additionalDet18, _detail$additionalDet19, _detail$additionalDet20, _detail$additionalDet21, _detail$additionalDet22, _detail$additionalDet23, _detail$additionalDet24;
    return /*#__PURE__*/React__default.createElement(React__default.Fragment, {
      key: index
    }, /*#__PURE__*/React__default.createElement("div", {
      style: getMainDivStyles()
    }, index === 0 && !detail.asSectionHeader ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSubHeader, {
      style: {
        marginBottom: "16px",
        fontSize: "24px"
      }
    }, t(detail.title)) : /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSectionHeader, {
      style: index == 0 && checkLocation ? {
        marginBottom: "16px",
        fontSize: "24px"
      } : {
        marginBottom: "16px",
        marginTop: "32px",
        fontSize: "24px"
      }
    }, isNocLocation ? "" + t(detail.title) : t(detail.title), detail !== null && detail !== void 0 && detail.Component ? /*#__PURE__*/React__default.createElement(detail.Component, null) : null)), /*#__PURE__*/React__default.createElement(digitUiReactComponents.StatusTable, {
      style: getTableStyles()
    }, (detail === null || detail === void 0 ? void 0 : detail.title) && !(detail !== null && detail !== void 0 && detail.title.includes("NOC")) && (detail === null || detail === void 0 ? void 0 : (_detail$values = detail.values) === null || _detail$values === void 0 ? void 0 : _detail$values.map(function (value, index) {
      var _detail$values3;
      if (value.map === true && value.value !== "N/A") {
        return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
          key: t(value.title),
          label: t(value.title),
          text: /*#__PURE__*/React__default.createElement("img", {
            src: t(value.value),
            alt: ""
          })
        });
      }
      if ((value === null || value === void 0 ? void 0 : value.isLink) == true) {
        var _detail$values2;
        return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
          key: t(value.title),
          label: window.location.href.includes("tl") ? /*#__PURE__*/React__default.createElement("div", {
            style: {
              width: "200%"
            }
          }, /*#__PURE__*/React__default.createElement(reactRouterDom.Link, {
            to: value === null || value === void 0 ? void 0 : value.to
          }, /*#__PURE__*/React__default.createElement("span", {
            className: "link",
            style: {
              color: "#F47738"
            }
          }, t(value === null || value === void 0 ? void 0 : value.title)))) : isNocLocation || isBPALocation ? "" + t(value.title) : t(value.title),
          text: /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement(reactRouterDom.Link, {
            to: value === null || value === void 0 ? void 0 : value.to
          }, /*#__PURE__*/React__default.createElement("span", {
            className: "link",
            style: {
              color: "#F47738"
            }
          }, value === null || value === void 0 ? void 0 : value.value))),
          last: index === (detail === null || detail === void 0 ? void 0 : (_detail$values2 = detail.values) === null || _detail$values2 === void 0 ? void 0 : _detail$values2.length) - 1,
          caption: value.caption,
          className: "border-none",
          rowContainerStyle: getRowStyles()
        });
      }
      return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
        key: t(value.title),
        label: isNocLocation || isBPALocation ? "" + t(value.title) : t(value.title),
        text: getTextValue(value),
        last: index === (detail === null || detail === void 0 ? void 0 : (_detail$values3 = detail.values) === null || _detail$values3 === void 0 ? void 0 : _detail$values3.length) - 1,
        caption: value.caption,
        className: "border-none"
        ,
        rowContainerStyle: getRowStyles()
      });
    })))), (detail === null || detail === void 0 ? void 0 : detail.belowComponent) && /*#__PURE__*/React__default.createElement(detail.belowComponent, null), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet = detail.additionalDetails) === null || _detail$additionalDet === void 0 ? void 0 : _detail$additionalDet.inspectionReport) && /*#__PURE__*/React__default.createElement(ScruntinyDetails, {
      scrutinyDetails: detail === null || detail === void 0 ? void 0 : detail.additionalDetails,
      paymentsList: paymentsList
    }), (applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a2 = applicationDetails.applicationData) === null || _applicationDetails$a2 === void 0 ? void 0 : (_applicationDetails$a3 = _applicationDetails$a2.additionalDetails) === null || _applicationDetails$a3 === void 0 ? void 0 : (_applicationDetails$a4 = _applicationDetails$a3.fieldinspection_pending) === null || _applicationDetails$a4 === void 0 ? void 0 : _applicationDetails$a4.length) > 0 && (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet2 = detail.additionalDetails) === null || _detail$additionalDet2 === void 0 ? void 0 : _detail$additionalDet2.fiReport) && /*#__PURE__*/React__default.createElement(InspectionReport, {
      fiReport: applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a5 = applicationDetails.applicationData) === null || _applicationDetails$a5 === void 0 ? void 0 : (_applicationDetails$a6 = _applicationDetails$a5.additionalDetails) === null || _applicationDetails$a6 === void 0 ? void 0 : _applicationDetails$a6.fieldinspection_pending
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet3 = detail.additionalDetails) === null || _detail$additionalDet3 === void 0 ? void 0 : _detail$additionalDet3.floors) && /*#__PURE__*/React__default.createElement(PropertyFloors, {
      floors: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet4 = detail.additionalDetails) === null || _detail$additionalDet4 === void 0 ? void 0 : _detail$additionalDet4.floors
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet5 = detail.additionalDetails) === null || _detail$additionalDet5 === void 0 ? void 0 : _detail$additionalDet5.owners) && /*#__PURE__*/React__default.createElement(PropertyOwners, {
      owners: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet6 = detail.additionalDetails) === null || _detail$additionalDet6 === void 0 ? void 0 : _detail$additionalDet6.owners
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet7 = detail.additionalDetails) === null || _detail$additionalDet7 === void 0 ? void 0 : _detail$additionalDet7.units) && /*#__PURE__*/React__default.createElement(TLTradeUnits, {
      units: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet8 = detail.additionalDetails) === null || _detail$additionalDet8 === void 0 ? void 0 : _detail$additionalDet8.units
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet9 = detail.additionalDetails) === null || _detail$additionalDet9 === void 0 ? void 0 : _detail$additionalDet9.accessories) && /*#__PURE__*/React__default.createElement(TLTradeAccessories, {
      units: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet10 = detail.additionalDetails) === null || _detail$additionalDet10 === void 0 ? void 0 : _detail$additionalDet10.accessories
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet11 = detail.additionalDetails) === null || _detail$additionalDet11 === void 0 ? void 0 : _detail$additionalDet11.permissions) && (workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data = workflowDetails.data) === null || _workflowDetails$data === void 0 ? void 0 : (_workflowDetails$data2 = _workflowDetails$data.nextActions) === null || _workflowDetails$data2 === void 0 ? void 0 : _workflowDetails$data2.length) > 0 && /*#__PURE__*/React__default.createElement(PermissionCheck, {
      applicationData: applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.applicationData,
      t: t,
      permissions: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet12 = detail.additionalDetails) === null || _detail$additionalDet12 === void 0 ? void 0 : _detail$additionalDet12.permissions
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet13 = detail.additionalDetails) === null || _detail$additionalDet13 === void 0 ? void 0 : _detail$additionalDet13.obpsDocuments) && /*#__PURE__*/React__default.createElement(BPADocuments, {
      t: t,
      applicationData: applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.applicationData,
      docs: detail.additionalDetails.obpsDocuments,
      bpaActionsDetails: workflowDetails
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet14 = detail.additionalDetails) === null || _detail$additionalDet14 === void 0 ? void 0 : _detail$additionalDet14.noc) && /*#__PURE__*/React__default.createElement(NOCDocuments, {
      t: t,
      isNoc: true,
      NOCdata: detail.values,
      applicationData: applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.applicationData,
      docs: detail.additionalDetails.noc,
      noc: (_detail$additionalDet15 = detail.additionalDetails) === null || _detail$additionalDet15 === void 0 ? void 0 : _detail$additionalDet15.data,
      bpaActionsDetails: workflowDetails
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet16 = detail.additionalDetails) === null || _detail$additionalDet16 === void 0 ? void 0 : _detail$additionalDet16.scruntinyDetails) && /*#__PURE__*/React__default.createElement(ScruntinyDetails, {
      scrutinyDetails: detail === null || detail === void 0 ? void 0 : detail.additionalDetails
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet17 = detail.additionalDetails) === null || _detail$additionalDet17 === void 0 ? void 0 : _detail$additionalDet17.buildingExtractionDetails) && /*#__PURE__*/React__default.createElement(ScruntinyDetails, {
      scrutinyDetails: detail === null || detail === void 0 ? void 0 : detail.additionalDetails
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet18 = detail.additionalDetails) === null || _detail$additionalDet18 === void 0 ? void 0 : _detail$additionalDet18.subOccupancyTableDetails) && /*#__PURE__*/React__default.createElement(SubOccupancyTable, {
      edcrDetails: detail === null || detail === void 0 ? void 0 : detail.additionalDetails,
      applicationData: applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.applicationData
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet19 = detail.additionalDetails) === null || _detail$additionalDet19 === void 0 ? void 0 : _detail$additionalDet19.documentsWithUrl) && /*#__PURE__*/React__default.createElement(DocumentsPreview, {
      documents: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet20 = detail.additionalDetails) === null || _detail$additionalDet20 === void 0 ? void 0 : _detail$additionalDet20.documentsWithUrl
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet21 = detail.additionalDetails) === null || _detail$additionalDet21 === void 0 ? void 0 : _detail$additionalDet21.documents) && /*#__PURE__*/React__default.createElement(PropertyDocuments, {
      documents: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet22 = detail.additionalDetails) === null || _detail$additionalDet22 === void 0 ? void 0 : _detail$additionalDet22.documents
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet23 = detail.additionalDetails) === null || _detail$additionalDet23 === void 0 ? void 0 : _detail$additionalDet23.taxHeadEstimatesCalculation) && /*#__PURE__*/React__default.createElement(PropertyEstimates, {
      taxHeadEstimatesCalculation: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet24 = detail.additionalDetails) === null || _detail$additionalDet24 === void 0 ? void 0 : _detail$additionalDet24.taxHeadEstimatesCalculation
    }));
  }), showTimeLine && (workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data3 = workflowDetails.data) === null || _workflowDetails$data3 === void 0 ? void 0 : (_workflowDetails$data4 = _workflowDetails$data3.timeline) === null || _workflowDetails$data4 === void 0 ? void 0 : _workflowDetails$data4.length) > 0 && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.BreakLine, null), ((workflowDetails === null || workflowDetails === void 0 ? void 0 : workflowDetails.isLoading) || isDataLoading) && /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null), !(workflowDetails !== null && workflowDetails !== void 0 && workflowDetails.isLoading) && !isDataLoading && /*#__PURE__*/React__default.createElement(React.Fragment, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardSectionHeader, {
    style: {
      marginBottom: "16px",
      marginTop: "32px"
    }
  }, t("ES_APPLICATION_DETAILS_APPLICATION_TIMELINE")), workflowDetails !== null && workflowDetails !== void 0 && (_workflowDetails$data5 = workflowDetails.data) !== null && _workflowDetails$data5 !== void 0 && _workflowDetails$data5.timeline && (workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data6 = workflowDetails.data) === null || _workflowDetails$data6 === void 0 ? void 0 : (_workflowDetails$data7 = _workflowDetails$data6.timeline) === null || _workflowDetails$data7 === void 0 ? void 0 : _workflowDetails$data7.length) === 1 ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.CheckPoint, {
    isCompleted: true,
    label: t("" + timelineStatusPrefix + (workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data8 = workflowDetails.data) === null || _workflowDetails$data8 === void 0 ? void 0 : (_workflowDetails$data9 = _workflowDetails$data8.timeline[0]) === null || _workflowDetails$data9 === void 0 ? void 0 : _workflowDetails$data9.state)),
    customChild: getTimelineCaptions(workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data10 = workflowDetails.data) === null || _workflowDetails$data10 === void 0 ? void 0 : _workflowDetails$data10.timeline[0])
  }) : /*#__PURE__*/React__default.createElement(digitUiReactComponents.ConnectingCheckPoints, null, (workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data11 = workflowDetails.data) === null || _workflowDetails$data11 === void 0 ? void 0 : _workflowDetails$data11.timeline) && (workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data12 = workflowDetails.data) === null || _workflowDetails$data12 === void 0 ? void 0 : _workflowDetails$data12.timeline.map(function (checkpoint, index, arr) {
    return /*#__PURE__*/React__default.createElement(React__default.Fragment, {
      key: index
    }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CheckPoint, {
      keyValue: index,
      isCompleted: index === 0,
      info: checkpoint.comment,
      label: t("" + timelineStatusPrefix + ((checkpoint === null || checkpoint === void 0 ? void 0 : checkpoint.performedAction) === "REOPEN" ? checkpoint === null || checkpoint === void 0 ? void 0 : checkpoint.performedAction : checkpoint === null || checkpoint === void 0 ? void 0 : checkpoint[statusAttribute])),
      customChild: getTimelineCaptions(checkpoint)
    }));
  }))))));
}

function ApplicationDetailsToast(_ref) {
  var _showToast$action, _showToast$error, _showToast$error2, _showToast$error3, _showToast$error4, _showToast$error5, _showToast$error6, _showToast$error7, _showToast$error8, _showToast$action2, _showToast$action3, _showToast$error9, _showToast$error10, _showToast$error11, _showToast$error12, _showToast$error13, _showToast$error14, _showToast$error15, _showToast$error16, _showToast$action4;
  var t = _ref.t,
    showToast = _ref.showToast,
    closeToast = _ref.closeToast,
    businessService = _ref.businessService;
  if (businessService !== null && businessService !== void 0 && businessService.includes("NewTL") || businessService !== null && businessService !== void 0 && businessService.includes("TL") || businessService !== null && businessService !== void 0 && businessService.includes("EDITRENEWAL")) {
    var label = "";
    switch (showToast === null || showToast === void 0 ? void 0 : (_showToast$action = showToast.action) === null || _showToast$action === void 0 ? void 0 : _showToast$action.action) {
      case "SENDBACK":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error = showToast.error) === null || _showToast$error === void 0 ? void 0 : _showToast$error.message : t("TL_SENDBACK_CHECKLIST_MESSAGE_HEAD");
        break;
      case "FORWARD":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error2 = showToast.error) === null || _showToast$error2 === void 0 ? void 0 : _showToast$error2.message : t("TL_FORWARD_SUCCESS_MESSAGE_MAIN");
        break;
      case "APPROVE":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error3 = showToast.error) === null || _showToast$error3 === void 0 ? void 0 : _showToast$error3.message : t("TL_APPROVAL_CHECKLIST_MESSAGE_HEAD");
        break;
      case "SENDBACKTOCITIZEN":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error4 = showToast.error) === null || _showToast$error4 === void 0 ? void 0 : _showToast$error4.message : t("TL_SENDBACK_TOCITIZEN_CHECKLIST_MESSAGE_HEAD");
        break;
      case "REJECT":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error5 = showToast.error) === null || _showToast$error5 === void 0 ? void 0 : _showToast$error5.message : t("TL_APPROVAL_REJ_MESSAGE_HEAD");
        break;
      case "RESUBMIT":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error6 = showToast.error) === null || _showToast$error6 === void 0 ? void 0 : _showToast$error6.message : t("TL_APPLICATION_RESUBMIT_SUCCESS_MESSAGE_MAIN");
        break;
      case "CANCEL":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error7 = showToast.error) === null || _showToast$error7 === void 0 ? void 0 : _showToast$error7.message : t("TL_TL_CANCELLED_MESSAGE_HEAD");
        break;
      default:
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error8 = showToast.error) === null || _showToast$error8 === void 0 ? void 0 : _showToast$error8.message : t("ES_" + businessService + "_" + (showToast === null || showToast === void 0 ? void 0 : (_showToast$action2 = showToast.action) === null || _showToast$action2 === void 0 ? void 0 : _showToast$action2.action) + "_UPDATE_SUCCESS");
    }
    return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, showToast && /*#__PURE__*/React__default.createElement(digitUiReactComponents.Toast, {
      error: showToast.key === "error",
      label: label,
      onClose: closeToast
    }));
  } else if (businessService !== null && businessService !== void 0 && businessService.includes("BPA") || businessService !== null && businessService !== void 0 && businessService.includes("BPA_LOW") || businessService !== null && businessService !== void 0 && businessService.includes("BPA_OC")) {
    var getMessage = function getMessage(messages) {
      var _messages;
      if (messages === void 0) {
        messages = [];
      }
      var returnValue = messages[0];
      if (((_messages = messages) === null || _messages === void 0 ? void 0 : _messages.length) == 2) returnValue = businessService !== null && businessService !== void 0 && businessService.includes("BPA_OC") ? t(messages[1]) : t(messages[0]);else returnValue = t(messages[0]);
      return returnValue;
    };
    var _label = "";
    switch (showToast === null || showToast === void 0 ? void 0 : (_showToast$action3 = showToast.action) === null || _showToast$action3 === void 0 ? void 0 : _showToast$action3.action) {
      case "REVOCATE":
        _label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error9 = showToast.error) === null || _showToast$error9 === void 0 ? void 0 : _showToast$error9.message : getMessage(["BPA_APPROVAL_REVOCATED_MESSAGE_HEAD", "BPA_APPROVAL_OC_REVOCATED_MESSAGE_HEAD"]);
        break;
      case "VERIFY_AND_FORWARD":
        _label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error10 = showToast.error) === null || _showToast$error10 === void 0 ? void 0 : _showToast$error10.message : getMessage(["BPA_FORWARD_SUCCESS_MESSAGE_MAIN"]);
        break;
      case "SEND_BACK_TO_CITIZEN":
        _label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error11 = showToast.error) === null || _showToast$error11 === void 0 ? void 0 : _showToast$error11.message : getMessage(["BPA_SENDBACK_SUCCESS_MESSAGE_MAIN"]);
        break;
      case "APPROVE":
        _label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error12 = showToast.error) === null || _showToast$error12 === void 0 ? void 0 : _showToast$error12.message : getMessage(["BPA_APPROVAL_CHECKLIST_MESSAGE_HEAD"]);
        break;
      case "REJECT":
        _label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error13 = showToast.error) === null || _showToast$error13 === void 0 ? void 0 : _showToast$error13.message : getMessage(["BPA_APPROVAL_REJECTED_MESSAGE_HEAD", "BPA_OC_APPROVAL_REJECTED_MESSAGE_HEAD"]);
        break;
      case "FORWARD":
        _label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error14 = showToast.error) === null || _showToast$error14 === void 0 ? void 0 : _showToast$error14.message : getMessage(["BPA_FORWARD_SUCCESS_MESSAGE_MAIN"]);
        break;
      case "SEND_BACK_FOR_DOCUMENT_VERIFICATION":
      case "SEND_BACK_FOR_FIELD_INSPECTION":
        _label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error15 = showToast.error) === null || _showToast$error15 === void 0 ? void 0 : _showToast$error15.message : getMessage(["BPA_SENDBACK_SUCCESS_MESSAGE_MAIN"]);
        break;
      default:
        _label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error16 = showToast.error) === null || _showToast$error16 === void 0 ? void 0 : _showToast$error16.message : t("ES_" + businessService + "_" + (showToast === null || showToast === void 0 ? void 0 : (_showToast$action4 = showToast.action) === null || _showToast$action4 === void 0 ? void 0 : _showToast$action4.action) + "_UPDATE_SUCCESS");
    }
    return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, showToast && /*#__PURE__*/React__default.createElement(digitUiReactComponents.Toast, {
      error: showToast.key === "error",
      label: _label,
      onClose: closeToast
    }));
  } else {
    var _showToast$error17, _showToast$action5;
    var _label2 = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error17 = showToast.error) === null || _showToast$error17 === void 0 ? void 0 : _showToast$error17.message : "ES_" + businessService + "_" + (showToast === null || showToast === void 0 ? void 0 : (_showToast$action5 = showToast.action) === null || _showToast$action5 === void 0 ? void 0 : _showToast$action5.action) + "_UPDATE_SUCCESS";
    return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, showToast && /*#__PURE__*/React__default.createElement(digitUiReactComponents.Toast, {
      error: showToast.key === "error",
      label: t(_label2),
      onClose: closeToast
    }));
  }
}

function ApplicationDetailsActionBar(_ref) {
  var _user, _user$info, _user$info$roles, _workflowDetails$data, _workflowDetails$data2, _workflowDetails$data3, _actions$, _actions$$redirection, _workflowDetails$data4, _workflowDetails$data5, _actions$2, _actions$3, _actions$4;
  var workflowDetails = _ref.workflowDetails,
    displayMenu = _ref.displayMenu,
    onActionSelect = _ref.onActionSelect,
    setDisplayMenu = _ref.setDisplayMenu,
    businessService = _ref.businessService,
    forcedActionPrefix = _ref.forcedActionPrefix,
    _ref$ActionBarStyle = _ref.ActionBarStyle,
    ActionBarStyle = _ref$ActionBarStyle === void 0 ? {} : _ref$ActionBarStyle,
    _ref$MenuStyle = _ref.MenuStyle,
    MenuStyle = _ref$MenuStyle === void 0 ? {} : _ref$MenuStyle;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var user = Digit.UserService.getUser();
  if (window.location.href.includes("/obps") || window.location.href.includes("/noc")) {
    var userInfos = sessionStorage.getItem("Digit.citizen.userRequestObject");
    var userInfo = userInfos ? JSON.parse(userInfos) : {};
    user = userInfo === null || userInfo === void 0 ? void 0 : userInfo.value;
  }
  var userRoles = (_user = user) === null || _user === void 0 ? void 0 : (_user$info = _user.info) === null || _user$info === void 0 ? void 0 : (_user$info$roles = _user$info.roles) === null || _user$info$roles === void 0 ? void 0 : _user$info$roles.map(function (e) {
    return e.code;
  });
  var isSingleButton = false;
  var isMenuBotton = false;
  var actions = workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data = workflowDetails.data) === null || _workflowDetails$data === void 0 ? void 0 : (_workflowDetails$data2 = _workflowDetails$data.actionState) === null || _workflowDetails$data2 === void 0 ? void 0 : (_workflowDetails$data3 = _workflowDetails$data2.nextActions) === null || _workflowDetails$data3 === void 0 ? void 0 : _workflowDetails$data3.filter(function (e) {
    return userRoles.some(function (role) {
      var _e$roles;
      return (_e$roles = e.roles) === null || _e$roles === void 0 ? void 0 : _e$roles.includes(role);
    }) || !e.roles;
  });
  if ((window.location.href.includes("/obps") || window.location.href.includes("/noc")) && (actions === null || actions === void 0 ? void 0 : actions.length) == 1 || actions !== null && actions !== void 0 && (_actions$ = actions[0]) !== null && _actions$ !== void 0 && (_actions$$redirection = _actions$.redirectionUrl) !== null && _actions$$redirection !== void 0 && _actions$$redirection.pathname.includes("/pt/property-details/") && (actions === null || actions === void 0 ? void 0 : actions.length) == 1) {
    isMenuBotton = false;
    isSingleButton = true;
  } else if ((actions === null || actions === void 0 ? void 0 : actions.length) > 0) {
    isMenuBotton = true;
    isSingleButton = false;
  }
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, !(workflowDetails !== null && workflowDetails !== void 0 && workflowDetails.isLoading) && isMenuBotton && !isSingleButton && /*#__PURE__*/React__default.createElement(digitUiReactComponents.ActionBar, {
    style: _extends({}, ActionBarStyle)
  }, displayMenu && workflowDetails !== null && workflowDetails !== void 0 && (_workflowDetails$data4 = workflowDetails.data) !== null && _workflowDetails$data4 !== void 0 && (_workflowDetails$data5 = _workflowDetails$data4.actionState) !== null && _workflowDetails$data5 !== void 0 && _workflowDetails$data5.nextActions ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.Menu, {
    localeKeyPrefix: forcedActionPrefix || "WF_EMPLOYEE_" + (businessService === null || businessService === void 0 ? void 0 : businessService.toUpperCase()),
    options: actions,
    optionKey: "action",
    t: t,
    onSelect: onActionSelect,
    style: MenuStyle
  }) : null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.SubmitBar, {
    label: t("WF_TAKE_ACTION"),
    onSubmit: function onSubmit() {
      return setDisplayMenu(!displayMenu);
    }
  })), !(workflowDetails !== null && workflowDetails !== void 0 && workflowDetails.isLoading) && !isMenuBotton && isSingleButton && /*#__PURE__*/React__default.createElement(digitUiReactComponents.ActionBar, {
    style: _extends({}, ActionBarStyle)
  }, /*#__PURE__*/React__default.createElement("button", {
    style: {
      color: "#FFFFFF",
      fontSize: "19px"
    },
    className: "submit-bar",
    name: actions === null || actions === void 0 ? void 0 : (_actions$2 = actions[0]) === null || _actions$2 === void 0 ? void 0 : _actions$2.action,
    value: actions === null || actions === void 0 ? void 0 : (_actions$3 = actions[0]) === null || _actions$3 === void 0 ? void 0 : _actions$3.action,
    onClick: function onClick(e) {
      onActionSelect((actions === null || actions === void 0 ? void 0 : actions[0]) || {});
    }
  }, t((forcedActionPrefix || "WF_EMPLOYEE_" + (businessService === null || businessService === void 0 ? void 0 : businessService.toUpperCase())) + "_" + (actions === null || actions === void 0 ? void 0 : (_actions$4 = actions[0]) === null || _actions$4 === void 0 ? void 0 : _actions$4.action)))));
}

var Close$5 = function Close() {
  return /*#__PURE__*/React__default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "#FFFFFF"
  }, /*#__PURE__*/React__default.createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/React__default.createElement("path", {
    d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
  }));
};
var CloseBtn$5 = function CloseBtn(props) {
  return /*#__PURE__*/React__default.createElement("div", {
    className: "icon-bg-secondary",
    onClick: props.onClick
  }, /*#__PURE__*/React__default.createElement(Close$5, null));
};
function ApplicationDetailsWarningPopup(_ref) {
  var action = _ref.action,
    closeWarningPopup = _ref.closeWarningPopup;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var isMobile = window.Digit.Utils.browser.isMobile();
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Modal, {
    headerBarMain: /*#__PURE__*/React__default.createElement("h1", {
      className: "heading-m"
    }, t("PT_DUES_ARE_PENDING")),
    headerBarEnd: /*#__PURE__*/React__default.createElement(CloseBtn$5, {
      onClick: function onClick() {
        closeWarningPopup();
      }
    }),
    hideSubmit: true,
    isDisabled: false,
    popupStyles: isMobile ? {} : {
      width: "29%",
      marginTop: "auto"
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Card, null, /*#__PURE__*/React__default.createElement("div", {
    style: {
      marginBottom: "30px"
    }
  }, /*#__PURE__*/React__default.createElement("h1", null, t("PT_YOU_HAVE"), " \u20B9", action === null || action === void 0 ? void 0 : action.AmountDueForPay, " ", t("PT_DUE_WARNING_MSG2"))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
    rowContainerStyle: {
      display: "flex"
    },
    labelStyle: {
      fontSize: "24px",
      fontWeight: "700",
      marginRight: "10%"
    },
    textStyle: {
      fontSize: "24px",
      fontWeight: "700",
      marginBottom: "20px"
    },
    label: "" + t("PT_AMOUNT_DUE"),
    text: "\u20B9" + t(action === null || action === void 0 ? void 0 : action.AmountDueForPay)
  }), /*#__PURE__*/React__default.createElement("div", {
    style: {
      width: "100%",
      display: "flex",
      justifyContent: "flex-end"
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.ButtonSelector, {
    theme: "border",
    label: t('ES_PT_COMMON_CANCEL'),
    onSubmit: closeWarningPopup,
    style: {
      marginLeft: "10px"
    }
  }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.ButtonSelector, {
    label: t('PT_COLLECT'),
    onSubmit: function onSubmit() {
      var _action$redirectionUr;
      return window.location.assign("" + window.location.origin + (action === null || action === void 0 ? void 0 : (_action$redirectionUr = action.redirectionUrl) === null || _action$redirectionUr === void 0 ? void 0 : _action$redirectionUr.pathname));
    },
    style: {
      marginLeft: "10px"
    }
  })))), ")");
}

var ApplicationDetails = function ApplicationDetails(props) {
  var _workflowDetails$data;
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var state = Digit.ULBService.getStateId();
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var history = reactRouterDom.useHistory();
  var _useParams = reactRouterDom.useParams(),
    applicationNumber = _useParams.id;
  var _useState = React.useState(false),
    displayMenu = _useState[0],
    setDisplayMenu = _useState[1];
  var _useState2 = React.useState(null),
    selectedAction = _useState2[0],
    setSelectedAction = _useState2[1];
  var _useState3 = React.useState(false),
    showModal = _useState3[0],
    setShowModal = _useState3[1];
  var _useState4 = React.useState(false),
    isEnableLoader = _useState4[0],
    setIsEnableLoader = _useState4[1];
  var _useState5 = React.useState(false),
    isWarningPop = _useState5[0],
    setWarningPopUp = _useState5[1];
  var applicationDetails = props.applicationDetails,
    showToast = props.showToast,
    setShowToast = props.setShowToast,
    isLoading = props.isLoading,
    isDataLoading = props.isDataLoading,
    applicationData = props.applicationData,
    mutate = props.mutate,
    nocMutation = props.nocMutation,
    workflowDetails = props.workflowDetails,
    businessService = props.businessService,
    closeToast = props.closeToast,
    moduleCode = props.moduleCode,
    timelineStatusPrefix = props.timelineStatusPrefix,
    forcedActionPrefix = props.forcedActionPrefix,
    statusAttribute = props.statusAttribute,
    ActionBarStyle = props.ActionBarStyle,
    MenuStyle = props.MenuStyle,
    paymentsList = props.paymentsList,
    _props$showTimeLine = props.showTimeLine,
    showTimeLine = _props$showTimeLine === void 0 ? true : _props$showTimeLine;
  React.useEffect(function () {
    if (showToast) {
      workflowDetails.revalidate();
    }
  }, [showToast]);
  function onActionSelect(action) {
    if (action) {
      if (action !== null && action !== void 0 && action.isWarningPopUp) {
        setWarningPopUp(true);
      } else if (action !== null && action !== void 0 && action.redirectionUrll) {
        var _action$redirectionUr;
        window.location.assign(window.location.origin + "/digit-ui/employee/payment/collect/" + (action === null || action === void 0 ? void 0 : (_action$redirectionUr = action.redirectionUrll) === null || _action$redirectionUr === void 0 ? void 0 : _action$redirectionUr.pathname));
      } else if (!(action !== null && action !== void 0 && action.redirectionUrl)) {
        setShowModal(true);
      } else {
        var _action$redirectionUr2, _action$redirectionUr3;
        history.push({
          pathname: (_action$redirectionUr2 = action.redirectionUrl) === null || _action$redirectionUr2 === void 0 ? void 0 : _action$redirectionUr2.pathname,
          state: _extends({}, (_action$redirectionUr3 = action.redirectionUrl) === null || _action$redirectionUr3 === void 0 ? void 0 : _action$redirectionUr3.state)
        });
      }
    }
    setSelectedAction(action);
    setDisplayMenu(false);
  }
  var queryClient = reactQuery.useQueryClient();
  var closeModal = function closeModal() {
    setSelectedAction(null);
    setShowModal(false);
  };
  var closeWarningPopup = function closeWarningPopup() {
    setWarningPopUp(false);
  };
  var submitAction = function submitAction(data, nocData, isOBPS) {
    if (nocData === void 0) {
      nocData = false;
    }
    if (isOBPS === void 0) {
      isOBPS = {};
    }
    try {
      var _temp4 = function _temp4(_result2) {
        if (_exit2) return _result2;
        if (mutate) {
          setIsEnableLoader(true);
          mutate(data, {
            onError: function onError(error, variables) {
              setIsEnableLoader(false);
              setShowToast({
                key: "error",
                error: error
              });
              setTimeout(closeToast, 5000);
            },
            onSuccess: function onSuccess(data, variables) {
              setIsEnableLoader(false);
              if (isOBPS !== null && isOBPS !== void 0 && isOBPS.bpa) {
                data.selectedAction = selectedAction;
                history.replace("/digit-ui/employee/obps/response", {
                  data: data
                });
              }
              if (isOBPS !== null && isOBPS !== void 0 && isOBPS.isStakeholder) {
                data.selectedAction = selectedAction;
                history.push("/digit-ui/employee/obps/stakeholder-response", {
                  data: data
                });
              }
              if (isOBPS !== null && isOBPS !== void 0 && isOBPS.isNoc) {
                history.push("/digit-ui/employee/noc/response", {
                  data: data
                });
              }
              setShowToast({
                key: "success",
                action: selectedAction
              });
              setTimeout(closeToast, 5000);
              queryClient.clear();
              queryClient.refetchQueries("APPLICATION_SEARCH");
            }
          });
        }
        closeModal();
      };
      var _exit2 = false;
      setIsEnableLoader(true);
      if (typeof (data === null || data === void 0 ? void 0 : data.customFunctionToExecute) === "function") {
        data === null || data === void 0 ? void 0 : data.customFunctionToExecute(_extends({}, data));
      }
      var _temp5 = function () {
        if (nocData !== false && nocMutation) {
          var _nocData;
          var nocPrmomises = (_nocData = nocData) === null || _nocData === void 0 ? void 0 : _nocData.map(function (noc) {
            return nocMutation === null || nocMutation === void 0 ? void 0 : nocMutation.mutateAsync(noc);
          });
          var _temp6 = _catch(function () {
            setIsEnableLoader(true);
            return Promise.resolve(Promise.all(nocPrmomises)).then(function (values) {
              values && values.map(function (ob) {
                var _ob$Noc, _ob$Noc$;
                Digit.SessionStorage.del(ob === null || ob === void 0 ? void 0 : (_ob$Noc = ob.Noc) === null || _ob$Noc === void 0 ? void 0 : (_ob$Noc$ = _ob$Noc[0]) === null || _ob$Noc$ === void 0 ? void 0 : _ob$Noc$.nocType);
              });
            });
          }, function (err) {
            var _err$response, _err$response$data, _err$response$data$Er, _err$response$data$Er2, _err$response2, _err$response2$data, _err$response2$data$E, _err$response2$data$E2, _err$response3, _err$response3$data, _err$response3$data$E, _err$response3$data$E2;
            setIsEnableLoader(false);
            var errorValue = err !== null && err !== void 0 && (_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && (_err$response$data$Er = _err$response$data.Errors) !== null && _err$response$data$Er !== void 0 && (_err$response$data$Er2 = _err$response$data$Er[0]) !== null && _err$response$data$Er2 !== void 0 && _err$response$data$Er2.code ? t(err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : (_err$response2$data$E = _err$response2$data.Errors) === null || _err$response2$data$E === void 0 ? void 0 : (_err$response2$data$E2 = _err$response2$data$E[0]) === null || _err$response2$data$E2 === void 0 ? void 0 : _err$response2$data$E2.code) : (err === null || err === void 0 ? void 0 : (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : (_err$response3$data$E = _err$response3$data.Errors) === null || _err$response3$data$E === void 0 ? void 0 : (_err$response3$data$E2 = _err$response3$data$E[0]) === null || _err$response3$data$E2 === void 0 ? void 0 : _err$response3$data$E2.message) || err;
            closeModal();
            setShowToast({
              key: "error",
              error: {
                message: errorValue
              }
            });
            setTimeout(closeToast, 5000);
            _exit2 = true;
          });
          if (_temp6 && _temp6.then) return _temp6.then(function () {});
        }
      }();
      return Promise.resolve(_temp5 && _temp5.then ? _temp5.then(_temp4) : _temp4(_temp5));
    } catch (e) {
      return Promise.reject(e);
    }
  };
  if (isLoading || isEnableLoader) {
    return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null);
  }
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, !isLoading ? /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(ApplicationDetailsContent, {
    applicationDetails: applicationDetails,
    workflowDetails: workflowDetails,
    isDataLoading: isDataLoading,
    applicationData: applicationData,
    businessService: businessService,
    timelineStatusPrefix: timelineStatusPrefix,
    statusAttribute: statusAttribute,
    paymentsList: paymentsList,
    showTimeLine: showTimeLine
  }), showModal ? /*#__PURE__*/React__default.createElement(ActionModal$5, {
    t: t,
    action: selectedAction,
    tenantId: tenantId,
    state: state,
    id: applicationNumber,
    applicationDetails: applicationDetails,
    applicationData: applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.applicationData,
    closeModal: closeModal,
    submitAction: submitAction,
    actionData: workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data = workflowDetails.data) === null || _workflowDetails$data === void 0 ? void 0 : _workflowDetails$data.timeline,
    businessService: businessService,
    workflowDetails: workflowDetails,
    moduleCode: moduleCode
  }) : null, isWarningPop ? /*#__PURE__*/React__default.createElement(ApplicationDetailsWarningPopup, {
    action: selectedAction,
    workflowDetails: workflowDetails,
    businessService: businessService,
    isWarningPop: isWarningPop,
    closeWarningPopup: closeWarningPopup
  }) : null, /*#__PURE__*/React__default.createElement(ApplicationDetailsToast, {
    t: t,
    showToast: showToast,
    closeToast: closeToast,
    businessService: businessService
  }), /*#__PURE__*/React__default.createElement(ApplicationDetailsActionBar, {
    workflowDetails: workflowDetails,
    displayMenu: displayMenu,
    onActionSelect: onActionSelect,
    setDisplayMenu: setDisplayMenu,
    businessService: businessService,
    forcedActionPrefix: forcedActionPrefix,
    ActionBarStyle: ActionBarStyle,
    MenuStyle: MenuStyle
  })) : /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null));
};

var ViewProperty = function ViewProperty() {
  var _applicationDetails$a;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var _Digit$Hooks$useQuery = Digit.Hooks.useQueryParams(),
    propertyId = _Digit$Hooks$useQuery.propertyId,
    tenantId = _Digit$Hooks$useQuery.tenantId,
    redirectToUrl = _Digit$Hooks$useQuery.redirectToUrl;
  var _Digit$Hooks$pt$useGe = Digit.Hooks.pt.useGenericViewProperty(t, tenantId, propertyId, {}),
    isLoading = _Digit$Hooks$pt$useGe.isLoading,
    applicationDetails = _Digit$Hooks$pt$useGe.data;
  var _useLocation = reactRouterDom.useLocation(),
    state = _useLocation.state;
  var history = reactRouterDom.useHistory();
  var workflowDetails = {};
  var _onSubmit = function onSubmit() {
    setTimeout(function () {
      return window.scrollTo(0, 1600);
    }, 400);
    return history.push(redirectToUrl + "?propertyId=" + propertyId + "&tenantId=" + ((applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.tenantId) || tenantId), _extends({}, state));
  };
  return /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Header, null, t("PT_PROPERTY_INFO_HEADER"))), /*#__PURE__*/React__default.createElement(ApplicationDetails, {
    applicationDetails: applicationDetails,
    isLoading: isLoading,
    isDataLoading: isLoading,
    workflowDetails: workflowDetails,
    applicationData: applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.applicationData,
    moduleCode: "PT"
  }), window.location.href.includes("redirectToUrl") && (applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a = applicationDetails.applicationData) === null || _applicationDetails$a === void 0 ? void 0 : _applicationDetails$a.status) !== "INACTIVE" && /*#__PURE__*/React__default.createElement(digitUiReactComponents.ActionBar, {
    style: {
      display: "flex",
      justifyContent: "flex-end",
      alignItems: "baseline"
    }
  }, /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.SubmitBar, {
    label: t("PT_ADD_PROPERTY_TO_APP"),
    onSubmit: function onSubmit() {
      return _onSubmit();
    }
  }))));
};

var _excluded$1 = ["path", "url"];
var App = function App(_ref) {
  var stateCode = _ref.stateCode;
  var _useRouteMatch = reactRouterDom.useRouteMatch(),
    path = _useRouteMatch.path,
    match = _objectWithoutPropertiesLoose(_useRouteMatch, _excluded$1);
  return /*#__PURE__*/React__default.createElement("span", {
    className: "pt-citizen"
  }, /*#__PURE__*/React__default.createElement(reactRouterDom.Switch, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.AppContainer, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.BackButton, null, "Back"), /*#__PURE__*/React__default.createElement(reactRouterDom.Route, {
    path: path + "/property/citizen-search",
    component: SearchProperty$1
  }), /*#__PURE__*/React__default.createElement(reactRouterDom.Route, {
    path: path + "/property/search-results"
  }, " ", /*#__PURE__*/React__default.createElement(SearchResultsComponent, {
    stateCode: stateCode
  }), " "), /*#__PURE__*/React__default.createElement(reactRouterDom.Route, {
    path: path + "/property/citizen-otp"
  }, " ", /*#__PURE__*/React__default.createElement(CitizenOtp, {
    stateCode: stateCode
  }), " "), /*#__PURE__*/React__default.createElement(digitUiReactComponents.PrivateRoute, {
    path: path + "/property/link-success/:propertyIds",
    component: PropertyLinkSuccess
  }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.PrivateRoute, {
    path: path + "/property/new-application",
    component: CreateProperty
  }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.PrivateRoute, {
    path: path + "/view-property",
    component: function component() {
      return /*#__PURE__*/React__default.createElement(ViewProperty, null);
    }
  }))));
};

var NewApplication = function NewApplication(_ref) {
  var _useTranslation = reactI18next.useTranslation();
  var queryClient = reactQuery.useQueryClient();
  var match = reactRouterDom.useRouteMatch();
  var _useLocation = reactRouterDom.useLocation();
  var history = reactRouterDom.useHistory();
  var stateId = Digit.ULBService.getStateId();
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var _Digit$Hooks$useSessi = Digit.Hooks.useSessionStorage("PT_CREATE_PROPERTY", {}),
    params = _Digit$Hooks$useSessi[0],
    clearParams = _Digit$Hooks$useSessi[2];
  var _Digit$Hooks$pt$useMD = Digit.Hooks.pt.useMDMS(stateId, "PropertyTax", "CommonFieldsConfig"),
    isLoading = _Digit$Hooks$pt$useMD.isLoading;
  var search = reactRouterDom.useLocation().search;
  var redirectUrl = new URLSearchParams(search).get('redirectToUrl');
  var createProperty = function createProperty() {
    try {
      history.push(match.path + "/acknowledgement");
      return Promise.resolve();
    } catch (e) {
      return Promise.reject(e);
    }
  };
  var onSuccess = function onSuccess() {
    clearParams();
    queryClient.invalidateQueries("PT_CREATE_PROPERTY");
  };
  if (isLoading) {
    return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null);
  }
  return /*#__PURE__*/React__default.createElement(reactRouterDom.Switch, null, /*#__PURE__*/React__default.createElement(reactRouterDom.Route, {
    exact: true,
    path: "" + match.path
  }, /*#__PURE__*/React__default.createElement(CreatePropertyForm, {
    onSubmit: createProperty,
    value: params,
    redirectUrl: redirectUrl,
    userType: "employee"
  })), /*#__PURE__*/React__default.createElement(reactRouterDom.Route, {
    exact: true,
    path: match.path + "/save-property"
  }, /*#__PURE__*/React__default.createElement(PTAcknowledgement, {
    data: params,
    onSuccess: onSuccess,
    redirectUrl: redirectUrl,
    userType: "employee"
  })));
};

var PTSearchFields = {
  searchId: {
    propertyIds: {
      type: "text",
      label: "PT_PROPERTY_UNIQUE_ID",
      placeHolder: "PT_PROPERTY_UNIQUE_ID_PLACEHOLDER",
      validation: {
        pattern: {
          value: "[A-Za-z]{2}\-[A-Za-z]{2}\-[0-9]{4}\-[0-9]{2}\-[0-9]{2}\-[0-9]{6}",
          message: "ERR_INVALID_PROPERTY_ID"
        }
      }
    },
    oldPropertyId: {
      type: "text",
      label: "PT_EXISTING_PROPERTY_ID",
      placeholder: "PT_EXISTING_PROPERTY_ID_PLACEHOLDER",
      validation: {
        pattern: {
          value: "[A-Za-z]{2}\-[A-Za-z]{2}\-[0-9]{4}\-[0-9]{2}\-[0-9]{2}\-[0-9]{6}",
          message: "ERR_INVALID_PROPERTY_ID"
        }
      }
    },
    mobileNumber: {
      type: "number",
      label: "PT_HOME_SEARCH_RESULTS_OWN_MOB_LABEL",
      placeHolder: "PT_HOME_SEARCH_RESULTS_OWN_MOB_PLACEHOLDER",
      validation: {
        minLength: {
          value: 10,
          message: "CORE_COMMON_MOBILE_ERROR"
        },
        maxLength: {
          value: 10,
          message: "CORE_COMMON_MOBILE_ERROR"
        },
        pattern: {
          value: /[6789][0-9]{9}/,
          message: "CORE_COMMON_MOBILE_ERROR"
        }
      }
    }
  },
  searchDetail: {
    locality: {
      type: "custom",
      label: "PT_SEARCH_LOCALITY",
      placeHolder: "PT_SEARCH_LOCALITY_PLACEHOLDER",
      validation: {
        required: "PTLOCALITYMANDATORY"
      },
      customComponent: digitUiReactComponents.Localities,
      customCompProps: {
        boundaryType: "revenue",
        keepNull: false,
        optionCardStyles: {
          height: "600px",
          overflow: "auto",
          zIndex: "10"
        },
        disableLoader: true
      }
    },
    doorNo: {
      type: "text",
      label: "PT_SEARCHPROPERTY_TABEL_DOOR_NO",
      placeHolder: "PT_SEARCH_DOOR_NO_PLACEHOLDER",
      validation: {
        pattern: {
          value: "[A-Za-z0-9#,/ -()]{1,63}",
          message: "ERR_INVALID_DOOR_NO"
        }
      }
    },
    name: {
      type: "text",
      label: "PT_SEARCHPROPERTY_TABEL_OWNERNAME",
      placeHolder: "PT_SEARCH_OWNER_NAME_PLACEHOLDER",
      validation: {
        minLength: {
          value: 3,
          message: "PT_MIN_3CHAR"
        },
        pattern: {
          value: "[A-Za-z .`'-]{3,63}",
          message: "PAYMENT_INVALID_NAME"
        }
      }
    }
  }
};
var defaultValues = {
  propertyIds: "",
  mobileNumber: "",
  oldPropertyId: "",
  locality: "",
  name: "",
  doorNo: ""
};
var Search = function Search(_ref) {
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var _useState = React.useState({}),
    payload = _useState[0],
    setPayload = _useState[1];
  var _useState2 = React.useState(defaultValues),
    formData = _useState2[0],
    setFormData = _useState2[1];
  var _useState3 = React.useState("searchId"),
    searchBy = _useState3[0],
    setSearchBy = _useState3[1];
  var _useState4 = React.useState(null),
    showToast = _useState4[0],
    setShowToast = _useState4[1];
  var search = reactRouterDom.useLocation().search;
  var redirectToUrl = new URLSearchParams(search).get('redirectToUrl');
  var SearchComponent = React.memo(Digit.ComponentRegistryService.getComponent("CPTPropertySearchForm"));
  var SearchResultComponent = React.memo(Digit.ComponentRegistryService.getComponent("CPTPropertySearchResults"));
  var _Digit$Hooks$pt$useMD = Digit.Hooks.pt.useMDMS(Digit.ULBService.getStateId(), "DIGIT-UI", "HelpText", {
      select: function select(data) {
        var _data$DIGITUI, _data$DIGITUI$HelpTex, _data$DIGITUI$HelpTex2;
        return data === null || data === void 0 ? void 0 : (_data$DIGITUI = data["DIGIT-UI"]) === null || _data$DIGITUI === void 0 ? void 0 : (_data$DIGITUI$HelpTex = _data$DIGITUI["HelpText"]) === null || _data$DIGITUI$HelpTex === void 0 ? void 0 : (_data$DIGITUI$HelpTex2 = _data$DIGITUI$HelpTex[0]) === null || _data$DIGITUI$HelpTex2 === void 0 ? void 0 : _data$DIGITUI$HelpTex2.PT;
      }
    }),
    ptSearchConfig = _Digit$Hooks$pt$useMD.data,
    isLoading = _Digit$Hooks$pt$useMD.isLoading;
  React.useEffect(function () {
    if (sessionStorage.getItem("searchDetailValue") == 1 && searchBy === "searchId") {
      setSearchBy("searchDetail");
    }
  }, [searchBy]);
  var onReset = React.useCallback(function () {
    setFormData(defaultValues);
    setPayload({});
    setShowToast(null);
  });
  var onSubmit = React.useCallback(function (_data) {
    setFormData(_data);
    if (Object.keys(_data).filter(function (k) {
      return _data[k] && typeof _data[k] !== "object";
    }).length > 0) {
      setPayload(Object.keys(_data).filter(function (k) {
        return _data[k];
      }).reduce(function (acc, key) {
        var _extends2;
        return _extends({}, acc, (_extends2 = {}, _extends2[key] = typeof _data[key] === "object" ? _data[key].code : _data[key], _extends2));
      }, {}));
      setShowToast(null);
    } else {
      setShowToast({
        warning: true,
        label: "ERR_PT_FILL_VALID_FIELDS"
      });
    }
  });
  if (isLoading) return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null);
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Header, null, t("SEARCH_PROPERTY")), /*#__PURE__*/React__default.createElement(SearchComponent, {
    t: t,
    payload: formData,
    searchBy: searchBy,
    setSearchBy: setSearchBy,
    PTSearchFields: PTSearchFields,
    tenantId: tenantId,
    onSubmit: onSubmit,
    onReset: onReset
  }), Object.keys(payload).length > 0 && /*#__PURE__*/React__default.createElement(SearchResultComponent, {
    t: t,
    showToast: showToast,
    setShowToast: setShowToast,
    tenantId: tenantId,
    payload: payload,
    ptSearchConfig: _extends({}, ptSearchConfig),
    redirectToUrl: redirectToUrl
  }), showToast && /*#__PURE__*/React__default.createElement(digitUiReactComponents.Toast, {
    error: showToast.error,
    warning: showToast.warning,
    label: t(showToast.label),
    onClose: function onClose() {
      setShowToast(null);
    }
  }));
};

var EmployeeApp = function EmployeeApp(_ref) {
  var _breadcrumbObj;
  var path = _ref.path,
    url = _ref.url,
    userType = _ref.userType;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var location = reactRouterDom.useLocation();
  var breadcrumbObj = (_breadcrumbObj = {}, _breadcrumbObj["/digit-ui/employee/pt/inbox"] = "ES_TITLE_INBOX", _breadcrumbObj["/digit-ui/employee/pt/new-application"] = "ES_TITLE_NEW_PROPERTY_APPLICATION", _breadcrumbObj["/digit-ui/employee/pt/search"] = "ES_COMMON_SEARCH", _breadcrumbObj["/digit-ui/employee/pt/application-search"] = "ES_COMMON_APPLICATION_SEARCH", _breadcrumbObj);
  var getBreadCrumb = function getBreadCrumb() {
    if (location.pathname.includes("/commonpt/search")) return t("SEARCH_PROPERTY");else if (location.pathname.includes("/view-property")) return t("PT_PROPERTY_INFORMATION");else return t("PT_NEW_PROPERTY");
  };
  var search = reactRouterDom.useLocation().search;
  var redirectUrl = new URLSearchParams(search).get("redirectToUrl");
  var fromScreen = new URLSearchParams(search).get("from") || "";
  var crumbs = [{
    path: "/digit-ui/employee",
    content: t("ES_COMMON_HOME"),
    show: true
  }, {
    path: {
      pathname: redirectUrl,
      state: _extends({}, location.state)
    },
    content: redirectUrl ? redirectUrl !== null && redirectUrl !== void 0 && redirectUrl.includes("employee/tl/new-application") ? t("ES_TITLE_NEW_TRADE_LICESE_APPLICATION") : t("WF_EMPLOYEE_NEWTL_RENEWAL_SUBMIT_BUTTON") : fromScreen && t(fromScreen) || "NONE",
    show: (redirectUrl || fromScreen) && true,
    isBack: fromScreen && true
  }, {
    path: "/digit-ui/employee/dss/drilldown",
    content: getBreadCrumb(),
    show: true
  }];
  var locationCheck = window.location.href.includes("/employee/commonpt/new-application");
  return /*#__PURE__*/React__default.createElement(reactRouterDom.Switch, null, /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("div", {
    className: "ground-container"
  }, /*#__PURE__*/React__default.createElement("div", {
    style: locationCheck ? {
      marginLeft: "12px"
    } : {}
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.BreadCrumb, {
    crumbs: crumbs
  })), /*#__PURE__*/React__default.createElement(digitUiReactComponents.PrivateRoute, {
    exact: true,
    path: path + "/",
    component: function component() {
      return /*#__PURE__*/React__default.createElement(CommonPTLinks, {
        matchPath: path,
        userType: userType
      });
    }
  }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.PrivateRoute, {
    path: path + "/new-application",
    component: function component() {
      return /*#__PURE__*/React__default.createElement(NewApplication, {
        parentUrl: url
      });
    }
  }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.PrivateRoute, {
    path: path + "/search",
    component: function component() {
      return /*#__PURE__*/React__default.createElement(Search, null);
    }
  }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.PrivateRoute, {
    path: path + "/view-property",
    component: function component() {
      return /*#__PURE__*/React__default.createElement(ViewProperty, null);
    }
  }))));
};

var PropertyAssemblyDetails = function PropertyAssemblyDetails(_ref) {
  var _formData$usageCatego, _formData$usageCatego2, _Menu$PropertyTax, _Menu1$PropertyTax, _errors$BuildingType, _errors$floorarea, _errors$constructionA, _errors$usageCategory;
  var t = _ref.t,
    config = _ref.config,
    onSelect = _ref.onSelect,
    userType = _ref.userType,
    formData = _ref.formData,
    formState = _ref.formState,
    setError = _ref.setError,
    clearErrors = _ref.clearErrors;
  var _React$useState = React__default.useState(_extends({}, formData.assemblyDet, {
      'BuildingType': formData === null || formData === void 0 ? void 0 : formData.PropertyType,
      'floorarea': formData === null || formData === void 0 ? void 0 : formData.landArea,
      'constructionArea': formData === null || formData === void 0 ? void 0 : formData.constructionArea,
      'usageCategoryMajor': formData !== null && formData !== void 0 && formData.usageCategoryMajor && (formData === null || formData === void 0 ? void 0 : (_formData$usageCatego = formData.usageCategoryMajor) === null || _formData$usageCatego === void 0 ? void 0 : _formData$usageCatego.code) === "NONRESIDENTIAL.OTHERS" ? {
        code: "" + (formData === null || formData === void 0 ? void 0 : (_formData$usageCatego2 = formData.usageCategoryMajor) === null || _formData$usageCatego2 === void 0 ? void 0 : _formData$usageCatego2.code),
        i18nKey: "PROPERTYTAX_BILLING_SLAB_OTHERS"
      } : formData === null || formData === void 0 ? void 0 : formData.usageCategoryMajor
    })),
    assemblyDetails = _React$useState[0],
    setAssemblyDetails = _React$useState[1];
  var _React$useState2 = React__default.useState(""),
    focusField = _React$useState2[0],
    setFocusField = _React$useState2[1];
  var stateId = Digit.ULBService.getStateId();
  var _useState = React.useState(false),
    isErrors = _useState[0],
    setIsErrors = _useState[1];
  var isMobile = window.Digit.Utils.browser.isMobile();
  var proptype = [];
  var _ref2 = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "PTPropertyType") || {},
    _ref2$data = _ref2.data,
    Menu = _ref2$data === void 0 ? {} : _ref2$data;
  proptype = Menu === null || Menu === void 0 ? void 0 : (_Menu$PropertyTax = Menu.PropertyTax) === null || _Menu$PropertyTax === void 0 ? void 0 : _Menu$PropertyTax.PropertyType;
  var _ref3 = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "UsageCategory") || {},
    _ref3$data = _ref3.data,
    Menu1 = _ref3$data === void 0 ? {} : _ref3$data;
  var usagecat = [];
  usagecat = (Menu1 === null || Menu1 === void 0 ? void 0 : (_Menu1$PropertyTax = Menu1.PropertyTax) === null || _Menu1$PropertyTax === void 0 ? void 0 : _Menu1$PropertyTax.UsageCategory) || [];

  function getPropertyTypeMenu(proptype) {
    if (userType === "employee") {
      var _proptype$filter, _proptype$filter$map;
      return proptype === null || proptype === void 0 ? void 0 : (_proptype$filter = proptype.filter(function (e) {
        return e.code === "VACANT" || e.code.split(".").length > 1;
      })) === null || _proptype$filter === void 0 ? void 0 : (_proptype$filter$map = _proptype$filter.map(function (item) {
        return {
          i18nKey: "COMMON_PROPTYPE_" + stringReplaceAll(item === null || item === void 0 ? void 0 : item.code, ".", "_"),
          code: item === null || item === void 0 ? void 0 : item.code
        };
      })) === null || _proptype$filter$map === void 0 ? void 0 : _proptype$filter$map.sort(function (a, b) {
        return a.i18nKey.split("_").pop().localeCompare(b.i18nKey.split("_").pop());
      });
    } else {
      if (Array.isArray(proptype) && proptype.length > 0) {
        for (i = 0; i < proptype.length; i++) {
          if (i != 1 && i != 4 && Array.isArray(proptype) && proptype.length > 0) menu.push({
            i18nKey: "COMMON_PROPTYPE_" + stringReplaceAll(proptype[i].code, ".", "_"),
            code: proptype[i].code
          });
        }
      }
      menu.sort(function (a, b) {
        return a.i18nKey.split("_").pop().localeCompare(b.i18nKey.split("_").pop());
      });
      return menu;
    }
  }
  function usageCategoryMajorMenu(usagecat) {
    if (userType === "employee") {
      var _usagecat$filter;
      var catMenu = usagecat === null || usagecat === void 0 ? void 0 : (_usagecat$filter = usagecat.filter(function (e) {
        return (e === null || e === void 0 ? void 0 : e.code.split(".").length) <= 2 && e.code !== "NONRESIDENTIAL";
      })) === null || _usagecat$filter === void 0 ? void 0 : _usagecat$filter.map(function (item) {
        var arr = item === null || item === void 0 ? void 0 : item.code.split(".");
        if (arr.length == 2) return {
          i18nKey: "PROPERTYTAX_BILLING_SLAB_" + arr[1],
          code: item === null || item === void 0 ? void 0 : item.code
        };else return {
          i18nKey: "PROPERTYTAX_BILLING_SLAB_" + (item === null || item === void 0 ? void 0 : item.code),
          code: item === null || item === void 0 ? void 0 : item.code
        };
      });
      return catMenu;
    } else {
      for (i = 0; i < 10; i++) {
        if (Array.isArray(usagecat) && usagecat.length > 0 && usagecat[i].code.split(".")[0] == "NONRESIDENTIAL" && usagecat[i].code.split(".").length == 2) {
          menu.push({
            i18nKey: "PROPERTYTAX_BILLING_SLAB_" + usagecat[i].code.split(".")[1],
            code: usagecat[i].code
          });
        }
      }
      return menu;
    }
  }
  var _useForm = reactHookForm.useForm(),
    control = _useForm.control,
    _useForm$formState = _useForm.formState,
    errors = _useForm$formState.errors,
    touched = _useForm$formState.touched,
    trigger = _useForm.trigger,
    watch = _useForm.watch,
    clearLocalErrors = _useForm.clearErrors;
  var formValue = watch();
  var errorStyle = {
    width: "70%",
    marginLeft: "30%",
    fontSize: "12px",
    marginTop: "-21px"
  };
  React__default.useEffect(function () {
    var hasErrors = false;
    var part = {};
    Object.keys(assemblyDetails).forEach(function (key) {
      part[key] = formValue === null || formValue === void 0 ? void 0 : formValue[key];
    });
    if (!lodash.isEqual(part, assemblyDetails)) {
      Object.keys(assemblyDetails).forEach(function (key) {
        if (assemblyDetails[key]) {
          hasErrors = false;
          clearLocalErrors(key);
        } else {
          hasErrors = true;
        }
      });
    }
    if (hasErrors) {
      setError(config === null || config === void 0 ? void 0 : config.key, {
        type: errors
      });
    } else {
      clearErrors(config === null || config === void 0 ? void 0 : config.key);
    }
    trigger();
    setIsErrors(hasErrors);
    onSelect(config === null || config === void 0 ? void 0 : config.key, assemblyDetails);
  }, [assemblyDetails]);
  React__default.useEffect(function () {
    var _formState$errors$con;
    if (Object.keys(errors).length && !lodash.isEqual(((_formState$errors$con = formState.errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.type) || {}, errors)) {
      setError(config.key, {
        type: errors
      });
    } else if (!Object.keys(errors).length && formState.errors[config.key] && isErrors) {
      clearErrors(config.key);
    }
  }, [errors]);
  return /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, null, t('PT_PROP_TYPE') + "*"), /*#__PURE__*/React__default.createElement("div", {
    class: "form-field"
  }, /*#__PURE__*/React__default.createElement(reactHookForm.Controller, {
    name: "BuildingType",
    control: control,
    defaultValue: assemblyDetails === null || assemblyDetails === void 0 ? void 0 : assemblyDetails.BuildingType,
    rules: {
      required: t("REQUIRED_FIELD")
    },
    key: config === null || config === void 0 ? void 0 : config.key,
    render: function render(props) {
      var _getPropertyTypeMenu, _getPropertyTypeMenu2;
      return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Dropdown, {
        selected: ((_getPropertyTypeMenu = getPropertyTypeMenu(proptype)) === null || _getPropertyTypeMenu === void 0 ? void 0 : _getPropertyTypeMenu.length) === 1 ? getPropertyTypeMenu(proptype)[0] : assemblyDetails === null || assemblyDetails === void 0 ? void 0 : assemblyDetails.BuildingType,
        disable: ((_getPropertyTypeMenu2 = getPropertyTypeMenu(proptype)) === null || _getPropertyTypeMenu2 === void 0 ? void 0 : _getPropertyTypeMenu2.length) === 1,
        option: getPropertyTypeMenu(proptype),
        autoFocus: focusField === "BuildingType",
        select: function select(value) {
          var _extends2;
          props.onChange(value);
          setAssemblyDetails(_extends({}, assemblyDetails, (_extends2 = {}, _extends2['BuildingType'] = value, _extends2)));
          setFocusField("BuildingType");
        },
        optionKey: "i18nKey",
        onBlur: props === null || props === void 0 ? void 0 : props.onBlur,
        t: t
      });
    }
  }))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabelError, {
    style: errorStyle
  }, touched !== null && touched !== void 0 && touched.BuildingType ? errors === null || errors === void 0 ? void 0 : (_errors$BuildingType = errors.BuildingType) === null || _errors$BuildingType === void 0 ? void 0 : _errors$BuildingType.message : ""), /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, null, t("PT_TOT_LAND_AREA") + "*"), /*#__PURE__*/React__default.createElement("div", {
    className: "form-field"
  }, /*#__PURE__*/React__default.createElement(reactHookForm.Controller, {
    name: "floorarea",
    control: control,
    defaultValue: assemblyDetails === null || assemblyDetails === void 0 ? void 0 : assemblyDetails.floorarea,
    rules: {
      required: t("REQUIRED_FIELD"),
      validate: function validate(val) {
        return /^([0-9]){0,8}$/i.test(val) ? true : t("PT_TOT_LAND_AREA_ERROR_MESSAGE");
      }
    },
    key: config === null || config === void 0 ? void 0 : config.key,
    render: function render(props) {
      return /*#__PURE__*/React__default.createElement(digitUiReactComponents.TextInput, {
        t: t,
        type: "number",
        isMandatory: false,
        optionKey: "i18nKey",
        name: "totLandArea",
        value: props === null || props === void 0 ? void 0 : props.value,
        autoFocus: focusField === "floorarea",
        onChange: function onChange(ev) {
          var _extends3;
          props === null || props === void 0 ? void 0 : props.onChange(ev.target.value);
          setAssemblyDetails(_extends({}, assemblyDetails, (_extends3 = {}, _extends3['floorarea'] = ev.target.value, _extends3)));
          setFocusField("floorarea");
        },
        onBlur: props === null || props === void 0 ? void 0 : props.onBlur
      });
    }
  }))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabelError, {
    style: errorStyle
  }, touched !== null && touched !== void 0 && touched.floorarea ? errors === null || errors === void 0 ? void 0 : (_errors$floorarea = errors.floorarea) === null || _errors$floorarea === void 0 ? void 0 : _errors$floorarea.message : ""), /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, null, t("PT_TOT_CONSTRUCTION_AREA") + "*"), /*#__PURE__*/React__default.createElement("div", {
    className: "form-field"
  }, /*#__PURE__*/React__default.createElement(reactHookForm.Controller, {
    name: "constructionArea",
    control: control,
    defaultValue: assemblyDetails === null || assemblyDetails === void 0 ? void 0 : assemblyDetails.constructionArea,
    key: config === null || config === void 0 ? void 0 : config.key,
    rules: {
      required: t("REQUIRED_FIELD"),
      validate: function validate(val) {
        return /^([0-9]){0,8}$/i.test(val) && assemblyDetails !== null && assemblyDetails !== void 0 && assemblyDetails.floorarea && parseInt(val) < parseInt(assemblyDetails === null || assemblyDetails === void 0 ? void 0 : assemblyDetails.floorarea) ? true : t("PT_TOT_CONSTRUCTION_AREA_ERROR_MESSAGE");
      }
    },
    render: function render(props) {
      return /*#__PURE__*/React__default.createElement(digitUiReactComponents.TextInput, {
        t: t,
        type: "number",
        isMandatory: false,
        optionKey: "i18nKey",
        name: "totConstructionArea",
        value: props === null || props === void 0 ? void 0 : props.value,
        autoFocus: focusField === "constructionArea",
        onChange: function onChange(ev) {
          var _extends4;
          props === null || props === void 0 ? void 0 : props.onChange(ev.target.value);
          setFocusField("constructionArea");
          setAssemblyDetails(_extends({}, assemblyDetails, (_extends4 = {}, _extends4['constructionArea'] = ev.target.value, _extends4)));
        },
        onBlur: props === null || props === void 0 ? void 0 : props.onBlur
      });
    }
  }))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabelError, {
    style: isMobile ? _extends({}, errorStyle, {
      marginLeft: "0px"
    }) : _extends({}, errorStyle)
  }, touched !== null && touched !== void 0 && touched.constructionArea ? errors === null || errors === void 0 ? void 0 : (_errors$constructionA = errors.constructionArea) === null || _errors$constructionA === void 0 ? void 0 : _errors$constructionA.message : ""), /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, null, t("PT_ASSESMENT_INFO_USAGE_TYPE") + "*"), /*#__PURE__*/React__default.createElement("div", {
    className: "form-field"
  }, /*#__PURE__*/React__default.createElement(reactHookForm.Controller, {
    name: "usageCategoryMajor",
    defaultValue: assemblyDetails === null || assemblyDetails === void 0 ? void 0 : assemblyDetails.usageCategoryMajor,
    rules: {
      required: t("REQUIRED_FIELD")
    },
    control: control,
    key: config === null || config === void 0 ? void 0 : config.key,
    render: function render(props) {
      var _usageCategoryMajorMe;
      return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Dropdown, {
        selected: props === null || props === void 0 ? void 0 : props.value,
        disable: ((_usageCategoryMajorMe = usageCategoryMajorMenu(usagecat)) === null || _usageCategoryMajorMe === void 0 ? void 0 : _usageCategoryMajorMe.length) === 1,
        option: usageCategoryMajorMenu(usagecat),
        autoFocus: focusField === "usageCategoryMajor",
        select: function select(value) {
          var _extends5;
          props === null || props === void 0 ? void 0 : props.onChange(value);
          setFocusField("usageCategoryMajor");
          setAssemblyDetails(_extends({}, assemblyDetails, (_extends5 = {}, _extends5['usageCategoryMajor'] = value, _extends5)));
        },
        optionKey: "i18nKey",
        onBlur: props === null || props === void 0 ? void 0 : props.onBlur,
        t: t
      });
    }
  }))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabelError, {
    style: errorStyle
  }, touched !== null && touched !== void 0 && touched.usageCategoryMajor ? errors === null || errors === void 0 ? void 0 : (_errors$usageCategory = errors.usageCategoryMajor) === null || _errors$usageCategory === void 0 ? void 0 : _errors$usageCategory.message : ""));
};

var PropertyLocationDetails = function PropertyLocationDetails(_ref) {
  var _Digit$UserService$ge, _errors$cityCode, _errors$locality, _errors$houseDoorNo, _errors$buildingColon, _errors$landmarkName;
  var t = _ref.t,
    config = _ref.config,
    onSelect = _ref.onSelect,
    userType = _ref.userType,
    formData = _ref.formData,
    formState = _ref.formState,
    setError = _ref.setError,
    clearErrors = _ref.clearErrors;
  var validation = {};
  var allCities = Digit.Hooks.pt.useTenants() ? Digit.Hooks.pt.useTenants() : Digit.Hooks.tl.useTenants();
  var userInfo = (_Digit$UserService$ge = Digit.UserService.getUser()) === null || _Digit$UserService$ge === void 0 ? void 0 : _Digit$UserService$ge.info;
  userType = (userInfo === null || userInfo === void 0 ? void 0 : userInfo.type) == "EMPLOYEE" ? "employee" : "citizen";
  var cityId = userInfo === null || userInfo === void 0 ? void 0 : userInfo.tenantId;
  var cityName = 'TENANT_TENANTS_' + (userInfo === null || userInfo === void 0 ? void 0 : userInfo.tenantId.replace('.', '_').toUpperCase());
  var cityObj = userType === 'employee' ? {
    code: cityId,
    name: t(cityName),
    i18nKey: cityName
  } : null;
  var _React$useState = React__default.useState(_extends({}, formData === null || formData === void 0 ? void 0 : formData.locationDet, {
      cityCode: cityObj,
      locality: formData === null || formData === void 0 ? void 0 : formData.locality,
      houseDoorNo: formData === null || formData === void 0 ? void 0 : formData.houseDoorNo,
      buildingColonyName: formData === null || formData === void 0 ? void 0 : formData.buildingColonyName,
      landmarkName: formData === null || formData === void 0 ? void 0 : formData.landmarkName
    })),
    locationDetails = _React$useState[0],
    setLocationDetails = _React$useState[1];
  var _React$useState2 = React__default.useState(false),
    isErrors = _React$useState2[0],
    setIsErrors = _React$useState2[1];
  var _useForm = reactHookForm.useForm(),
    control = _useForm.control,
    _useForm$formState = _useForm.formState,
    errors = _useForm$formState.errors,
    touched = _useForm$formState.touched,
    trigger = _useForm.trigger,
    watch = _useForm.watch,
    clearLocalErrors = _useForm.clearErrors;
  var formValue = watch();
  React__default.useEffect(function () {
    var hasErrors = false;
    var part = {};
    Object.keys(locationDetails).forEach(function (key) {
      part[key] = formValue === null || formValue === void 0 ? void 0 : formValue[key];
    });
    if (!lodash.isEqual(part, locationDetails)) {
      Object.keys(locationDetails).forEach(function (key) {
        if (locationDetails[key]) {
          hasErrors = false;
          clearLocalErrors(key);
        } else {
          hasErrors = true;
        }
      });
    }
    if (hasErrors) {
      setError(config === null || config === void 0 ? void 0 : config.key, {
        type: errors
      });
    } else {
      clearErrors(config === null || config === void 0 ? void 0 : config.key);
    }
    trigger();
    setIsErrors(hasErrors);
    onSelect(config === null || config === void 0 ? void 0 : config.key, locationDetails);
  }, [locationDetails]);
  React__default.useEffect(function () {
    var _formState$errors$con;
    if (Object.keys(errors).length && !lodash.isEqual(((_formState$errors$con = formState.errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.type) || {}, errors)) {
      setError(config.key, {
        type: errors
      });
    } else if (!Object.keys(errors).length && formState.errors[config.key] && isErrors) {
      clearErrors(config.key);
    }
  }, [errors]);
  var errorStyle = {
    width: "70%",
    marginLeft: "30%",
    fontSize: "12px",
    marginTop: "-21px"
  };
  return /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, null, t('PT_PROP_CITY') + "*"), /*#__PURE__*/React__default.createElement(reactHookForm.Controller, {
    name: "",
    defaultValue: locationDetails === null || locationDetails === void 0 ? void 0 : locationDetails.cityCode,
    control: control,
    rules: {
      required: t("REQUIRED_FIELD")
    },
    render: function render(_ref2) {
      var value = _ref2.value,
        onBlur = _ref2.onBlur,
        onChange = _ref2.onChange;
      return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Dropdown, {
        className: "form-field",
        selected: value,
        disable: userType === "employee",
        option: allCities,
        select: function select(value) {
          onChange(value);
          setLocationDetails(_extends({}, locationDetails, {
            cityCode: value
          }));
        },
        optionKey: "code",
        onBlur: onBlur,
        t: t
      });
    }
  })), /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabelError, {
    style: errorStyle
  }, touched !== null && touched !== void 0 && touched.cityCode ? errors === null || errors === void 0 ? void 0 : (_errors$cityCode = errors.cityCode) === null || _errors$cityCode === void 0 ? void 0 : _errors$cityCode.message : ""), /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, null, t("PT_PROP_LOCALITY") + "*"), /*#__PURE__*/React__default.createElement("div", {
    className: "form-field"
  }, /*#__PURE__*/React__default.createElement(reactHookForm.Controller, {
    name: "locality",
    defaultValue: locationDetails === null || locationDetails === void 0 ? void 0 : locationDetails.locality,
    control: control,
    rules: {
      required: t("REQUIRED_FIELD")
    },
    render: function render(_ref3) {
      var _locationDetails$city, _locationDetails$city2;
      var value = _ref3.value,
        onBlur = _ref3.onBlur,
        onChange = _ref3.onChange;
      return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Localities, {
        selectLocality: function selectLocality(value) {
          onChange(value);
          setLocationDetails(_extends({}, locationDetails, {
            locality: value
          }));
        },
        tenantId: locationDetails === null || locationDetails === void 0 ? void 0 : (_locationDetails$city = locationDetails.cityCode) === null || _locationDetails$city === void 0 ? void 0 : _locationDetails$city.code,
        boundaryType: "revenue",
        keepNull: false,
        optionCardStyles: {
          height: "600px",
          overflow: "auto",
          zIndex: "10"
        },
        selected: value,
        disable: !(locationDetails !== null && locationDetails !== void 0 && (_locationDetails$city2 = locationDetails.cityCode) !== null && _locationDetails$city2 !== void 0 && _locationDetails$city2.code),
        disableLoader: true,
        onBlur: onBlur
      });
    }
  }))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabelError, {
    style: errorStyle
  }, touched !== null && touched !== void 0 && touched.locality ? errors === null || errors === void 0 ? void 0 : (_errors$locality = errors.locality) === null || _errors$locality === void 0 ? void 0 : _errors$locality.message : ""), /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, null, t("PT_HOUSE_DOOR_NO") + "*"), /*#__PURE__*/React__default.createElement("div", {
    className: "form-field"
  }, /*#__PURE__*/React__default.createElement(reactHookForm.Controller, {
    name: "houseDoorNo",
    defaultValue: locationDetails === null || locationDetails === void 0 ? void 0 : locationDetails.houseDoorNo,
    control: control,
    rules: {
      required: t("REQUIRED_FIELD"),
      validate: function validate(value) {
        return /^([a-zA-Z0-9 !@#$%^&*()_+\-={};':\\\\|,.<>/?]){1,64}$/i.test(value) ? true : t("PT_HOUSE_DOOR_NO_ERROR_MESSAGE");
      }
    },
    render: function render(_ref4) {
      var value = _ref4.value,
        onBlur = _ref4.onBlur,
        _onChange = _ref4.onChange;
      return /*#__PURE__*/React__default.createElement(digitUiReactComponents.TextInput, _extends({
        t: t,
        type: "text",
        isMandatory: false,
        optionKey: "i18nKey",
        name: "houseDoorNo",
        value: value,
        onChange: function onChange(ev) {
          _onChange(ev.target.value);
          setLocationDetails(_extends({}, locationDetails, {
            houseDoorNo: ev.target.value
          }));
        },
        onBlur: onBlur
      }, validation = {
        pattern: "^([a-zA-Z0-9 !@#$%^&*()_+\-={};':\\\\|,.<>/?]){1,64}$",
        title: t("PT_HOUSE_DOOR_NO_ERROR_MESSAGE")
      }));
    }
  }))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabelError, {
    style: errorStyle
  }, touched !== null && touched !== void 0 && touched.houseDoorNo ? errors === null || errors === void 0 ? void 0 : (_errors$houseDoorNo = errors.houseDoorNo) === null || _errors$houseDoorNo === void 0 ? void 0 : _errors$houseDoorNo.message : ""), /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, null, t("PT_BUILDING_COLONY_NAME") + "*"), /*#__PURE__*/React__default.createElement("div", {
    className: "form-field"
  }, /*#__PURE__*/React__default.createElement(reactHookForm.Controller, {
    name: "buildingColonyName",
    defaultValue: locationDetails === null || locationDetails === void 0 ? void 0 : locationDetails.buildingColonyName,
    control: control,
    rules: {
      required: t("REQUIRED_FIELD")
    },
    render: function render(_ref5) {
      var value = _ref5.value,
        _onChange2 = _ref5.onChange,
        onBlur = _ref5.onBlur;
      return /*#__PURE__*/React__default.createElement(digitUiReactComponents.TextInput, {
        t: t,
        type: "text",
        isMandatory: false,
        optionKey: "i18nKey",
        name: "buildingColonyName",
        value: value,
        onChange: function onChange(ev) {
          _onChange2(ev.target.value);
          setLocationDetails(_extends({}, locationDetails, {
            buildingColonyName: ev.target.value
          }));
        },
        onBlur: onBlur
      });
    }
  }))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabelError, {
    style: errorStyle
  }, touched !== null && touched !== void 0 && touched.buildingColonyName ? errors === null || errors === void 0 ? void 0 : (_errors$buildingColon = errors.buildingColonyName) === null || _errors$buildingColon === void 0 ? void 0 : _errors$buildingColon.message : ""), /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, null, "" + t("PT_LANDMARK_NAME")), /*#__PURE__*/React__default.createElement("div", {
    className: "form-field"
  }, /*#__PURE__*/React__default.createElement(reactHookForm.Controller, {
    name: "landmarkName",
    defaultValue: locationDetails === null || locationDetails === void 0 ? void 0 : locationDetails.landmarkName,
    control: control,
    rules: {},
    render: function render(_ref6) {
      var value = _ref6.value,
        _onChange3 = _ref6.onChange,
        onBlur = _ref6.onBlur;
      return /*#__PURE__*/React__default.createElement(digitUiReactComponents.TextInput, {
        t: t,
        type: "text",
        isMandatory: false,
        optionKey: "i18nKey",
        name: "landmarkName",
        value: value,
        onChange: function onChange(ev) {
          _onChange3(ev.target.value);
          setLocationDetails(_extends({}, locationDetails, {
            landmarkName: ev.target.value
          }));
        },
        onBlur: onBlur
      });
    }
  }))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabelError, {
    style: errorStyle
  }, touched !== null && touched !== void 0 && touched.landmarkName ? errors === null || errors === void 0 ? void 0 : (_errors$landmarkName = errors.landmarkName) === null || _errors$landmarkName === void 0 ? void 0 : _errors$landmarkName.message : ""));
};

var getAddress = function getAddress(address, t) {
  return (address !== null && address !== void 0 && address.houseDoorNo ? (address === null || address === void 0 ? void 0 : address.houseDoorNo) + ", " : "") + " " + (address !== null && address !== void 0 && address.buildingColonyName ? (address === null || address === void 0 ? void 0 : address.buildingColonyName) + ", " : "") + (address !== null && address !== void 0 && address.landmarkName ? (address === null || address === void 0 ? void 0 : address.landmarkName) + ", " : "") + t(address === null || address === void 0 ? void 0 : address.locality.i18nkey) + ", " + t(address === null || address === void 0 ? void 0 : address.cityCode.i18nKey) + "," + (t(address === null || address === void 0 ? void 0 : address.pincode) ? "" + address.pincode : " ");
};
var PropertyOwnerDetails = function PropertyOwnerDetails(_ref) {
  var _formData$owners, _formData$owners2, _formData$owners3, _formData$owners4, _formData$owners5, _formData$owners$inde, _formData$owners6, _formData$owners7, _formData$owners8, _formData$owners9, _ownershipCategory$co;
  var t = _ref.t,
    config = _ref.config,
    onSelect = _ref.onSelect,
    userType = _ref.userType,
    formData = _ref.formData,
    formState = _ref.formState,
    setError = _ref.setError,
    clearErrors = _ref.clearErrors;
  var _useLocation = reactRouterDom.useLocation(),
    url = _useLocation.pathname;
  var editScreen = url.includes("/modify-application/");
  var mutationScreen = url.includes("/property-mutation/");
  var isMobile = window.Digit.Utils.browser.isMobile();
  var index = 0;
  var _React$useState = React__default.useState(""),
    ownershipCategory = _React$useState[0],
    setOwnerCategory = _React$useState[1];
  var _React$useState2 = React__default.useState([_extends({}, formData.owners && formData.owners[index], {
      name: formData.owners && formData.owners[index] && formData.owners[index].name || (formData === null || formData === void 0 ? void 0 : (_formData$owners = formData.owners) === null || _formData$owners === void 0 ? void 0 : _formData$owners.name) || "",
      gender: formData.owners && formData.owners[index] && formData.owners[index].gender || (formData === null || formData === void 0 ? void 0 : (_formData$owners2 = formData.owners) === null || _formData$owners2 === void 0 ? void 0 : _formData$owners2.gender),
      mobileNumber: formData.owners && formData.owners[index] && formData.owners[index].mobileNumber || (formData === null || formData === void 0 ? void 0 : (_formData$owners3 = formData.owners) === null || _formData$owners3 === void 0 ? void 0 : _formData$owners3.mobileNumber) || "",
      fatherOrHusbandName: formData.owners && formData.owners[index] && formData.owners[index].fatherOrHusbandName || (formData === null || formData === void 0 ? void 0 : (_formData$owners4 = formData.owners) === null || _formData$owners4 === void 0 ? void 0 : _formData$owners4.fatherOrHusbandName) || "",
      relationship: formData.owners && formData.owners[index] && formData.owners[index].relationship || (formData === null || formData === void 0 ? void 0 : (_formData$owners5 = formData.owners) === null || _formData$owners5 === void 0 ? void 0 : _formData$owners5.relationship),
      ownershipCategory: ownershipCategory,
      ownerType: formData.owners && formData.owners[index] && ((_formData$owners$inde = formData.owners[index]) === null || _formData$owners$inde === void 0 ? void 0 : _formData$owners$inde.ownerType) || ((_formData$owners6 = formData.owners) === null || _formData$owners6 === void 0 ? void 0 : _formData$owners6.ownerType),
      permanentAddress: formData.owners && formData.owners[index] && formData.owners[index].permanentAddress || (formData === null || formData === void 0 ? void 0 : (_formData$owners7 = formData.owners) === null || _formData$owners7 === void 0 ? void 0 : _formData$owners7.permanentAddress) || "",
      email: formData.owners && formData.owners[index] && formData.owners[index].email || (formData === null || formData === void 0 ? void 0 : (_formData$owners8 = formData.owners) === null || _formData$owners8 === void 0 ? void 0 : _formData$owners8.emailId) || "",
      isCoresAddr: false
    })]),
    ownerDetails = _React$useState2[0],
    setOwnerDetails = _React$useState2[1];
  var _useState = React.useState(false),
    isErrors = _useState[0],
    setIsErrors = _useState[1];
  var isUpdateProperty = (formData === null || formData === void 0 ? void 0 : formData.isUpdateProperty) || false;
  var isEditProperty = (formData === null || formData === void 0 ? void 0 : formData.isEditProperty) || false;
  var stateId = Digit.ULBService.getStateId();
  var _Digit$Hooks$pt$useGe = Digit.Hooks.pt.useGenderMDMS(stateId, "common-masters", "GenderType"),
    Menu = _Digit$Hooks$pt$useGe.data;
  var menu = [];
  Menu && Menu.map(function (genderDetails) {
    menu.push({
      i18nKey: "PT_COMMON_GENDER_" + genderDetails.code,
      code: "" + genderDetails.code,
      value: "" + genderDetails.code
    });
  });
  var _Digit$Hooks$tl$useTr = Digit.Hooks.tl.useTradeLicenseMDMS(stateId, "common-masters", "TLOwnerTypeWithSubtypes", {
      userType: userType
    }),
    dropdownData = _Digit$Hooks$tl$useTr.data;
  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "OwnerType"),
    Menu1 = _Digit$Hooks$pt$usePr.data;
  var _useState2 = React.useState(formData === null || formData === void 0 ? void 0 : (_formData$owners9 = formData.owners) === null || _formData$owners9 === void 0 ? void 0 : _formData$owners9.isCorrespondenceAddress);
  function setCorrespondenceAddress(e, ind) {
    var address = "";
    if (e.target.checked === true) {
      var _formData$searchResul, _formData$searchResul2;
      var locationDet = mutationScreen ? formData === null || formData === void 0 ? void 0 : (_formData$searchResul = formData.searchResult) === null || _formData$searchResul === void 0 ? void 0 : (_formData$searchResul2 = _formData$searchResul.property) === null || _formData$searchResul2 === void 0 ? void 0 : _formData$searchResul2.locationDet : formData === null || formData === void 0 ? void 0 : formData.locationDet;
      address = getAddress(locationDet, t);
    }
    updateState("permanentAddress", ind, address);
    updateState("isCoresAddr", ind, e.target.checked);
  }

  var GuardianOptions = [{
    name: "HUSBAND",
    code: "HUSBAND",
    i18nKey: "PT_RELATION_HUSBAND"
  }, {
    name: "Father",
    code: "FATHER",
    i18nKey: "PT_RELATION_FATHER"
  }
  ];

  var _useForm = reactHookForm.useForm(),
    control = _useForm.control,
    _useForm$formState = _useForm.formState,
    errors = _useForm$formState.errors,
    touched = _useForm$formState.touched,
    trigger = _useForm.trigger,
    watch = _useForm.watch,
    clearLocalErrors = _useForm.clearErrors;
  var formValue = watch();
  React__default.useEffect(function () {
    var hasErrors = false;
    var part = {};
    ownerDetails.map(function (own) {
      Object.keys(own).forEach(function (key) {
        part[key] = formValue === null || formValue === void 0 ? void 0 : formValue[key];
      });
      if (!lodash.isEqual(part, own)) {
        Object.keys(own).forEach(function (key) {
          if (own[key]) {
            hasErrors = false;
            clearLocalErrors(key);
          } else {
            hasErrors = true;
          }
        });
      }
    });
    if (hasErrors) {
      setError(config === null || config === void 0 ? void 0 : config.key, {
        type: errors
      });
    } else {
      clearErrors(config === null || config === void 0 ? void 0 : config.key);
    }
    trigger();
    setIsErrors(hasErrors);
    onSelect(config === null || config === void 0 ? void 0 : config.key, ownerDetails.map(function (own) {
      return _extends({}, own, {
        ownershipCategory: ownershipCategory === null || ownershipCategory === void 0 ? void 0 : ownershipCategory.value
      });
    }));
  }, [ownerDetails]);
  React__default.useEffect(function () {
    var _formState$errors$con;
    if (Object.keys(errors).length && !lodash.isEqual(((_formState$errors$con = formState.errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.type) || {}, errors)) {
      setError(config.key, {
        type: errors
      });
    } else if (!Object.keys(errors).length && formState.errors[config.key] && isErrors) {
      clearErrors(config.key);
    }
  }, [errors]);
  var updateState = function updateState(filedName, ind, value) {
    if (filedName === void 0) {
      filedName = "name";
    }
    if (ind === void 0) {
      ind = 0;
    }
    if (value === void 0) {
      value = "";
    }
    setOwnerDetails(ownerDetails.map(function (owner, i) {
      if (i === ind) {
        owner[filedName] = value;
      }
      return _extends({}, owner);
    }));
  };
  var errorStyle = {
    width: "70%",
    marginLeft: "30%",
    fontSize: "12px",
    marginTop: "-21px"
  };
  var ismultiple = ownershipCategory !== null && ownershipCategory !== void 0 && (_ownershipCategory$co = ownershipCategory.code) !== null && _ownershipCategory$co !== void 0 && _ownershipCategory$co.includes("MULTIPLEOWNERS") ? true : false;
  return /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, {
    className: ""
  }, t("TL_NEW_OWNER_DETAILS_OWNERSHIP_TYPE_LABEL") + "*"), /*#__PURE__*/React__default.createElement(reactHookForm.Controller, {
    name: "ownershipCategory",
    defaultValue: ownershipCategory,
    control: control,
    rules: {
      required: t("REQUIRED_FIELD")
    },
    render: function render(_ref2) {
      var value = _ref2.value,
        onChange = _ref2.onChange,
        onBlur = _ref2.onBlur;
      return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Dropdown, {
        className: "form-field",
        selected: value,
        option: dropdownData === null || dropdownData === void 0 ? void 0 : dropdownData.filter(function (dd) {
          var _dd$code;
          return (_dd$code = dd.code) === null || _dd$code === void 0 ? void 0 : _dd$code.includes("INDIVIDUAL");
        }),
        select: function select(value) {
          onChange(value);
          setOwnerCategory(value);
        },
        optionKey: "i18nKey",
        onBlur: onBlur,
        t: t
      });
    }
  })), ownerDetails === null || ownerDetails === void 0 ? void 0 : ownerDetails.map(function (owner, index) {
    var _errors, _errors2, _errors3, _errors4, _errors5, _errors6, _ownerDetails$index, _ownerDetails$index3, _ownerDetails$index4, _ownerDetails$index5;
    return /*#__PURE__*/React__default.createElement("div", {
      style: {
        border: "1px solid #D6D5D4",
        background: "#FAFAFA",
        borderRadius: "4px",
        boxSizing: "border-box",
        margin: "16px 0px",
        padding: "16px 8px"
      }
    }, isMobile && ismultiple && ownerDetails.length > 1 && /*#__PURE__*/React__default.createElement("div", {
      style: {
        display: "flex",
        justifyContent: "flex-end"
      }
    }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.LinkButton, {
      label: /*#__PURE__*/React__default.createElement(digitUiReactComponents.DeleteIcon, {
        style: {
          bottom: "5px"
        },
        fill: !(ownerDetails.length == 1) ? "#494848" : "#FAFAFA"
      }),
      style: {
        margin: "0px"
      },
      onClick: function onClick(e) {
        setOwnerDetails([].concat(ownerDetails.filter(function (own, ind) {
          return ind != index;
        })));
      }
    })), /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, null, t("PT_FORM3_MOBILE_NUMBER") + "*"), /*#__PURE__*/React__default.createElement("div", {
      className: "form-field"
    }, /*#__PURE__*/React__default.createElement(reactHookForm.Controller, {
      key: "mobileNumber" + index,
      name: "mobileNumber" + index,
      defaultValue: owner.mobileNumber,
      control: control,
      rules: {
        required: t("REQUIRED_FIELD"),
        validate: function validate(value) {
          return /[6-9]{1}[0-9]{9}/i.test(value) ? true : t("CORE_COMMON_APPLICANT_MOBILE_NUMBER_INVALID");
        }
      },
      render: function render(_ref3) {
        var value = _ref3.value,
          _onChange = _ref3.onChange,
          onBlur = _ref3.onBlur;
        return /*#__PURE__*/React__default.createElement(digitUiReactComponents.MobileNumber
        , {
          value: value,
          name: "mobileNumber" + index,
          onChange: function onChange(value) {
            _onChange(value);
            updateState("mobileNumber", index, value);
          },
          disable: isUpdateProperty || isEditProperty
          ,
          labelStyle: {
            border: "1px solid #000",
            borderRight: "none"
          },
          onBlur: onBlur
        });
      }
    })), !isMobile && /*#__PURE__*/React__default.createElement("div", {
      style: {
        display: "flex",
        justifyContent: "flex-end",
        width: "20%",
        alignSelf: "flex-start"
      }
    }, ismultiple && /*#__PURE__*/React__default.createElement(digitUiReactComponents.LinkButton, {
      label: /*#__PURE__*/React__default.createElement(digitUiReactComponents.DeleteIcon, {
        style: {
          bottom: "0px"
        },
        fill: !(ownerDetails.length == 1) ? "#494848" : "#FAFAFA"
      }),
      style: {
        margin: "0px"
      },
      onClick: function onClick(e) {
        setOwnerDetails([].concat(ownerDetails.filter(function (own, ind) {
          return ind != index;
        })));
      }
    }))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabelError, {
      style: errorStyle
    }, touched !== null && touched !== void 0 && touched["mobileNumber" + index] ? errors === null || errors === void 0 ? void 0 : (_errors = errors["mobileNumber" + index]) === null || _errors === void 0 ? void 0 : _errors.message : ""), /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, null, t("PT_OWNER_NAME") + "*"), /*#__PURE__*/React__default.createElement("div", {
      className: "form-field"
    }, /*#__PURE__*/React__default.createElement(reactHookForm.Controller, {
      key: "name" + index,
      name: "name" + index,
      defaultValue: owner === null || owner === void 0 ? void 0 : owner.name,
      control: control,
      rules: {
        required: t("REQUIRED_FIELD"),
        validate: function validate(value) {
          return /^[a-zA-Z-.`' ]*$/i.test(value) ? true : t("PT_NAME_ERROR_MESSAGE");
        }
      },
      render: function render(_ref4) {
        var value = _ref4.value,
          _onChange2 = _ref4.onChange,
          onBlur = _ref4.onBlur;
        return /*#__PURE__*/React__default.createElement(digitUiReactComponents.TextInput, {
          t: t,
          type: "text",
          isMandatory: false,
          optionKey: "i18nKey",
          name: "name" + index,
          value: value,
          onChange: function onChange(ev) {
            _onChange2(ev.target.value);
            updateState("name", index, ev.target.value);
          },
          disable: isUpdateProperty || isEditProperty,
          onBlur: onBlur
        });
      }
    }))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabelError, {
      style: errorStyle
    }, touched !== null && touched !== void 0 && touched["name" + index] ? errors === null || errors === void 0 ? void 0 : (_errors2 = errors["name" + index]) === null || _errors2 === void 0 ? void 0 : _errors2.message : ""), /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, null, t("PT_FORM3_GENDER") + "*"), /*#__PURE__*/React__default.createElement("div", {
      className: "form-field"
    }, /*#__PURE__*/React__default.createElement(reactHookForm.Controller, {
      key: "gender" + index,
      name: "gender" + index,
      defaultValue: owner === null || owner === void 0 ? void 0 : owner.gender,
      control: control,
      rules: {
        required: t("REQUIRED_FIELD")
      },
      render: function render(_ref5) {
        var value = _ref5.value,
          onChange = _ref5.onChange,
          onBlur = _ref5.onBlur;
        return /*#__PURE__*/React__default.createElement(digitUiReactComponents.RadioOrSelect, {
          name: "gender" + index,
          options: menu,
          selectedOption: value,
          optionKey: "code",
          onSelect: function onSelect(value) {
            onChange(value);
            updateState("gender", index, value);
          },
          t: t,
          disabled: isUpdateProperty || isEditProperty,
          isDropDown: window.location.href.includes("/employee") ? true : false,
          onBlur: onBlur
        });
      }
    }))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabelError, {
      style: errorStyle
    }, touched !== null && touched !== void 0 && touched["gender" + index] ? errors === null || errors === void 0 ? void 0 : (_errors3 = errors["gender" + index]) === null || _errors3 === void 0 ? void 0 : _errors3.message : ""), /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, null, t("PT_FORM3_GUARDIAN_NAME") + "*"), /*#__PURE__*/React__default.createElement("div", {
      className: "form-field"
    }, /*#__PURE__*/React__default.createElement(reactHookForm.Controller, {
      key: "fatherOrHusbandName" + index,
      name: "fatherOrHusbandName" + index,
      defaultValue: owner === null || owner === void 0 ? void 0 : owner.fatherOrHusbandName,
      control: control,
      rules: {
        required: t("REQUIRED_FIELD"),
        validate: function validate(value) {
          return /^[a-zA-Z-.`' ]*$/i.test(value) ? true : t("PT_NAME_ERROR_MESSAGE");
        }
      },
      render: function render(_ref6) {
        var value = _ref6.value,
          _onChange3 = _ref6.onChange,
          onBlur = _ref6.onBlur;
        return /*#__PURE__*/React__default.createElement(digitUiReactComponents.TextInput, {
          t: t,
          type: "text",
          isMandatory: false,
          optionKey: "i18nKey",
          name: "fatherOrHusbandName" + index,
          value: value,
          onChange: function onChange(ev) {
            _onChange3(ev.target.value);
            updateState("fatherOrHusbandName", index, ev.target.value);
          },
          disable: isUpdateProperty || isEditProperty,
          onBlur: onBlur
        });
      }
    }))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabelError, {
      style: errorStyle
    }, touched !== null && touched !== void 0 && touched["fatherOrHusbandName" + index] ? errors === null || errors === void 0 ? void 0 : (_errors4 = errors["fatherOrHusbandName" + index]) === null || _errors4 === void 0 ? void 0 : _errors4.message : ""), /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, null, t("PT_FORM3_RELATIONSHIP") + "*"), /*#__PURE__*/React__default.createElement("div", {
      className: "form-field"
    }, /*#__PURE__*/React__default.createElement(reactHookForm.Controller, {
      key: "relationship" + index,
      name: "relationship" + index,
      defaultValue: owner === null || owner === void 0 ? void 0 : owner.relationship,
      control: control,
      rules: {
        required: t("REQUIRED_FIELD")
      },
      render: function render(_ref7) {
        var value = _ref7.value,
          onChange = _ref7.onChange,
          onBlur = _ref7.onBlur;
        return /*#__PURE__*/React__default.createElement(digitUiReactComponents.RadioOrSelect, {
          name: "relationship" + index,
          options: GuardianOptions,
          selectedOption: value,
          optionKey: "i18nKey",
          onSelect: function onSelect(value) {
            onChange(value);
            updateState("relationship", index, value);
          },
          t: t,
          disabled: isUpdateProperty || isEditProperty,
          isDropDown: window.location.href.includes("/employee") ? true : false,
          onBlur: onBlur
        });
      }
    }))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabelError, {
      style: errorStyle
    }, touched !== null && touched !== void 0 && touched["relationship" + index] ? errors === null || errors === void 0 ? void 0 : (_errors5 = errors["relationship" + index]) === null || _errors5 === void 0 ? void 0 : _errors5.message : ""), /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, {
      className: ""
    }, t("PT_SPECIAL_APPLICANT_CATEGORY") + "*"), /*#__PURE__*/React__default.createElement("div", {
      className: "form-field"
    }, /*#__PURE__*/React__default.createElement("div", {
      className: "form-pt-dropdown-only"
    }, /*#__PURE__*/React__default.createElement(reactHookForm.Controller, {
      key: "ownerType" + index,
      name: "ownerType" + index,
      defaultValue: owner === null || owner === void 0 ? void 0 : owner.ownerType,
      control: control,
      rules: {
        required: t("REQUIRED_FIELD")
      },
      render: function render(_ref8) {
        var value = _ref8.value,
          onChange = _ref8.onChange,
          onBlur = _ref8.onBlur;
        return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Dropdown, {
          selected: (Menu1 === null || Menu1 === void 0 ? void 0 : Menu1.length) === 1 ? Menu1[0] : value,
          disable: (Menu1 === null || Menu1 === void 0 ? void 0 : Menu1.length) === 1 || editScreen,
          option: Menu1 ? Menu1.sort(function (a, b) {
            return a.name.localeCompare(b.name);
          }) : [],
          select: function select(value) {
            onChange(value);
            updateState("ownerType", index, value);
          },
          optionKey: "i18nKey",
          t: t,
          onBlur: onBlur
        });
      }
    })))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabelError, {
      style: errorStyle
    }, touched !== null && touched !== void 0 && touched["ownerType" + index] ? errors === null || errors === void 0 ? void 0 : (_errors6 = errors["ownerType" + index]) === null || _errors6 === void 0 ? void 0 : _errors6.message : ""), /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, null, t("PT_CORRESPONDANCE_ADDRESS")), /*#__PURE__*/React__default.createElement("div", {
      className: "form-field"
    }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.TextArea, {
      isMandatory: false,
      optionKey: "i18nKey",
      t: t,
      disabled: (ownerDetails === null || ownerDetails === void 0 ? void 0 : (_ownerDetails$index = ownerDetails[index]) === null || _ownerDetails$index === void 0 ? void 0 : _ownerDetails$index.isCoresAddr) === true,
      name: "address" + index,
      onChange: function onChange(e) {
        var _ownerDetails$index2;
        if (!((ownerDetails === null || ownerDetails === void 0 ? void 0 : (_ownerDetails$index2 = ownerDetails[index]) === null || _ownerDetails$index2 === void 0 ? void 0 : _ownerDetails$index2.isCoresAddr) === true)) {
          updateState("permanentAddress", index, e.target.value);
        }
      },
      value: ownerDetails === null || ownerDetails === void 0 ? void 0 : (_ownerDetails$index3 = ownerDetails[index]) === null || _ownerDetails$index3 === void 0 ? void 0 : _ownerDetails$index3.permanentAddress
    }))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.CheckBox, {
      className: "form-field",
      label: "" + t("PT_COMMON_SAME_AS_PROPERTY_ADDRESS"),
      onChange: function onChange(e) {
        return setCorrespondenceAddress(e, index);
      },
      value: ownerDetails === null || ownerDetails === void 0 ? void 0 : (_ownerDetails$index4 = ownerDetails[index]) === null || _ownerDetails$index4 === void 0 ? void 0 : _ownerDetails$index4.isCoresAddr,
      checked: (ownerDetails === null || ownerDetails === void 0 ? void 0 : (_ownerDetails$index5 = ownerDetails[index]) === null || _ownerDetails$index5 === void 0 ? void 0 : _ownerDetails$index5.isCoresAddr) || false,
      style: window.location.href.includes("/citizen/") ? {
        paddingTop: "10px"
      } : {}
    }));
  }), ismultiple ? /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement("div", {
    style: {
      display: "flex",
      paddingBottom: "15px",
      color: "#FF8C00"
    }
  }, /*#__PURE__*/React__default.createElement("button", {
    type: "button",
    style: {
      paddingTop: "10px"
    },
    onClick: function onClick() {
      return setOwnerDetails(function (prev) {
        return [].concat(prev, [{
          name: "",
          gender: "",
          mobileNumber: "",
          fatherOrHusbandName: "",
          relationship: "",
          ownershipCategory: ownershipCategory,
          ownerType: "",
          permanentAddress: "",
          email: "",
          isCoresAddr: false
        }]);
      });
    }
  }, t("PT_COMMON_ADD_APPLICANT_LABEL")))) : null);
};

var SwitchComponent = function SwitchComponent(props) {
  return /*#__PURE__*/React__default.createElement("div", {
    className: "w-fullwidth PropertySearchFormSwitcher"
  }, props.keys.map(function (key) {
    return /*#__PURE__*/React__default.createElement("span", {
      key: key,
      className: props.searchBy === key ? "selected" : "non-selected",
      onClick: function onClick() {
        key === "searchDetail" && !sessionStorage.getItem("searchDetailValue") ? sessionStorage.setItem("searchDetailValue", 1) : "";
        key === "searchId" && sessionStorage.getItem("searchDetailValue") == 1 ? sessionStorage.setItem("searchDetailValue", 2) : "";
        props.onSwitch(key);
        props.onReset();
      }
    }, props.t("PT_SEARCH_BY_" + (key === null || key === void 0 ? void 0 : key.toUpperCase())));
  }));
};
var SearchPTID = function SearchPTID(_ref) {
  var tenantId = _ref.tenantId,
    t = _ref.t,
    onSubmit = _ref.onSubmit,
    onReset = _ref.onReset,
    searchBy = _ref.searchBy,
    PTSearchFields = _ref.PTSearchFields,
    setSearchBy = _ref.setSearchBy,
    payload = _ref.payload;
  var _useForm = reactHookForm.useForm({
      defaultValues: _extends({}, payload)
    }),
    register = _useForm.register,
    control = _useForm.control,
    handleSubmit = _useForm.handleSubmit,
    watch = _useForm.watch,
    getValues = _useForm.getValues,
    formState = _useForm.formState;
  var formValue = watch();
  var fields = (PTSearchFields === null || PTSearchFields === void 0 ? void 0 : PTSearchFields[searchBy]) || {};
  return /*#__PURE__*/React__default.createElement("div", {
    className: "PropertySearchForm"
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.SearchForm, {
    onSubmit: onSubmit,
    handleSubmit: handleSubmit
  }, /*#__PURE__*/React__default.createElement(SwitchComponent, {
    keys: Object.keys(PTSearchFields || {}),
    searchBy: searchBy,
    onReset: onReset,
    t: t,
    onSwitch: setSearchBy
  }), fields && Object.keys(fields).map(function (key) {
    var _field$validation, _formState$errors, _formState$errors$key;
    var field = fields[key];
    var validation = (field === null || field === void 0 ? void 0 : field.validation) || {};
    return /*#__PURE__*/React__default.createElement(digitUiReactComponents.SearchField, {
      key: key
    }, /*#__PURE__*/React__default.createElement("label", null, t(field === null || field === void 0 ? void 0 : field.label), "" + (field !== null && field !== void 0 && (_field$validation = field.validation) !== null && _field$validation !== void 0 && _field$validation.required ? "*" : "")), (field === null || field === void 0 ? void 0 : field.type) === "custom" ? /*#__PURE__*/React__default.createElement(reactHookForm.Controller, {
      name: key,
      defaultValue: formValue === null || formValue === void 0 ? void 0 : formValue[key],
      rules: field.validation,
      control: control,
      render: function render(props, customProps) {
        return /*#__PURE__*/React__default.createElement(field.customComponent, _extends({
          selectLocality: function selectLocality(d) {
            props.onChange(d);
          },
          tenantId: tenantId,
          selected: formValue === null || formValue === void 0 ? void 0 : formValue[key]
        }, field.customCompProps));
      }
    }) : /*#__PURE__*/React__default.createElement(digitUiReactComponents.TextInput, {
      name: key,
      type: field === null || field === void 0 ? void 0 : field.type,
      inputRef: register(_extends({
        value: getValues(key),
        shouldUnregister: true
      }, validation))
    }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabelError, {
      style: {
        marginTop: "-10px",
        marginBottom: "-10px"
      }
    }, t(formState === null || formState === void 0 ? void 0 : (_formState$errors = formState.errors) === null || _formState$errors === void 0 ? void 0 : (_formState$errors$key = _formState$errors[key]) === null || _formState$errors$key === void 0 ? void 0 : _formState$errors$key.message)));
  }), /*#__PURE__*/React__default.createElement("div", {
    className: "pt-search-action"
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.SearchField, {
    className: "pt-search-action-reset"
  }, /*#__PURE__*/React__default.createElement("p", {
    onClick: function onClick() {
      onReset({});
    }
  }, t("ES_COMMON_CLEAR_ALL"))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.SearchField, {
    className: "pt-search-action-submit"
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.SubmitBar, {
    label: t("ES_COMMON_SEARCH"),
    submit: true
  })))));
};

var GetCell = function GetCell(value) {
  return /*#__PURE__*/React__default.createElement("span", {
    className: "cell-text"
  }, value);
};
var SearchPTID$1 = function SearchPTID(_ref) {
  var _data$Properties, _data$Properties2;
  var tenantId = _ref.tenantId,
    t = _ref.t,
    payload = _ref.payload,
    showToast = _ref.showToast,
    setShowToast = _ref.setShowToast,
    ptSearchConfig = _ref.ptSearchConfig,
    redirectToUrl = _ref.redirectToUrl;
  var history = reactRouterDom.useHistory();
  var _useLocation = reactRouterDom.useLocation(),
    state = _useLocation.state;
  var _useState = React.useState(_extends({}, payload)),
    searchQuery = _useState[0];
  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertySearchWithDue({
      tenantId: tenantId,
      filters: searchQuery,
      configs: {
        enabled: Object.keys(payload).length > 0 ? true : false,
        retry: false,
        retryOnMount: false,
        staleTime: Infinity
      }
    }),
    data = _Digit$Hooks$pt$usePr.data,
    isLoading = _Digit$Hooks$pt$usePr.isLoading,
    error = _Digit$Hooks$pt$usePr.error;
  var columns = React.useMemo(function () {
    return [{
      Header: t("PT_COMMON_TABLE_COL_PT_ID"),
      disableSortBy: true,
      Cell: function Cell(_ref2) {
        var row = _ref2.row;
        return /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement("span", {
          className: "link"
        }, /*#__PURE__*/React__default.createElement("span", {
          onClick: function onClick() {
            history.push("/digit-ui/employee/commonpt/view-property?propertyId=" + row.original["propertyId"] + "&tenantId=" + tenantId + "&redirectToUrl=" + redirectToUrl, _extends({}, state));
          }
        }, row.original["propertyId"])));
      }
    }, {
      Header: t("PT_COMMON_TABLE_COL_OWNER_NAME"),
      disableSortBy: true,
      Cell: function Cell(_ref3) {
        var row = _ref3.row;
        return GetCell(row.original.name || "");
      }
    }, {
      Header: t("ES_INBOX_LOCALITY"),
      disableSortBy: true,
      Cell: function Cell(_ref4) {
        var row = _ref4.row;
        return GetCell(t(row.original.locality) || "");
      }
    }, {
      Header: t("PT_COMMON_TABLE_COL_STATUS_LABEL"),
      Cell: function Cell(_ref5) {
        var _row$original;
        var row = _ref5.row;
        return GetCell(t((row === null || row === void 0 ? void 0 : (_row$original = row.original) === null || _row$original === void 0 ? void 0 : _row$original.status) || "NA"));
      },
      disableSortBy: true
    }, {
      Header: t("PT_AMOUNT_DUE"),
      Cell: function Cell(_ref6) {
        var _row$original2, _row$original3;
        var row = _ref6.row;
        return GetCell(row !== null && row !== void 0 && (_row$original2 = row.original) !== null && _row$original2 !== void 0 && _row$original2.due ? "\u20B9 " + (row === null || row === void 0 ? void 0 : (_row$original3 = row.original) === null || _row$original3 === void 0 ? void 0 : _row$original3.due) : t("PT_NA"));
      },
      disableSortBy: true
    }, {
      Header: t("ES_SEARCH_ACTION"),
      disableSortBy: true,
      Cell: function Cell(_ref7) {
        var _row$original4;
        var row = _ref7.row;
        return /*#__PURE__*/React__default.createElement("div", null, (row === null || row === void 0 ? void 0 : (_row$original4 = row.original) === null || _row$original4 === void 0 ? void 0 : _row$original4.status) !== "INACTIVE" ? /*#__PURE__*/React__default.createElement("span", {
          className: "link"
        }, redirectToUrl ? /*#__PURE__*/React__default.createElement("span", {
          onClick: function onClick() {
            history.push(redirectToUrl + "?propertyId=" + row.original["propertyId"] + "&tenantId=" + tenantId, _extends({}, state));
            setTimeout(function () {
              return window.scrollTo(0, 1600);
            }, 400);
          }
        }, t("CPT_SELECT_PROPERTY")) : null) : t("PT_NA"));
      }
    }];
  }, []);
  var isMobile = window.Digit.Utils.browser.isMobile();
  if (isLoading) {
    showToast && setShowToast(null);
    return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null);
  }
  if (error) {
    var _error$response, _error$response$data, _error$response$data$, _error$response$data$2;
    !showToast && setShowToast({
      error: true,
      label: (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.Errors) === null || _error$response$data$ === void 0 ? void 0 : (_error$response$data$2 = _error$response$data$[0]) === null || _error$response$data$2 === void 0 ? void 0 : _error$response$data$2.code) || error
    });
    return null;
  }
  var PTEmptyResultInbox = React.memo(Digit.ComponentRegistryService.getComponent("PTEmptyResultInbox"));
  var getData = function getData(tableData) {
    var _tableData;
    if (tableData === void 0) {
      tableData = [];
    }
    return (_tableData = tableData) === null || _tableData === void 0 ? void 0 : _tableData.map(function (dataObj) {
      var obj = {};
      columns.forEach(function (el) {
        if (el.Cell) obj[el.Header] = el.Cell({
          row: {
            original: dataObj
          }
        });
      });
      return obj;
    });
  };
  var tableData = Object.values((data === null || data === void 0 ? void 0 : data.FormattedData) || {}) || [];
  if (ptSearchConfig !== null && ptSearchConfig !== void 0 && ptSearchConfig.ptSearchCount && payload.locality && tableData && tableData.length > ptSearchConfig.ptSearchCount) {
    !showToast && setShowToast({
      error: true,
      label: "PT_MODIFY_SEARCH_CRITERIA"
    });
    return null;
  }
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, (data === null || data === void 0 ? void 0 : (_data$Properties = data.Properties) === null || _data$Properties === void 0 ? void 0 : _data$Properties.length) === 0 ? /*#__PURE__*/React__default.createElement(PTEmptyResultInbox, {
    data: true
  }) : isMobile ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.DetailsCard, {
    data: getData(tableData),
    t: t
  }) : /*#__PURE__*/React__default.createElement(digitUiReactComponents.Table, {
    t: t,
    data: tableData,
    totalRecords: data === null || data === void 0 ? void 0 : (_data$Properties2 = data.Properties) === null || _data$Properties2 === void 0 ? void 0 : _data$Properties2.length,
    columns: columns,
    getCellProps: function getCellProps(cellInfo) {
      return {
        style: {
          padding: "20px 18px",
          fontSize: "16px"
        }
      };
    },
    manualPagination: false,
    disableSort: true
  }));
};

var actions = [];
var getAction = function getAction(flow) {
  switch (flow) {
    case "STAKEHOLDER":
      actions = [];
      break;
    default:
      actions = ['TL_COMMON_TR_DETAILS', 'TL_LOCATION_AND_OWNER_DETAILS', 'TL_DOCUMENT_DETAIL', 'TL_COMMON_SUMMARY'];
  }
};
var CPTTimeline = function CPTTimeline(_ref) {
  var _ref$currentStep = _ref.currentStep,
    currentStep = _ref$currentStep === void 0 ? 1 : _ref$currentStep,
    _ref$flow = _ref.flow,
    flow = _ref$flow === void 0 ? "" : _ref$flow;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var isMobile = window.Digit.Utils.browser.isMobile();
  getAction(flow);
  return /*#__PURE__*/React__default.createElement("div", {
    className: "timeline-container",
    style: isMobile ? {} : {
      maxWidth: "960px",
      minWidth: "640px",
      marginRight: "auto"
    }
  }, actions.map(function (action, index, arr) {
    return /*#__PURE__*/React__default.createElement("div", {
      className: "timeline-checkpoint",
      key: index
    }, /*#__PURE__*/React__default.createElement("div", {
      className: "timeline-content"
    }, /*#__PURE__*/React__default.createElement("span", {
      className: "circle " + (index <= currentStep - 1 && 'active')
    }, index < currentStep - 1 ? /*#__PURE__*/React__default.createElement(digitUiReactComponents.TickMark, null) : index + 1), /*#__PURE__*/React__default.createElement("span", {
      className: "secondary-color"
    }, t(action))), index < arr.length - 1 && /*#__PURE__*/React__default.createElement("span", {
      className: "line " + (index < currentStep - 1 && 'active')
    }));
  }));
};

var KnowYourProperty = function KnowYourProperty(_ref) {
  var _formData, _formData$PropDetails;
  var t = _ref.t,
    config = _ref.config,
    onSelect = _ref.onSelect,
    formData = _ref.formData;
  var _useState = React.useState((_formData = formData) === null || _formData === void 0 ? void 0 : (_formData$PropDetails = _formData.PropDetails) === null || _formData$PropDetails === void 0 ? void 0 : _formData$PropDetails.KnowProperty),
    KnowProperty = _useState[0],
    setKnowProperty = _useState[1];
  if (window.location.href.includes("/tl/tradelicence/edit-application/") || window.location.href.includes("/renew-trade/")) {
    var EditformData = JSON.parse(sessionStorage.getItem("EditFormData"));
    formData = _extends({}, formData, EditformData);
  }
  var menu = [{
    i18nKey: "TL_COMMON_YES",
    code: "YES"
  }, {
    i18nKey: "TL_COMMON_NO",
    code: "NO"
  }];
  var onSkip = function onSkip() {
    return onSelect();
  };
  function selectKnowProperty(value) {
    setKnowProperty(value);
  }
  function goNext() {
    sessionStorage.setItem("KnowProperty", KnowProperty.i18nKey);
    onSelect(config.key, {
      KnowProperty: KnowProperty
    });
  }
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React__default.createElement(CPTTimeline, null) : null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !KnowProperty
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.RadioButtons, {
    t: t,
    optionsKey: "i18nKey",
    isMandatory: config.isMandatory,
    options: menu,
    selectedOption: KnowProperty,
    onSelect: selectKnowProperty
  })));
};

var PropertyDetails = function PropertyDetails(_ref) {
  var _formData$knowyourpro, _formData$knowyourpro2, _formData$cptSearchQu, _formData$cpt, _formData$cpt$details, _formData$knowyourpro3, _formData$knowyourpro4, _formData$cptId, _formData$cpt2, _formData$cpt2$detail, _formData$knowyourpro5, _formData$knowyourpro6, _formData$cptId2, _formData$cpt3, _formData$cpt3$detail, _propertyDetails$Prop30, _propertyDetails$Prop31, _propertyDetails$Prop32, _propertyDetails$Prop33, _propertyDetails$Prop34, _propertyDetails$Prop35;
  var t = _ref.t,
    config = _ref.config,
    onSelect = _ref.onSelect,
    formData = _ref.formData;
  var tenantId = ((formData === null || formData === void 0 ? void 0 : (_formData$knowyourpro = formData.knowyourproperty) === null || _formData$knowyourpro === void 0 ? void 0 : (_formData$knowyourpro2 = _formData$knowyourpro.KnowProperty) === null || _formData$knowyourpro2 === void 0 ? void 0 : _formData$knowyourpro2.code) === "YES" ? formData === null || formData === void 0 ? void 0 : (_formData$cptSearchQu = formData.cptSearchQuery) === null || _formData$cptSearchQu === void 0 ? void 0 : _formData$cptSearchQu.city : formData === null || formData === void 0 ? void 0 : (_formData$cpt = formData.cpt) === null || _formData$cpt === void 0 ? void 0 : (_formData$cpt$details = _formData$cpt.details) === null || _formData$cpt$details === void 0 ? void 0 : _formData$cpt$details.tenantId) || Digit.ULBService.getCitizenCurrentTenant();
  if (window.location.href.includes("/tl/tradelicence/edit-application/") || window.location.href.includes("/renew-trade/")) {
    sessionStorage.setItem("EditFormData", JSON.stringify(formData));
  }
  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertySearch({
      filters: {
        propertyIds: (formData === null || formData === void 0 ? void 0 : (_formData$knowyourpro3 = formData.knowyourproperty) === null || _formData$knowyourpro3 === void 0 ? void 0 : (_formData$knowyourpro4 = _formData$knowyourpro3.KnowProperty) === null || _formData$knowyourpro4 === void 0 ? void 0 : _formData$knowyourpro4.code) === "YES" ? formData === null || formData === void 0 ? void 0 : (_formData$cptId = formData.cptId) === null || _formData$cptId === void 0 ? void 0 : _formData$cptId.id : formData === null || formData === void 0 ? void 0 : (_formData$cpt2 = formData.cpt) === null || _formData$cpt2 === void 0 ? void 0 : (_formData$cpt2$detail = _formData$cpt2.details) === null || _formData$cpt2$detail === void 0 ? void 0 : _formData$cpt2$detail.propertyId
      },
      tenantId: tenantId
    }, {
      filters: {
        propertyIds: (formData === null || formData === void 0 ? void 0 : (_formData$knowyourpro5 = formData.knowyourproperty) === null || _formData$knowyourpro5 === void 0 ? void 0 : (_formData$knowyourpro6 = _formData$knowyourpro5.KnowProperty) === null || _formData$knowyourpro6 === void 0 ? void 0 : _formData$knowyourpro6.code) === "YES" ? formData === null || formData === void 0 ? void 0 : (_formData$cptId2 = formData.cptId) === null || _formData$cptId2 === void 0 ? void 0 : _formData$cptId2.id : formData === null || formData === void 0 ? void 0 : (_formData$cpt3 = formData.cpt) === null || _formData$cpt3 === void 0 ? void 0 : (_formData$cpt3$detail = _formData$cpt3.details) === null || _formData$cpt3$detail === void 0 ? void 0 : _formData$cpt3$detail.propertyId
      },
      tenantId: tenantId
    }),
    isLoading = _Digit$Hooks$pt$usePr.isLoading,
    propertyDetails = _Digit$Hooks$pt$usePr.data;
  var onSkip = function onSkip() {
    return onSelect();
  };
  var goNext = function goNext() {
    sessionStorage.setItem("cpt", propertyDetails === null || propertyDetails === void 0 ? void 0 : propertyDetails.Properties[0]);
    onSelect("cpt", {
      details: propertyDetails === null || propertyDetails === void 0 ? void 0 : propertyDetails.Properties[0]
    });
  };
  var propAddArr = [];
  if (propertyDetails && propertyDetails !== null && propertyDetails !== void 0 && propertyDetails.Properties.length) {
    var _propertyDetails$Prop, _propertyDetails$Prop2, _propertyDetails$Prop5, _propertyDetails$Prop6, _propertyDetails$Prop7, _propertyDetails$Prop8, _propertyDetails$Prop13, _propertyDetails$Prop14, _propertyDetails$Prop17, _propertyDetails$Prop18, _propertyDetails$Prop19, _propertyDetails$Prop24, _propertyDetails$Prop26, _propertyDetails$Prop27;
    if (propertyDetails !== null && propertyDetails !== void 0 && (_propertyDetails$Prop = propertyDetails.Properties[0]) !== null && _propertyDetails$Prop !== void 0 && (_propertyDetails$Prop2 = _propertyDetails$Prop.address) !== null && _propertyDetails$Prop2 !== void 0 && _propertyDetails$Prop2.doorNo) {
      var _propertyDetails$Prop3, _propertyDetails$Prop4;
      propAddArr.push(propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop3 = propertyDetails.Properties[0]) === null || _propertyDetails$Prop3 === void 0 ? void 0 : (_propertyDetails$Prop4 = _propertyDetails$Prop3.address) === null || _propertyDetails$Prop4 === void 0 ? void 0 : _propertyDetails$Prop4.doorNo);
    }
    if (propertyDetails !== null && propertyDetails !== void 0 && (_propertyDetails$Prop5 = propertyDetails.Properties[0]) !== null && _propertyDetails$Prop5 !== void 0 && (_propertyDetails$Prop6 = _propertyDetails$Prop5.address) !== null && _propertyDetails$Prop6 !== void 0 && _propertyDetails$Prop6.street || propertyDetails !== null && propertyDetails !== void 0 && (_propertyDetails$Prop7 = propertyDetails.Properties[0]) !== null && _propertyDetails$Prop7 !== void 0 && (_propertyDetails$Prop8 = _propertyDetails$Prop7.address) !== null && _propertyDetails$Prop8 !== void 0 && _propertyDetails$Prop8.buildingName) {
      var _propertyDetails$Prop9, _propertyDetails$Prop10, _propertyDetails$Prop11, _propertyDetails$Prop12;
      propAddArr.push((propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop9 = propertyDetails.Properties[0]) === null || _propertyDetails$Prop9 === void 0 ? void 0 : (_propertyDetails$Prop10 = _propertyDetails$Prop9.address) === null || _propertyDetails$Prop10 === void 0 ? void 0 : _propertyDetails$Prop10.street) || (propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop11 = propertyDetails.Properties[0]) === null || _propertyDetails$Prop11 === void 0 ? void 0 : (_propertyDetails$Prop12 = _propertyDetails$Prop11.address) === null || _propertyDetails$Prop12 === void 0 ? void 0 : _propertyDetails$Prop12.buildingName));
    }
    if (propertyDetails !== null && propertyDetails !== void 0 && (_propertyDetails$Prop13 = propertyDetails.Properties[0]) !== null && _propertyDetails$Prop13 !== void 0 && (_propertyDetails$Prop14 = _propertyDetails$Prop13.address) !== null && _propertyDetails$Prop14 !== void 0 && _propertyDetails$Prop14.landmark) {
      var _propertyDetails$Prop15, _propertyDetails$Prop16;
      propAddArr.push(propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop15 = propertyDetails.Properties[0]) === null || _propertyDetails$Prop15 === void 0 ? void 0 : (_propertyDetails$Prop16 = _propertyDetails$Prop15.address) === null || _propertyDetails$Prop16 === void 0 ? void 0 : _propertyDetails$Prop16.landmark);
    }
    if (propertyDetails !== null && propertyDetails !== void 0 && (_propertyDetails$Prop17 = propertyDetails.Properties[0]) !== null && _propertyDetails$Prop17 !== void 0 && (_propertyDetails$Prop18 = _propertyDetails$Prop17.address) !== null && _propertyDetails$Prop18 !== void 0 && (_propertyDetails$Prop19 = _propertyDetails$Prop18.locality) !== null && _propertyDetails$Prop19 !== void 0 && _propertyDetails$Prop19.code) {
      var _propertyDetails$Prop20, _propertyDetails$Prop21, _propertyDetails$Prop22, _propertyDetails$Prop23;
      propAddArr.push(t(Digit.Utils.pt.getMohallaLocale(propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop20 = propertyDetails.Properties[0]) === null || _propertyDetails$Prop20 === void 0 ? void 0 : (_propertyDetails$Prop21 = _propertyDetails$Prop20.address) === null || _propertyDetails$Prop21 === void 0 ? void 0 : (_propertyDetails$Prop22 = _propertyDetails$Prop21.locality) === null || _propertyDetails$Prop22 === void 0 ? void 0 : _propertyDetails$Prop22.code, propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop23 = propertyDetails.Properties[0]) === null || _propertyDetails$Prop23 === void 0 ? void 0 : _propertyDetails$Prop23.tenantId)));
    }
    if (propertyDetails !== null && propertyDetails !== void 0 && (_propertyDetails$Prop24 = propertyDetails.Properties[0]) !== null && _propertyDetails$Prop24 !== void 0 && _propertyDetails$Prop24.tenantId) {
      var _propertyDetails$Prop25;
      propAddArr.push(t(Digit.Utils.pt.getCityLocale(propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop25 = propertyDetails.Properties[0]) === null || _propertyDetails$Prop25 === void 0 ? void 0 : _propertyDetails$Prop25.tenantId)));
    }
    if (propertyDetails !== null && propertyDetails !== void 0 && (_propertyDetails$Prop26 = propertyDetails.Properties[0]) !== null && _propertyDetails$Prop26 !== void 0 && (_propertyDetails$Prop27 = _propertyDetails$Prop26.address) !== null && _propertyDetails$Prop27 !== void 0 && _propertyDetails$Prop27.pincode) {
      var _propertyDetails$Prop28, _propertyDetails$Prop29;
      propAddArr.push(propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop28 = propertyDetails.Properties[0]) === null || _propertyDetails$Prop28 === void 0 ? void 0 : (_propertyDetails$Prop29 = _propertyDetails$Prop28.address) === null || _propertyDetails$Prop29 === void 0 ? void 0 : _propertyDetails$Prop29.pincode);
    }
  }
  if (isLoading) {
    return /*#__PURE__*/React__default.createElement(digitUiReactComponents.Loader, null);
  }
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, window.location.href.includes("/citizen") ? /*#__PURE__*/React__default.createElement(CPTTimeline, {
    currentStep: 2
  }) : null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip
  }, propertyDetails && (propertyDetails === null || propertyDetails === void 0 ? void 0 : propertyDetails.Properties.length) && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardHeader, null, t("PT_DETAILS")), /*#__PURE__*/React__default.createElement(digitUiReactComponents.StatusTable, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
    className: "border-none",
    label: t("PROPERTY_ID"),
    text: propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop30 = propertyDetails.Properties[0]) === null || _propertyDetails$Prop30 === void 0 ? void 0 : _propertyDetails$Prop30.propertyId
  }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
    className: "border-none",
    label: t("OWNER_NAME"),
    text: propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop31 = propertyDetails.Properties[0]) === null || _propertyDetails$Prop31 === void 0 ? void 0 : (_propertyDetails$Prop32 = _propertyDetails$Prop31.owners[0]) === null || _propertyDetails$Prop32 === void 0 ? void 0 : _propertyDetails$Prop32.name
  }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
    className: "border-none",
    textStyle: {
      wordBreak: "break-word"
    },
    label: t("PROPERTY_ADDRESS"),
    text: propAddArr.join(', ')
  }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
    className: "border-none",
    label: t("PT_MUTATION_STATUS"),
    text: propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop33 = propertyDetails.Properties[0]) === null || _propertyDetails$Prop33 === void 0 ? void 0 : _propertyDetails$Prop33.status
  }), /*#__PURE__*/React__default.createElement("div", {
    style: {
      textAlign: "left"
    }
  }, /*#__PURE__*/React__default.createElement(reactRouterDom.Link, {
    to: "/digit-ui/citizen/commonpt/view-property?propertyId=" + (propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop34 = propertyDetails.Properties[0]) === null || _propertyDetails$Prop34 === void 0 ? void 0 : _propertyDetails$Prop34.propertyId) + "&tenantId=" + (propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop35 = propertyDetails.Properties[0]) === null || _propertyDetails$Prop35 === void 0 ? void 0 : _propertyDetails$Prop35.tenantId)
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.LinkButton, {
    style: {
      textAlign: "left"
    },
    label: t("PT_VIEW_MORE_DETAILS")
  })), /*#__PURE__*/React__default.createElement(reactRouterDom.Link, {
    to: window.location.href.includes("/edit-application/") || window.location.href.includes("/renew-trade/") ? "/digit-ui/citizen/tl/tradelicence/edit-application/" + (formData === null || formData === void 0 ? void 0 : formData.applicationNumber) + "/" + (formData === null || formData === void 0 ? void 0 : formData.tenantId) + "/know-your-property" : "/digit-ui/citizen/tl/tradelicence/new-application/know-your-property"
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.LinkButton, {
    style: {
      textAlign: "left"
    },
    label: t("PT_CHANGE_PROPERTY")
  })))), /*#__PURE__*/React__default.createElement(digitUiReactComponents.SubmitBar, {
    style: {
      marginTop: "10px"
    },
    onSubmit: goNext,
    label: t("CS_COMMON_NEXT")
  }))));
};

var getAddress$1 = function getAddress(address, t) {
  return (address !== null && address !== void 0 && address.doorNo ? (address === null || address === void 0 ? void 0 : address.doorNo) + ", " : "") + " " + (address !== null && address !== void 0 && address.street ? (address === null || address === void 0 ? void 0 : address.street) + ", " : "") + (address !== null && address !== void 0 && address.landmark ? (address === null || address === void 0 ? void 0 : address.landmark) + ", " : "") + t(Digit.Utils.pt.getMohallaLocale(address === null || address === void 0 ? void 0 : address.locality.code, address === null || address === void 0 ? void 0 : address.tenantId)) + ", " + t(Digit.Utils.pt.getCityLocale(address === null || address === void 0 ? void 0 : address.tenantId)) + (address !== null && address !== void 0 && address.pincode && t(address === null || address === void 0 ? void 0 : address.pincode) ? ", " + address.pincode : " ");
};
var PropertySearchNSummary = function PropertySearchNSummary(_ref) {
  var _formData$cptId, _propertyDetails$Prop3, _propertyDetails$Prop4, _propertyDetails$Prop5, _window$location$path;
  var config = _ref.config,
    onSelect = _ref.onSelect,
    formData = _ref.formData;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var history = reactRouterDom.useHistory();
  var _useLocation = reactRouterDom.useLocation(),
    pathname = _useLocation.pathname,
    state = _useLocation.state;
  var isEditScreen = pathname.includes("/modify-application/");
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var search = reactRouterDom.useLocation().search;
  var urlPropertyId = new URLSearchParams(search).get("propertyId");
  var _useState = React.useState((formData === null || formData === void 0 ? void 0 : (_formData$cptId = formData.cptId) === null || _formData$cptId === void 0 ? void 0 : _formData$cptId.id) || urlPropertyId || ""),
    propertyId = _useState[0],
    setPropertyId = _useState[1];
  var _useState2 = React.useState(urlPropertyId),
    searchPropertyId = _useState2[0],
    setSearchPropertyId = _useState2[1];
  var _useState3 = React.useState(null),
    showToast = _useState3[0],
    setShowToast = _useState3[1];
  var isMobile = window.Digit.Utils.browser.isMobile();
  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertySearch({
      filters: {
        propertyIds: searchPropertyId
      },
      tenantId: tenantId
    }, {
      filters: {
        propertyIds: searchPropertyId
      },
      tenantId: tenantId,
      enabled: searchPropertyId ? true : false
    }),
    isLoading = _Digit$Hooks$pt$usePr.isLoading,
    error = _Digit$Hooks$pt$usePr.error,
    propertyDetails = _Digit$Hooks$pt$usePr.data;
  React.useEffect(function () {
    if (propertyId && (window.location.href.includes("/renew-application-details/") || window.location.href.includes("/edit-application-details/"))) setSearchPropertyId(propertyId);
  }, [propertyId]);
  React.useEffect(function () {
    var _propertyDetails$Prop;
    if (isLoading == false && error && error == true || (propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop = propertyDetails.Properties) === null || _propertyDetails$Prop === void 0 ? void 0 : _propertyDetails$Prop.length) == 0) {
      setShowToast({
        error: true,
        label: "PT_ENTER_VALID_PROPERTY_ID"
      });
    }
  }, [error, propertyDetails]);
  React.useEffect(function () {
    onSelect("cpt", {
      details: propertyDetails === null || propertyDetails === void 0 ? void 0 : propertyDetails.Properties[0]
    });
  }, [propertyDetails, pathname]);
  var searchProperty = function searchProperty() {
    setSearchPropertyId(propertyId);
  };
  if (isEditScreen) {
    return /*#__PURE__*/React__default.createElement(React__default.Fragment, null);
  }
  var redirectBackUrl = window.location.pathname;
  var propertyAddress = "";
  if (propertyDetails && propertyDetails !== null && propertyDetails !== void 0 && propertyDetails.Properties.length) {
    var _propertyDetails$Prop2;
    propertyAddress = getAddress$1(propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop2 = propertyDetails.Properties[0]) === null || _propertyDetails$Prop2 === void 0 ? void 0 : _propertyDetails$Prop2.address, t);
  }
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.LabelFieldPair, null, /*#__PURE__*/React__default.createElement(digitUiReactComponents.CardLabel, {
    className: "card-label-smaller"
  }, "" + t("PROPERTY_ID")), /*#__PURE__*/React__default.createElement("div", {
    className: "field",
    style: {
      marginTop: "20px",
      display: "flex"
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.TextInput, {
    key: config.key,
    value: propertyId,
    isMandatory: true,
    onChange: function onChange(e) {
      setPropertyId(e.target.value);
      onSelect(config.key, {
        id: e.target.value
      });
    },
    style: {
      width: "80%",
      float: "left",
      marginRight: "20px"
    }
  }), /*#__PURE__*/React__default.createElement("button", {
    className: "submit-bar",
    type: "button",
    style: {
      color: "white"
    },
    onClick: searchProperty
  }, "" + t("PT_SEARCH")))), /*#__PURE__*/React__default.createElement("span", {
    onClick: function onClick() {
      return history.push("/digit-ui/employee/commonpt/search?redirectToUrl=" + redirectBackUrl, _extends({}, state));
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.LinkButton, {
    label: t("CPT_SEARCH_PROPERTY"),
    style: {
      color: "#f47738",
      display: "inline-block"
    }
  })), "\xA0 | \xA0", /*#__PURE__*/React__default.createElement("span", {
    onClick: function onClick() {
      return history.push("/digit-ui/employee/commonpt/new-application?redirectToUrl=" + redirectBackUrl, _extends({}, state));
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.LinkButton, {
    label: t("CPT_CREATE_PROPERTY"),
    style: {
      color: "#f47738",
      display: "inline-block"
    }
  })), propertyDetails && propertyDetails !== null && propertyDetails !== void 0 && propertyDetails.Properties.length ? /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("header", {
    className: "card-section-header",
    style: {
      marginBottom: "5px",
      marginTop: "20px"
    }
  }, t("PT_DETAILS")), /*#__PURE__*/React__default.createElement(digitUiReactComponents.StatusTable, null, /*#__PURE__*/React__default.createElement("div", {
    style: isMobile ? {} : {
      maxWidth: "60%"
    }
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
    className: "border-none",
    labelStyle: isMobile ? {
      width: "40%"
    } : {},
    label: t("PROPERTY_ID"),
    text: propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop3 = propertyDetails.Properties[0]) === null || _propertyDetails$Prop3 === void 0 ? void 0 : _propertyDetails$Prop3.propertyId
  }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
    className: "border-none",
    labelStyle: isMobile ? {
      width: "40%"
    } : {},
    label: t("OWNER_NAME"),
    text: propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$Prop4 = propertyDetails.Properties[0]) === null || _propertyDetails$Prop4 === void 0 ? void 0 : (_propertyDetails$Prop5 = _propertyDetails$Prop4.owners[0]) === null || _propertyDetails$Prop5 === void 0 ? void 0 : _propertyDetails$Prop5.name
  }), /*#__PURE__*/React__default.createElement(digitUiReactComponents.Row, {
    className: "border-none",
    labelStyle: isMobile ? {
      width: "40%"
    } : {},
    textStyle: {
      wordBreak: "break-word"
    },
    label: t("PROPERTY_ADDRESS"),
    text: propertyAddress
  }))), /*#__PURE__*/React__default.createElement(reactRouterDom.Link, {
    to: "/digit-ui/employee/commonpt/view-property?propertyId=" + propertyId + "&tenantId=" + tenantId + "&from=" + ((_window$location$path = window.location.pathname) !== null && _window$location$path !== void 0 && _window$location$path.includes("employee/tl/new-application") ? "ES_TITLE_NEW_TRADE_LICESE_APPLICATION" : "WF_EMPLOYEE_NEWTL_RENEWAL_SUBMIT_BUTTON")
  }, /*#__PURE__*/React__default.createElement(digitUiReactComponents.LinkButton, {
    label: t("CPT_COMPLETE_PROPERTY_DETAILS"),
    style: {
      color: "#f47738",
      textAlign: "Left"
    }
  }))) : null, showToast && /*#__PURE__*/React__default.createElement(digitUiReactComponents.Toast, {
    isDleteBtn: true,
    labelstyle: {
      width: "100%"
    },
    error: showToast.error,
    warning: showToast.warning,
    label: t(showToast.label),
    onClose: function onClose() {
      setShowToast(null);
    }
  }));
};

var CommonPTCard = function CommonPTCard() {
  var _propsForModuleCard$l;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  if (!Digit.Utils.ptAccess()) {
    return null;
  }
  var propsForModuleCard = {
    Icon: /*#__PURE__*/React__default.createElement(digitUiReactComponents.PropertyHouse, null),
    moduleName: t("ACTION_TEST_COMMON_PROPERTY_TAX"),
    links: [{
      label: t("PT_SEARCH_AND_PAY"),
      link: "/digit-ui/employee/commonpt/search"
    }]
  };
  var PT_CEMP = Digit.UserService.hasAccess(["PT_CEMP"]) || false;
  if (PT_CEMP && !((_propsForModuleCard$l = propsForModuleCard.links) !== null && _propsForModuleCard$l !== void 0 && _propsForModuleCard$l[1])) {
    propsForModuleCard.links.push({
      label: t("PT_CREATE_PROPERTY"),
      link: "/digit-ui/employee/commonpt/new-application"
    });
  }
  return /*#__PURE__*/React__default.createElement(digitUiReactComponents.EmployeeModuleCard, propsForModuleCard);
};

var componentsToRegister = {
  CPTPropertySearchForm: SearchPTID,
  CPTPropertySearchResults: SearchPTID$1,
  CPTSearchProperty: SearchProperty$1,
  CPTPropertyAssemblyDetails: PropertyAssemblyDetails,
  CPTPropertyLocationDetails: PropertyLocationDetails,
  CPTPropertyOwnerDetails: PropertyOwnerDetails,
  CPTKnowYourProperty: KnowYourProperty,
  CPTPropertyDetails: PropertyDetails,
  CPTPropertySearchNSummary: PropertySearchNSummary,
  CPTSearchResults: SearchResultsComponent,
  CPTCreateProperty: CreatePropertyForm,
  CPTAcknowledgement: PTAcknowledgement
};
var addComponentsToRegistry = function addComponentsToRegistry() {
  Object.entries(componentsToRegister).forEach(function (_ref) {
    var key = _ref[0],
      value = _ref[1];
    Digit.ComponentRegistryService.setComponent(key, value);
  });
};
var CommonPTModule = function CommonPTModule(_ref2) {
  var stateCode = _ref2.stateCode,
    userType = _ref2.userType,
    tenants = _ref2.tenants;
  var _useRouteMatch = reactRouterDom.useRouteMatch(),
    path = _useRouteMatch.path,
    url = _useRouteMatch.url;
  var moduleCode = "PT";
  var language = Digit.StoreData.getCurrentLanguage();
  var _Digit$Services$useSt = Digit.Services.useStore({
      stateCode: stateCode,
      moduleCode: moduleCode,
      language: language
    });
  addComponentsToRegistry();
  Digit.SessionStorage.set("PT_TENANTS", tenants);
  if (userType === "employee") {
    return /*#__PURE__*/React__default.createElement(EmployeeApp, {
      path: path,
      url: url,
      userType: userType
    });
  } else return /*#__PURE__*/React__default.createElement(App, {
    stateCode: stateCode
  });
};
var CommonPTLinks = function CommonPTLinks(_ref3) {
  var matchPath = _ref3.matchPath;
  var _useTranslation = reactI18next.useTranslation(),
    t = _useTranslation.t;
  var _Digit$Hooks$useSessi = Digit.Hooks.useSessionStorage("CPT_CREATE_PROPERTY", {}),
    clearParams = _Digit$Hooks$useSessi[2];
  React.useEffect(function () {
    clearParams();
  }, []);
  var links = [{
    link: matchPath + "/property/citizen-search",
    i18nKey: t("PT_SEARCH_AND_PAY")
  }, {
    link: matchPath + "/property/new-application",
    i18nKey: t("PT_CREATE_PROPERTY")
  }];
  return /*#__PURE__*/React__default.createElement(digitUiReactComponents.CitizenHomeCard, {
    header: t("ACTION_TEST_COMMON_PROPERTY_TAX"),
    links: links,
    Icon: function Icon() {
      return /*#__PURE__*/React__default.createElement(digitUiReactComponents.PTIcon, {
        className: "fill-path-primary-main"
      });
    }
  });
};

var CommonPTComponents = _extends({
  CommonPTCardTemp: CommonPTCard,
  CommonPTModule: CommonPTModule,
  CommonPTLinksTemp: CommonPTLinks
}, componentsToRegister);
var initCommonPTComponents = function initCommonPTComponents() {
  Object.entries(CommonPTComponents).forEach(function (_ref4) {
    var key = _ref4[0],
      value = _ref4[1];
    Digit.ComponentRegistryService.setComponent(key, value);
  });
};

exports.CommonPTComponents = CommonPTComponents;
exports.CommonPTLinks = CommonPTLinks;
exports.CommonPTModule = CommonPTModule;
exports.initCommonPTComponents = initCommonPTComponents;
//# sourceMappingURL=index.js.map
