[{"C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\index.js":"1","C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\App.js":"2","C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\Customisations\\tl\\TLCustomisation.js":"3","C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\Customisations\\index.js":"4","C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\Customisations\\tl\\index.js":"5","C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\Customisations\\pt\\index.js":"6","C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\Customisations\\tl\\pageComponents\\PropertyUsageType.js":"7","C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\Customisations\\pt\\pageComponents\\PTBusinessDetails.js":"8","C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\Customisations\\pt\\pageComponents\\PTAllotmentDetails.js":"9","C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\Customisations\\pt\\pageComponents\\PTVasikaDetails.js":"10","C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\Customisations\\pt\\pageComponents\\PropertyUsageType.js":"11"},{"size":2001,"mtime":1667901212401,"results":"12","hashOfConfig":"13"},{"size":2661,"mtime":1667804449540,"results":"14","hashOfConfig":"13"},{"size":266,"mtime":1667804449543,"results":"15","hashOfConfig":"13"},{"size":401,"mtime":1667804449541,"results":"16","hashOfConfig":"13"},{"size":141,"mtime":1667804449543,"results":"17","hashOfConfig":"13"},{"size":472,"mtime":1667804449541,"results":"18","hashOfConfig":"13"},{"size":4947,"mtime":1667804449544,"results":"19","hashOfConfig":"13"},{"size":1900,"mtime":1667804449542,"results":"20","hashOfConfig":"13"},{"size":1878,"mtime":1667804449542,"results":"21","hashOfConfig":"13"},{"size":2279,"mtime":1667804449542,"results":"22","hashOfConfig":"13"},{"size":4859,"mtime":1667804449543,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c0pyua",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\index.js",[],"C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\App.js",[],"C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\Customisations\\tl\\TLCustomisation.js",[],"C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\Customisations\\index.js",[],"C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\Customisations\\tl\\index.js",[],"C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\Customisations\\pt\\index.js",[],"C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\Customisations\\tl\\pageComponents\\PropertyUsageType.js",["51","52","53","54","55"],"import {\r\n  CardLabel, CardLabelError, CitizenInfoLabel, Dropdown, FormStep, LabelFieldPair, RadioButtons\r\n} from \"@egovernments/digit-ui-react-components\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nvar Digit = window.Digit || {};\r\n\r\nconst TLUsageType = ({ t, config, onSelect, userType, formData, formState, setError, clearErrors, onBlur }) => {\r\n  const [usageCategoryMajor, setPropertyPurpose] = useState(\r\n    formData?.usageCategoryMajor && formData?.usageCategoryMajor?.code === \"NONRESIDENTIAL.OTHERS\"\r\n      ? { code: `${formData?.usageCategoryMajor?.code}`, i18nKey: `PROPERTYTAX_BILLING_SLAB_OTHERS` }\r\n      : formData?.usageCategoryMajor\r\n  );\r\n  \r\n  const tenantId = Digit.ULBService.getCurrentTenantId();\r\n  const stateId = tenantId.split(\".\")[0];\r\n  const { data: Menu = { }, isLoading: menuLoading } = Digit.Hooks.pt.usePropertyMDMS(stateId, \"PropertyTax\", \"UsageCategory\") || { };\r\n  let usagecat = [];\r\n  usagecat = Menu?.PropertyTax?.UsageCategory || [];\r\n  let i;\r\n  let menu = [];\r\n\r\n  const { pathname } = useLocation();\r\n  const presentInModifyApplication = pathname.includes(\"modify\");\r\n\r\n  function usageCategoryMajorMenu(usagecat) {\r\n    if (userType === \"employee\") {\r\n      const catMenu = usagecat\r\n        ?.filter((e) => e?.code.split(\".\").length <= 2 && e.code !== \"NONRESIDENTIAL\")\r\n        ?.map((item) => {\r\n          const arr = item?.code.split(\".\");\r\n          if (arr.length == 2) return { i18nKey: \"PROPERTYTAX_BILLING_SLAB_\" + arr[1], code: item?.code };\r\n          else return { i18nKey: \"PROPERTYTAX_BILLING_SLAB_\" + item?.code, code: item?.code };\r\n        });\r\n      return catMenu;\r\n    } else {\r\n      for (i = 0; i < 10; i++) {\r\n        if (\r\n          Array.isArray(usagecat) &&\r\n          usagecat.length > 0 &&\r\n          usagecat[i].code.split(\".\")[0] == \"NONRESIDENTIAL\" &&\r\n          usagecat[i].code.split(\".\").length == 2\r\n        ) {\r\n          menu.push({ i18nKey: \"PROPERTYTAX_BILLING_SLAB_\" + usagecat[i].code.split(\".\")[1], code: usagecat[i].code });\r\n        }\r\n      }\r\n      return menu;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!menuLoading && presentInModifyApplication && userType === \"employee\") {\r\n      const original = formData?.originalData?.usageCategory;\r\n      const selectedOption = usageCategoryMajorMenu(usagecat).filter((e) => e.code === original)[0];\r\n      setPropertyPurpose(selectedOption);\r\n    }\r\n  }, [menuLoading]);\r\n\r\n  const onSkip = () => onSelect();\r\n\r\n\r\n  function selectPropertyPurpose(value) {\r\n    setPropertyPurpose(value);\r\n  }\r\n\r\n  function goNext() {\r\n    if (usageCategoryMajor?.i18nKey === \"PROPERTYTAX_BILLING_SLAB_OTHERS\") {\r\n      usageCategoryMajor.i18nKey = \"PROPERTYTAX_BILLING_SLAB_NONRESIDENTIAL\";\r\n      onSelect(config.key, usageCategoryMajor);\r\n    } else {\r\n      onSelect(config.key, usageCategoryMajor);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userType === \"employee\") {\r\n      if (!usageCategoryMajor) {\r\n        setError(config.key, { type: \"required\", message: t(`CORE_COMMON_REQUIRED_ERRMSG`) });\r\n      } else {\r\n        clearErrors(config.key);\r\n      }\r\n      goNext();\r\n    }\r\n  }, [usageCategoryMajor]);\r\n\r\n  if (userType === \"employee\") {\r\n    return (\r\n      <React.Fragment>\r\n        <LabelFieldPair>\r\n          <CardLabel className=\"card-label-smaller\">{t(\"PT_ASSESMENT_INFO_USAGE_TYPE\") + \" *\"}</CardLabel>\r\n          <Dropdown\r\n            className=\"form-field\"\r\n            selected={usageCategoryMajor}\r\n            disable={usageCategoryMajorMenu(usagecat)?.length === 1}\r\n            option={usageCategoryMajorMenu(usagecat)}\r\n            select={(e) => {\r\n              selectPropertyPurpose(e);\r\n            }}\r\n            optionKey=\"i18nKey\"\r\n            onBlur={onBlur}\r\n            t={t}\r\n          />\r\n        </LabelFieldPair>\r\n        {formState.touched[config.key] ? (\r\n          <CardLabelError style={{ width: \"70%\", marginLeft: \"30%\", fontSize: \"12px\", marginTop: \"-21px\" }}>\r\n            {formState.errors?.[config.key]?.message}\r\n          </CardLabelError>\r\n        ) : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FormStep t={t} config={config} onSelect={goNext} onSkip={onSkip} isDisabled={!usageCategoryMajor}>\r\n        <div>\r\n          <RadioButtons\r\n            t={t}\r\n            optionsKey=\"i18nKey\"\r\n            isMandatory={config.isMandatory}\r\n            //options={menu}\r\n            options={usageCategoryMajorMenu(usagecat) || { }}\r\n            selectedOption={usageCategoryMajor}\r\n            onSelect={selectPropertyPurpose}\r\n          />\r\n          <input type=\"text\"></input>\r\n          <button>to say this is different element</button>\r\n        </div>\r\n      </FormStep>\r\n      {<CitizenInfoLabel info={t(\"CS_FILE_APPLICATION_INFO_LABEL\")} text={t(\"PT_USAGE_TYPE_INFO_MSG\", usageCategoryMajor)} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TLUsageType;\r\n","C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\Customisations\\pt\\pageComponents\\PTBusinessDetails.js",["56","57"],"import { CardLabel, CitizenInfoLabel, FormStep, LabelFieldPair, TextInput,CardLabelError } from \"@egovernments/digit-ui-react-components\";\r\nimport React, { useState } from \"react\";\r\nvar validation ={};\r\nconst PTBusinessDetails = ({ t, config, onSelect, value, userType, formData }) => {\r\n\r\n\r\n  const [\r\n    val, setValue\r\n  ] = useState(formData?.[config.key]?.businessDetails||\"\");\r\n\r\n  const goNext = () => {\r\n    onSelect(config.key, {businessDetails:val});\r\n  };\r\n\r\n\r\n  if (userType === \"employee\") {\r\n    return (\r\n        <React.Fragment>\r\n          <LabelFieldPair >\r\n            <CardLabel className=\"card-label-smaller\">{t(\"PT_VASIKA_NO_LABEL\") }</CardLabel>\r\n            <div className=\"field\">\r\n              <TextInput\r\n               t={t}\r\n            type={\"number\"}\r\n            isMandatory={false}\r\n            name=\"PlotSize\"\r\n                value={val}\r\n                onChange={(e)=>setValue(e?.target?.value)}\r\n                // autoFocus={presentInModifyApplication}\r\n              />\r\n            </div>\r\n          </LabelFieldPair>\r\n        \r\n        </React.Fragment>\r\n    );\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <FormStep\r\n        config={config}\r\n        header=\"ground\"\r\n        onSelect={goNext}\r\n        onSkip={goNext}\r\n        t={t}\r\n        showErrorBelowChildren={true}\r\n      >\r\n\r\n        <div>\r\n          <CardLabel>{`${t(\"PT_VASIKA_BUS_DETAILS_LABEL\")}`}</CardLabel>\r\n          <TextInput\r\n            t={t}\r\n            type={\"text\"}\r\n            isMandatory={false}\r\n            optionKey=\"i18nKey\"\r\n            name=\"PlotSize\"\r\n            value={val}\r\n            onChange={(e)=>setValue(e?.target?.value)}\r\n\r\n          />\r\n        </div>\r\n        \r\n      </FormStep>\r\n      {<CitizenInfoLabel info={t(\"CS_FILE_APPLICATION_INFO_LABEL\")} text={t(\"PT_VASIKA_DETAILS_INFO\")} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PTBusinessDetails;\r\n","C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\Customisations\\pt\\pageComponents\\PTAllotmentDetails.js",["58","59"],"import { CardLabel, CitizenInfoLabel, FormStep, LabelFieldPair, TextInput,CardLabelError } from \"@egovernments/digit-ui-react-components\";\r\nimport React, { useState } from \"react\";\r\nvar validation ={};\r\nconst PTAllotmentDetails = ({ t, config, onSelect, value, userType, formData }) => {\r\n\r\n  const [\r\n    val, setValue\r\n  ] = useState(formData?.[config.key]?.alotmentDetails||\"\");\r\n  \r\n  const goNext = () => {\r\n    onSelect(config.key, {alotmentDetails:val});\r\n  };\r\n\r\n\r\n  if (userType === \"employee\") {\r\n    return (\r\n        <React.Fragment>\r\n          <LabelFieldPair >\r\n            <CardLabel className=\"card-label-smaller\">{t(\"PT_VASIKA_NO_LABEL\") }</CardLabel>\r\n            <div className=\"field\">\r\n              <TextInput\r\n               t={t}\r\n            type={\"number\"}\r\n            isMandatory={false}\r\n            name=\"PlotSize\"\r\n                value={val}\r\n                onChange={(e)=>setValue(e?.target?.value)}\r\n                // autoFocus={presentInModifyApplication}\r\n              />\r\n            </div>\r\n          </LabelFieldPair>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <FormStep\r\n        config={config}\r\n        header=\"ground\"\r\n        onSelect={goNext}\r\n        onSkip={goNext}\r\n        t={t}\r\n        showErrorBelowChildren={true}\r\n      >\r\n        <div>\r\n          <CardLabel>{`${t(\"PT_VASIKA_ALLOTMENT_LABEL\")}`}</CardLabel>\r\n          <TextInput\r\n            t={t}\r\n            type={\"text\"}\r\n            isMandatory={false}\r\n            optionKey=\"i18nKey\"\r\n            name=\"PlotSize\"\r\n            value={val}\r\n            onChange={(e)=>setValue(e?.target?.value)}\r\n\r\n          />\r\n        </div>\r\n      </FormStep>\r\n      {<CitizenInfoLabel info={t(\"CS_FILE_APPLICATION_INFO_LABEL\")} text={t(\"PT_VASIKA_DETAILS_INFO\")} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PTAllotmentDetails;\r\n","C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\Customisations\\pt\\pageComponents\\PTVasikaDetails.js",["60","61"],"import { CardLabel, CitizenInfoLabel, FormStep, LabelFieldPair, TextInput,CardLabelError } from \"@egovernments/digit-ui-react-components\";\r\nimport React, { useState } from \"react\";\r\nvar validation ={};\r\nconst PTVasikaDetails = ({ t, config, onSelect, value, userType, formData }) => {\r\n\r\n\r\n  const [\r\n    val, setValue\r\n  ] = useState(formData?.[config.key]?.vasikaNo||\"\");\r\n  const [\r\n    other, setOther\r\n  ] = useState(formData?.[config.key]?.vasikaArea||\"\");\r\n  const goNext = () => {\r\n    onSelect(config.key, {vasikaNo:val,vasikaArea:other});\r\n  };\r\n\r\n\r\n  if (userType === \"employee\") {\r\n    return (\r\n        <React.Fragment>\r\n          <LabelFieldPair >\r\n            <CardLabel className=\"card-label-smaller\">{t(\"PT_VASIKA_NO_LABEL\") }</CardLabel>\r\n            <div className=\"field\">\r\n              <TextInput\r\n               t={t}\r\n            type={\"number\"}\r\n            isMandatory={false}\r\n            name=\"PlotSize\"\r\n                value={val}\r\n                onChange={(e)=>setValue(e?.target?.value)}\r\n                // autoFocus={presentInModifyApplication}\r\n              />\r\n            </div>\r\n          </LabelFieldPair>\r\n        \r\n        </React.Fragment>\r\n    );\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <FormStep\r\n        config={config}\r\n        header=\"ground\"\r\n        onSelect={goNext}\r\n        onSkip={goNext}\r\n        t={t}\r\n        showErrorBelowChildren={true}\r\n      >\r\n\r\n        <div>\r\n          <CardLabel>{`${t(\"PT_VASIKA_NO_LABEL\")}`}</CardLabel>\r\n          <TextInput\r\n            t={t}\r\n            type={\"number\"}\r\n            isMandatory={false}\r\n            optionKey=\"i18nKey\"\r\n            name=\"PlotSize\"\r\n            value={val}\r\n            onChange={(e)=>setValue(e?.target?.value)}\r\n\r\n          />\r\n        </div>\r\n        <CardLabel>{`${t(\"PT_VASIKA_AREA_LABEL\")}`}</CardLabel>\r\n        <TextInput\r\n          t={t}\r\n          type={\"text\"}\r\n          isMandatory={false}\r\n          optionKey=\"i18nKey\"\r\n          name=\"BuiltUpArea\"\r\n          value={other}\r\n          onChange={(e)=>setOther(e?.target?.value)}\r\n        />\r\n      </FormStep>\r\n      {<CitizenInfoLabel info={t(\"CS_FILE_APPLICATION_INFO_LABEL\")} text={t(\"PT_VASIKA_DETAILS_INFO\")} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PTVasikaDetails;\r\n","C:\\Users\\nehas\\Downloads\\UPYOG\\frontend\\micro-ui\\web\\src\\Customisations\\pt\\pageComponents\\PropertyUsageType.js",["62","63","64","65","66"],"import {\r\n  CardLabel, CardLabelError, CitizenInfoLabel, Dropdown, FormStep, LabelFieldPair, RadioButtons\r\n} from \"@egovernments/digit-ui-react-components\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nvar Digit = window.Digit || {};\r\n\r\nconst PropertyUsageType = ({ t, config, onSelect, userType, formData, formState, setError, clearErrors, onBlur }) => {\r\n  const [usageCategoryMajor, setPropertyPurpose] = useState(\r\n    formData?.usageCategoryMajor && formData?.usageCategoryMajor?.code === \"NONRESIDENTIAL.OTHERS\"\r\n      ? { code: `${formData?.usageCategoryMajor?.code}`, i18nKey: `PROPERTYTAX_BILLING_SLAB_OTHERS` }\r\n      : formData?.usageCategoryMajor\r\n  );\r\n  \r\n  const tenantId = Digit.ULBService.getCurrentTenantId();\r\n  const stateId = tenantId.split(\".\")[0];\r\n  const { data: Menu = { }, isLoading: menuLoading } = Digit.Hooks.pt.usePropertyMDMS(stateId, \"PropertyTax\", \"UsageCategory\") || { };\r\n  let usagecat = [];\r\n  usagecat = Menu?.PropertyTax?.UsageCategory || [];\r\n  let i;\r\n  let menu = [];\r\n\r\n  const { pathname } = useLocation();\r\n  const presentInModifyApplication = pathname.includes(\"modify\");\r\n\r\n  function usageCategoryMajorMenu(usagecat) {\r\n    if (userType === \"employee\") {\r\n      const catMenu = usagecat\r\n        ?.filter((e) => e?.code.split(\".\").length <= 2 && e.code !== \"NONRESIDENTIAL\")\r\n        ?.map((item) => {\r\n          const arr = item?.code.split(\".\");\r\n          if (arr.length == 2) return { i18nKey: \"PROPERTYTAX_BILLING_SLAB_\" + arr[1], code: item?.code };\r\n          else return { i18nKey: \"PROPERTYTAX_BILLING_SLAB_\" + item?.code, code: item?.code };\r\n        });\r\n      return catMenu;\r\n    } else {\r\n      for (i = 0; i < 10; i++) {\r\n        if (\r\n          Array.isArray(usagecat) &&\r\n          usagecat.length > 0 &&\r\n          usagecat[i].code.split(\".\")[0] == \"NONRESIDENTIAL\" &&\r\n          usagecat[i].code.split(\".\").length == 2\r\n        ) {\r\n          menu.push({ i18nKey: \"PROPERTYTAX_BILLING_SLAB_\" + usagecat[i].code.split(\".\")[1], code: usagecat[i].code });\r\n        }\r\n      }\r\n      return menu;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!menuLoading && presentInModifyApplication && userType === \"employee\") {\r\n      const original = formData?.originalData?.usageCategory;\r\n      const selectedOption = usageCategoryMajorMenu(usagecat).filter((e) => e.code === original)[0];\r\n      setPropertyPurpose(selectedOption);\r\n    }\r\n  }, [menuLoading]);\r\n\r\n  const onSkip = () => onSelect();\r\n\r\n\r\n  function selectPropertyPurpose(value) {\r\n    setPropertyPurpose(value);\r\n  }\r\n\r\n  function goNext() {\r\n    if (usageCategoryMajor?.i18nKey === \"PROPERTYTAX_BILLING_SLAB_OTHERS\") {\r\n      usageCategoryMajor.i18nKey = \"PROPERTYTAX_BILLING_SLAB_NONRESIDENTIAL\";\r\n      onSelect(config.key, usageCategoryMajor);\r\n    } else {\r\n      onSelect(config.key, usageCategoryMajor);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userType === \"employee\") {\r\n      if (!usageCategoryMajor) {\r\n        setError(config.key, { type: \"required\", message: t(`CORE_COMMON_REQUIRED_ERRMSG`) });\r\n      } else {\r\n        clearErrors(config.key);\r\n      }\r\n      goNext();\r\n    }\r\n  }, [usageCategoryMajor]);\r\n\r\n  if (userType === \"employee\") {\r\n    return (\r\n      <React.Fragment>\r\n        <LabelFieldPair>\r\n          <CardLabel className=\"card-label-smaller\">{t(\"PT_ASSESMENT_INFO_USAGE_TYPE\") + \" *\"}</CardLabel>\r\n          <Dropdown\r\n            className=\"form-field\"\r\n            selected={usageCategoryMajor}\r\n            disable={usageCategoryMajorMenu(usagecat)?.length === 1}\r\n            option={usageCategoryMajorMenu(usagecat)}\r\n            select={(e) => {\r\n              selectPropertyPurpose(e);\r\n            }}\r\n            optionKey=\"i18nKey\"\r\n            onBlur={onBlur}\r\n            t={t}\r\n          />\r\n        </LabelFieldPair>\r\n        {formState.touched[config.key] ? (\r\n          <CardLabelError style={{ width: \"70%\", marginLeft: \"30%\", fontSize: \"12px\", marginTop: \"-21px\" }}>\r\n            {formState.errors?.[config.key]?.message}\r\n          </CardLabelError>\r\n        ) : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FormStep t={t} config={config} onSelect={goNext} onSkip={onSkip} isDisabled={!usageCategoryMajor}>\r\n        <div>\r\n          <RadioButtons\r\n            t={t}\r\n            optionsKey=\"i18nKey\"\r\n            isMandatory={config.isMandatory}\r\n            //options={menu}\r\n            options={usageCategoryMajorMenu(usagecat) || { }}\r\n            selectedOption={usageCategoryMajor}\r\n            onSelect={selectPropertyPurpose}\r\n          />\r\n        </div>\r\n      </FormStep>\r\n      {<CitizenInfoLabel info={t(\"CS_FILE_APPLICATION_INFO_LABEL\")} text={t(\"PT_USAGE_TYPE_INFO_MSG\", usageCategoryMajor)} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PropertyUsageType;\r\n",{"ruleId":"67","severity":1,"message":"68","line":33,"column":26,"nodeType":"69","messageId":"70","endLine":33,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":42,"column":42,"nodeType":"69","messageId":"70","endLine":42,"endColumn":44},{"ruleId":"67","severity":1,"message":"68","line":43,"column":46,"nodeType":"69","messageId":"70","endLine":43,"endColumn":48},{"ruleId":"71","severity":1,"message":"72","line":58,"column":6,"nodeType":"73","endLine":58,"endColumn":19,"suggestions":"74"},{"ruleId":"71","severity":1,"message":"75","line":85,"column":6,"nodeType":"73","endLine":85,"endColumn":26,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":75,"nodeType":"79","messageId":"80","endLine":1,"endColumn":89},{"ruleId":"77","severity":1,"message":"81","line":3,"column":5,"nodeType":"79","messageId":"80","endLine":3,"endColumn":15},{"ruleId":"77","severity":1,"message":"78","line":1,"column":75,"nodeType":"79","messageId":"80","endLine":1,"endColumn":89},{"ruleId":"77","severity":1,"message":"81","line":3,"column":5,"nodeType":"79","messageId":"80","endLine":3,"endColumn":15},{"ruleId":"77","severity":1,"message":"78","line":1,"column":75,"nodeType":"79","messageId":"80","endLine":1,"endColumn":89},{"ruleId":"77","severity":1,"message":"81","line":3,"column":5,"nodeType":"79","messageId":"80","endLine":3,"endColumn":15},{"ruleId":"67","severity":1,"message":"68","line":33,"column":26,"nodeType":"69","messageId":"70","endLine":33,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":42,"column":42,"nodeType":"69","messageId":"70","endLine":42,"endColumn":44},{"ruleId":"67","severity":1,"message":"68","line":43,"column":46,"nodeType":"69","messageId":"70","endLine":43,"endColumn":48},{"ruleId":"71","severity":1,"message":"72","line":58,"column":6,"nodeType":"73","endLine":58,"endColumn":19,"suggestions":"82"},{"ruleId":"71","severity":1,"message":"75","line":85,"column":6,"nodeType":"73","endLine":85,"endColumn":26,"suggestions":"83"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formData?.originalData?.usageCategory', 'presentInModifyApplication', 'usageCategoryMajorMenu', 'usagecat', and 'userType'. Either include them or remove the dependency array.","ArrayExpression",["84"],"React Hook useEffect has missing dependencies: 'clearErrors', 'config.key', 'goNext', 'setError', 't', and 'userType'. Either include them or remove the dependency array. If 'setError' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["85"],"no-unused-vars","'CardLabelError' is defined but never used.","Identifier","unusedVar","'validation' is assigned a value but never used.",["86"],["87"],{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},{"desc":"88","fix":"92"},{"desc":"90","fix":"93"},"Update the dependencies array to be: [formData?.originalData?.usageCategory, menuLoading, presentInModifyApplication, usageCategoryMajorMenu, usagecat, userType]",{"range":"94","text":"95"},"Update the dependencies array to be: [clearErrors, config.key, goNext, setError, t, usageCategoryMajor, userType]",{"range":"96","text":"97"},{"range":"98","text":"95"},{"range":"99","text":"97"},[2453,2466],"[formData?.originalData?.usageCategory, menuLoading, presentInModifyApplication, usageCategoryMajorMenu, usagecat, userType]",[3175,3195],"[clearErrors, config.key, goNext, setError, t, usageCategoryMajor, userType]",[2459,2472],[3181,3201]]