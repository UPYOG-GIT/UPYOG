#spring.main.web-environment=false

#New configs
#sms.provider.class=NIC
sms.provider.class=WEBLINTO
#sms.provider.class=MGOV
sms.provider.requestType=GET
#sms.provider.url=https://smsgw.sms.gov.in/failsafe/MLink
#sms.provider.url=https://msdgweb.mgov.gov.in/esms/sendsmsrequest
#sms.provider.url=https://msdgweb.mgov.gov.in/esms/sendsmsrequestDLT
sms.provider.url=https://sms.weblinto.com/smsapi/index
#sms.provider.contentType=application/json
sms.provider.contentType=application/x-www-form-urlencoded
#sms.provider.username=iupyo.sms
sms.provider.username=CGBPMS
#sms.provider.password=C6%rE4#jM3
sms.provider.password=BPMS@123
sms.verify.response = true
sms.print.response = true
sms.verify.responseContains="success":true
sms.verify.ssl = true
#sms.senderid=UPYOG
sms.senderid=CGBPMS
sms.mobile.prefix=
#sms.sender.secure.key=value
sms.sender.secure.key=263C9045F3DA2A
#sms.sender.secure.key=2226fda2-d600-4761-895d-bca7c17a976c
#sms.blacklist.numbers=9999X,5*
sms.blacklist.numbers=
sms.whitelist.numbers=
sms.success.codes=200,201,202
sms.error.codes=
sms.verify.certificate=false
sms.msg.append=""
sms.provider.entityid=263C9045F3DA2A
#sms.provider.entityid=1001842650153206278
#sms.default.tmplid=1
sms.default.tmplid=1207167359714020000
sms.debug.msggateway=true
sms.enabled=true
#msdg
#sms.config.map={'username':'$username', 'pin': '$password', 'signature':'$senderid', 'mnumber':'$mobileno', 'message':'$message', 'smsservicetype':'unicodemsg', 'myParam': '$extraParam' , 'messageType': '$mtype'}
#sms.config.map={'username':'$username', 'pin': '$password', 'signature':'$senderid', 'mnumber':'$mobileno', 'message':'$message', 'smsservicetype':'unicodemsg', 'myParam': '$extraParam' , 'messageType': '$mtype'}
#sms.config.map={'username':'$username', 'pin': '$password','key':'$secureKey', 'signature':'$senderid', 'mnumber':'$mobileno', 'message':'$message', 'smsservicetype':'unicodemsg', 'myParam': '$extraParam' , 'messageType': '$mtype'}
#sms.config.map={'username':'$username', 'password': '$password','key':'$secureKey', 'senderid':'$senderid', 'templateid':'$templateid', 'mobileno':'$mobileno', 'content':'$message', 'smsservicetype':'singlemsg', 'myParam': '$extraParam' , 'messageType': '$mtype'}
sms.config.map={'username':'$username', 'password': '$password','key':'$secureKey', 'senderid':'$senderid', 'templateid':'$templateid', 'contacts':'$mobileno', 'msg':'$message','type':'text'}
sms.category.map={'mtype': {'*': 'abc', 'OTP': 'def'}}
sms.extra.config.map={'extraParam': 'abc'}

# this should be the name of class with first letter in small
sms.url.dont_encode_url = true

# KAFKA CONSUMER CONFIGURATIONS
spring.kafka.consumer.auto_commit=true
spring.kafka.consumer.auto_commit_interval=100
spring.kafka.consumer.session_timeout_ms_config=15000
spring.kafka.consumer.auto_offset_reset=earliest

# KAFKA PRODUCER CONFIGURATIONS

tracer.kafkaMessageLoggingEnabled=true
tracer.errorsTopic=notification-sms-deadletter
debug=true

#Kafka Topic config
spring.kafka.consumer.properties.spring.json.use.type.headers=false
kafka.topics.notification.sms.name=egov.core.notification.sms
kafka.topics.notification.sms.id=notification.sms
kafka.topics.notification.sms.group=sms-group1

#Backup Kafka Topic
kafka.topics.backup.sms=

#ExpiredOTP Topic
kafka.topics.expiry.sms=egov.core.sms.expiry

#Error Topic
kafka.topics.error.sms=egov.core.sms.error

# KAFKA SERVER CONFIGURATIONS
kafka.config.bootstrap_server_config=localhost:9092

spring.kafka.bootstrap.servers=localhost:9092
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
##spring.kafka.consumer.value-deserializer=org.egov.web.notification.sms.consumer.contract.SmsRequestDeserializer
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=sms
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer2
#spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.producer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.properties.spring.json.type.mapping=transaction:io.confluent.solutions.microservices.transaction.Transaction
spring.kafka.producer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer2
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.egov.tracer.kafka.deserializer.HashMapDeserializer
#spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=org.egov
spring.kafka.consumer.properties.spring.json.type.mapping=smsRequest:org.egov.web.notification.sms.consumer.contract.SMSRequest
spring.kafka.listener.missing-topics-fatal=false